import{C as a,f as R,a as O,R as S,K as y,T as K}from"../../terminal-z3zRAHYA.js";import{R as B}from"../../rng-b6XES7-h.js";import{M as H,S as I,G as W}from"../../selectdialog-U1DQ8TTd.js";import{c as P}from"../../path-UyLYMGee.js";import{l as F}from"../../image--3xmi_CO.js";class w{constructor(e,t,s,i,n,r,o){this.game=e,this.x=t,this.y=s,this.char=i,this.name=n,this.color=r,this.blocks=!!o}distanceTo(e){return Math.hypot(e.x-this.x,e.y-this.y)}distance(e,t){return Math.hypot(e-this.x,t-this.y)}sendToBack(){this.remove(),this.game.entities.unshift(this)}remove(){this.game.entities.splice(this.game.entities.indexOf(this),1)}draw(){this.game.map.isVisible(this.x,this.y)&&this.game.app.term.drawString(this.x,this.y,this.char,this.color)}}class m extends w{constructor(e,t,s,i,n,r){super(e,t,s,i,n,r,!0),this.level=1,this.inventory=[],this.hp=0,this.xp=0,this.baseMaxHp=0,this.baseDefense=0,this.basePower=0}move(e,t){this.game.isBlocked(this.x+e,this.y+t)||(this.x+=e,this.y+=t)}moveToward(e,t){const s=e-this.x,i=t-this.y,n=Math.hypot(s,i);this.move(Math.round(s/n),Math.round(i/n))}getEquippedInSlot(e){return this.inventory.find(t=>t.slot===e&&t.equipped)}getAllEquipped(){return this.inventory.filter(e=>e.equipped)}equip(e){const t=this.getEquippedInSlot(e.slot);t&&this.dequip(t),e.equipped=!0,this.game.addMessage("Equipped "+e.name+" on "+e.slot+".",a.LIGHT_GREEN)}dequip(e){e.equipped&&(e.equipped=!1,this.game.addMessage("Dequipped "+e.name+" on "+e.slot+".",a.YELLOW))}get maxHp(){return this.baseMaxHp+this.getAllEquipped().reduce((e,t)=>e+t.maxHpBonus,0)}get defense(){return this.baseDefense+this.getAllEquipped().reduce((e,t)=>e+t.defenseBonus,0)}get power(){return this.basePower+this.getAllEquipped().reduce((e,t)=>e+t.powerBonus,0)}attack(e){const t=this.power-e.defense;t>0?(this.game.addMessage(this.name+" attacks "+e.name+" for "+t+" hit points."),e.takeDamage(t),e.hp===0&&this.takeXp(e.xp)):this.game.addMessage(this.name+" attacks "+e.name+" but it has no effect!")}takeXp(e){this.xp+=e,this.game.checkLevelUp()}takeDamage(e){this.hp-=e,this.hp<=0&&(this.hp=0,this.death())}heal(e){this.hp=Math.min(this.hp+e,this.maxHp)}death(){this===this.game.player?this.game.addMessage("You died!",a.DARK_RED):this.game.addMessage(this.name+" is dead!",a.ORANGE),this.char="%",this.color=a.DARK_RED,this.blocks=!1,this.ai=void 0,this.name="Remains of "+this.name,this.sendToBack()}pickUp(e){this.inventory.length>=26?this.game.addMessage("Your inventory is full, cannot pick up "+e.name+".",a.LIGHT_RED):(this.inventory.push(e),e.remove(),this.game.addMessage("You picked up a "+e.name+"!",a.LIGHT_GREEN))}useItem(e){e.useFunction?e.useFunction(e):this.game.addMessage("The "+e.name+" cannot be used.")}removeItem(e){this.inventory.splice(this.inventory.indexOf(e),1)}setAi(e){this.ai=e,e.owner=this}}const Y=10;class G{constructor(){this.owner=void 0}takeTurn(){const e=this.owner;if(!e)return;const t=e.game,s=t.player;t.map.isVisible(e.x,e.y)&&(e.distanceTo(s)>=2?e.moveToward(s.x,s.y):s.hp>0&&e.attack(s))}}class U{constructor(e){this.owner=void 0,this.oldAi=e,this.numTurns=Y}takeTurn(){if(!this.owner)return;const e=this.owner.game;if(this.numTurns>0){const t=e.rng;this.owner.move(t.nextRange(-1,1),t.nextRange(-1,1)),this.numTurns--}else this.owner.ai=this.oldAi,e.addMessage("The "+this.owner.name+" is no longer confused!",a.LIGHT_RED)}}class f extends w{constructor(e,t,s,i,n,r){super(e,t,s,i,n,r,!1),this.powerBonus=0,this.defenseBonus=0,this.maxHpBonus=0,this.slot="",this.equipped=!1}}const q=80,V=45,E=80,T=39,L=20,_=7,x=V-_,X=L+2,j=_-1,k=10,C=6,Z=30,$=10,J=4,b=20,z=5,Q=8,ee=10,D=3,N=12,M=200,A=150,te=R(0,0,100),se=R(130,110,50),ie=R(50,50,150),ne=R(200,180,50);class ae{constructor(e){this.app=e,this.rng=new B(Date.now()),this.player=new m(this,40,25,"@","Player",a.WHITE),this.player.level=1,this.player.hp=100,this.player.baseMaxHp=100,this.player.baseDefense=1,this.player.basePower=4,this.entities=[this.player],this.messages=[],this.level=1,this.map=this.createMap(),this.fovRecompute=!0,this.targetCursor={x:0,y:0},this.pathIndex=0,this.pathWalking=!1,this.addMessage("Welcome stranger! Prepare to perish!",a.DARK_RED);const t=new f(this,0,0,"-","Dagger",a.LIGHT_CYAN);t.slot="right hand",t.powerBonus=2,this.player.inventory.push(t),this.player.equip(t)}isBlocked(e,t){if(this.map.grid[t][e].blocked)return!0;for(let s=0;s<this.entities.length;s++){const i=this.entities[s];if(i.blocks&&i.x===e&&i.y===t)return!0}return!1}createRoom(e,t){for(let s=t.y+1;s<t.y2;s++)for(let i=t.x+1;i<t.x2;i++)e.grid[s][i].blocked=!1,e.grid[s][i].blockedSight=!1}createHTunnel(e,t,s,i){for(let n=Math.min(t,s);n<=Math.max(t,s);n++)e.grid[i][n].blocked=!1,e.grid[i][n].blockedSight=!1}createVTunnel(e,t,s,i){for(let n=Math.min(t,s);n<=Math.max(t,s);n++)e.grid[n][i].blocked=!1,e.grid[n][i].blockedSight=!1}createMap(){const e=new O(E,T);for(let i=0;i<T;i++)for(let n=0;n<E;n++)e.grid[i][n].blocked=!0,e.grid[i][n].blockedSight=!0;const t=[];for(let i=0;i<Z;i++){const n=this.rng.nextRange(C,k),r=this.rng.nextRange(C,k),o=this.rng.nextRange(0,E-n-1),c=this.rng.nextRange(0,T-r-1),l=new S(o,c,n,r);let g=!1;for(let h=0;h<t.length;h++)if(l.intersects(t[h])){g=!0;break}if(!g){this.createRoom(e,l);const h=l.getCenter();if(t.length===0)this.player.x=h.x,this.player.y=h.y;else{const p=t[t.length-1].getCenter();this.rng.nextRange(0,1)===1?(this.createHTunnel(e,p.x,h.x,p.y),this.createVTunnel(e,p.y,h.y,h.x)):(this.createVTunnel(e,p.y,h.y,p.x),this.createHTunnel(e,p.x,h.x,h.y))}i>0&&this.placeObjects(l),t.push(l)}}const s=t[t.length-1].getCenter();return this.stairs=new w(this,s.x,s.y,"<","Stairs",a.WHITE),this.entities.push(this.stairs),this.stairs.sendToBack(),e}fromDungeonLevel(e){for(let t=0;t<e.length;t++){const s=e[t][0],i=e[t][1];if(this.level>=i)return s}return 0}placeObjects(e){const t=this.fromDungeonLevel([[1,1],[2,2],[3,4],[5,6]]),s={orc:80,troll:this.fromDungeonLevel([[15,3],[30,5],[60,7]])},i=this.fromDungeonLevel([[1,1],[2,4]]),n={heal:35,lightning:this.fromDungeonLevel([[25,4]]),fireball:this.fromDungeonLevel([[25,6]]),confuse:this.fromDungeonLevel([[10,2]]),sword:this.fromDungeonLevel([[5,4]]),shield:this.fromDungeonLevel([[15,8]])},r=this.rng.nextRange(0,t+1);for(let c=0;c<r;c++){const l=this.rng.nextRange(e.x+1,e.x2-1),g=this.rng.nextRange(e.y+1,e.y2-1);let h=null;const p=this.rng.chooseKey(s);p==="orc"?(h=new m(this,l,g,"o","Orc",a.LIGHT_GREEN),h.hp=20,h.baseDefense=0,h.basePower=4,h.xp=35,h.setAi(new G)):p==="troll"&&(h=new m(this,l,g,"T","Troll",a.DARK_GREEN),h.hp=30,h.baseDefense=2,h.basePower=8,h.xp=100,h.setAi(new G)),h&&this.entities.push(h)}const o=this.rng.nextRange(0,i+1);for(let c=0;c<o;c++){const l=this.rng.nextRange(e.x+1,e.x2-1),g=this.rng.nextRange(e.y+1,e.y2-1);let h=null;const p=this.rng.chooseKey(n);p==="heal"?(h=new f(this,l,g,"!","Healing Potion",a.DARK_MAGENTA),h.useFunction=u=>this.castHeal(u)):p==="lightning"?(h=new f(this,l,g,"#","Scroll of Lightning Bolt",a.YELLOW),h.useFunction=u=>this.castLightning(u)):p==="fireball"?(h=new f(this,l,g,"#","Scroll of Fireball",a.YELLOW),h.useFunction=u=>this.castFireball(u)):p==="confuse"?(h=new f(this,l,g,"#","Scroll of Confusion",a.YELLOW),h.useFunction=u=>this.castConfuse(u)):p==="sword"?(h=new f(this,l,g,"/","Sword",a.LIGHT_CYAN),h.useFunction=u=>this.player.equip(u)):p==="shield"&&(h=new f(this,l,g,"[","Shield",a.BROWN),h.useFunction=u=>this.player.equip(u)),h&&(this.entities.push(h),h.sendToBack())}}renderBar(e,t,s,i,n,r,o,c){const l=Math.round(n/r*s);this.app.term.fillRect(e,t,s,1,0,0,c),l>0&&this.app.term.fillRect(e,t,l,1,0,0,o),this.app.term.drawCenteredString(e+s/2,t,i+": "+n+"/"+r,a.WHITE)}getNamesUnderMouse(){const e=this.app.term.mouse.x,t=this.app.term.mouse.y;if(!this.map.isVisible(e,t))return"";const s=[];for(let i=0;i<this.entities.length;i++){const n=this.entities[i];n.x===e&&n.y===t&&s.push(n.name)}return s.join(", ")}addMessage(e,t){for(;this.messages.length>=j;)this.messages.shift();this.messages.push({text:e,color:t||a.WHITE})}playerMoveOrAttack(e,t){const s=this.player.x+e,i=this.player.y+t;let n=null;for(let r=0;r<this.entities.length;r++){const o=this.entities[r];if(o instanceof m&&o!=this.player&&o.x===s&&o.y===i){n=o;break}}n&&n.blocks?this.player.attack(n):(this.player.move(e,t),this.fovRecompute=!0);for(let r=0;r<this.entities.length;r++){const o=this.entities[r];o instanceof m&&o.ai&&o.ai.takeTurn()}}handleKeys(){var s,i;if(this.player.hp<=0||this.app.gui.handleInput())return;const e=this.app.term,t=e.getMovementKey();if(this.targetFunction){(e.isKeyPressed(y.VK_ENTER)||e.mouse.buttons.get(0).isClicked())&&this.endTargeting(this.targetCursor.x,this.targetCursor.y),(e.isKeyPressed(y.VK_ESCAPE)||e.mouse.buttons.get(2).isClicked())&&this.cancelTargeting(),t&&(this.targetCursor.x+=t.x,this.targetCursor.y+=t.y),(e.mouse.dx!==0||e.mouse.dy!==0)&&(this.targetCursor.x=e.mouse.x,this.targetCursor.y=e.mouse.y);return}if(t&&this.playerMoveOrAttack(t.x,t.y),e.isKeyPressed(y.VK_G))for(let n=0;n<this.entities.length;n++){const r=this.entities[n];r instanceof f&&r.x===this.player.x&&r.y===this.player.y&&this.player.pickUp(r)}if(e.isKeyPressed(y.VK_I))if(this.player.inventory.length===0)this.app.gui.add(new H("ALERT","Inventory is empty"));else{const n=this.player.inventory.map(r=>r.equipped?r.name+" (on "+r.slot+")":r.name);this.app.gui.add(new I("INVENTORY",n,r=>this.useInventory(r)))}if(e.isKeyPressed(y.VK_C)){const n=M+this.player.level*A;this.app.gui.add(new H("CHARACTER","Level: "+this.player.level+`
Experience: `+this.player.xp+`
Experience to level up: `+n+`

Maximum HP: `+this.player.maxHp+`
Attack: `+this.player.power+`
Defense: `+this.player.defense))}if(e.isKeyPressed(y.VK_COMMA)&&this.player.x===((s=this.stairs)==null?void 0:s.x)&&this.player.y===((i=this.stairs)==null?void 0:i.y)&&this.nextLevel(),this.pathWalking||(e.mouse.x>=0&&e.mouse.x<E&&e.mouse.y>=0&&e.mouse.y<T?this.path=P(this.map,this.player,e.mouse,100):this.path=void 0),!this.pathWalking&&this.path&&e.mouse.buttons.get(0).isClicked()&&(this.pathWalking=!0,this.pathIndex=0),this.pathWalking&&this.path&&this.pathIndex>=0){for(;this.pathIndex<this.path.length&&this.player.x===this.path[this.pathIndex].x&&this.player.y===this.path[this.pathIndex].y;)this.pathIndex++;if(this.pathIndex<this.path.length){const n=this.path[this.pathIndex];this.playerMoveOrAttack(n.x-this.player.x,n.y-this.player.y),(this.player.x!==n.x||this.player.y!==n.y)&&(this.pathWalking=!1,this.pathIndex=-1,this.path=void 0)}else this.pathWalking=!1,this.pathIndex=-1,this.path=void 0}}useInventory(e){e>=0&&this.player.useItem(this.player.inventory[e])}checkLevelUp(){const e=M+this.player.level*A;if(this.player.xp>=e){this.player.level++,this.player.xp-=e,this.addMessage("Your battle skills grow stronger! You reached level "+this.player.level+"!",a.YELLOW);const t=["Constitution (+20 HP, from "+this.player.maxHp+")","Strength (+1 attack, from "+this.player.power+")","Agility (+1 defense, from "+this.player.defense+")"];this.app.gui.add(new I("LEVEL UP",t,s=>{s===0?(this.player.baseMaxHp+=20,this.player.hp+=20):s===1?this.player.basePower+=1:s===2&&(this.player.baseDefense+=1)}))}}getClosestMonster(e,t,s){let i=s+1,n=null;for(let r=0;r<this.entities.length;r++){const o=this.entities[r];if(o instanceof m&&o!==this.player){const c=o.distance(e,t);c<i&&(i=c,n=o)}}return n}getMonsterAt(e,t){return this.getClosestMonster(e,t,0)}castHeal(e){if(this.player.hp===this.player.maxHp){this.addMessage("You are already at full health.",a.DARK_RED);return}this.addMessage("Your wounds start to feel better!",a.LIGHT_MAGENTA),this.player.heal(J),this.player.removeItem(e)}castLightning(e){const t=this.getClosestMonster(this.player.x,this.player.y,z);if(!t){this.addMessage("No enemy is close enough to strike.",a.LIGHT_RED);return}this.addMessage("A lightning bolt strikes the "+t.name+" with a loud thunder!",a.LIGHT_BLUE),this.addMessage("The damage is "+b+" hit points",a.LIGHT_BLUE),t.takeDamage(b),this.player.removeItem(e)}castFireball(e){this.addMessage("Left-click to cast fireball, or right-click to cancel.",a.LIGHT_CYAN),this.startTargeting((t,s)=>{if(this.player.distance(t,s)>ee){this.addMessage("Target out of range.",a.LIGHT_GRAY);return}this.addMessage("The fireball explodes, burning everything within "+D+" tiles!",a.ORANGE);for(let i=0;i<this.entities.length;i++){const n=this.entities[i];n instanceof m&&n.hp>0&&n.distance(t,s)<=D&&(this.addMessage("The "+n.name+" gets burned for "+N+" hit points.",a.ORANGE),n.takeDamage(N))}this.player.removeItem(e)})}castConfuse(e){this.addMessage("Left-click to cast confuse, or right-click to cancel.",a.LIGHT_CYAN),this.startTargeting((t,s)=>{if(this.player.distance(t,s)>Q){this.addMessage("Target out of range.",a.LIGHT_GRAY);return}const i=this.getMonsterAt(t,s);if(!i){this.addMessage("No monster there.",a.LIGHT_GRAY);return}i.setAi(new U(i.ai)),this.addMessage("The eyes of the "+i.name+" look vacant, as he stumbles around!",a.LIGHT_GREEN),this.player.removeItem(e)})}startTargeting(e){this.targetFunction=e,this.targetCursor.x=this.player.x,this.targetCursor.y=this.player.y}endTargeting(e,t){this.targetFunction&&(this.targetFunction(e,t),this.cancelTargeting())}cancelTargeting(){this.targetFunction=void 0}renderAll(){const e=this.app.term;this.fovRecompute&&(this.map.computeFov(this.player.x,this.player.y,$),this.fovRecompute=!1);for(let s=0;s<T;s++)for(let i=0;i<E;i++){const n=this.map.isVisible(i,s),r=this.map.grid[s][i].blockedSight;let o=a.BLACK;n?(o=r?se:ne,this.map.grid[s][i].explored=!0):this.map.grid[s][i].explored&&(o=r?te:ie),e.drawChar(i,s,0,0,o)}if(!this.pathWalking&&this.path)for(let s=1;s<this.path.length;s++)e.drawChar(this.path[s].x,this.path[s].y,0,0,a.WHITE);for(let s=0;s<this.entities.length;s++)this.entities[s].draw();e.fillRect(0,x,q,_,0,a.WHITE,a.BLACK);let t=x+1;for(let s=0;s<this.messages.length;s++){const i=this.messages[s];e.drawString(X,t,i.text,i.color),t++}if(this.renderBar(1,x+1,L,"HP",this.player.hp,this.player.maxHp,a.LIGHT_RED,a.DARK_RED),this.renderBar(1,x+2,L,"XP",this.player.xp,M+this.player.level*A,a.LIGHT_MAGENTA,a.DARK_MAGENTA),e.drawString(1,x+4,"Dungeon level "+this.level,a.ORANGE),e.drawString(1,x,this.getNamesUnderMouse(),a.LIGHT_GRAY),this.targetFunction){const s=e.getCell(this.targetCursor.x,this.targetCursor.y);s&&s.setBackground(a.WHITE)}this.app.gui.draw()}nextLevel(){this.addMessage("You take a moment to rest, and recover your strength.",a.LIGHT_MAGENTA),this.player.heal(this.player.maxHp/2),this.level++,this.addMessage("After a rare moment of peace, you descend deeper...",a.LIGHT_RED),this.entities=[this.player],this.map=this.createMap(),this.fovRecompute=!0}update(){this.handleKeys(),this.renderAll()}}let v=null;F("../../menu.png",d=>{v=d});class he{constructor(e){this.app=e}update(){const e=this.app.term,t=this.app.gui;if(t.dialogs.length===0){const s=["Play a new game","Continue last game"];t.add(new I("MAIN MENU",s,i=>{switch(i===0?this.app.newGame():i===1&&this.app.continueGame(),i){case 0:this.app.newGame();break;case 1:this.app.continueGame();break}}))}t.handleInput(),e.clear(),v&&e.drawConsole(0,0,v,0,0,80,50),e.drawCenteredString(40,10,"TOMBS OF THE ANCIENT KINGS",a.YELLOW),e.drawCenteredString(40,12,"By Jotaf",a.YELLOW),t.draw()}}const re=80,oe=45;class le{constructor(){this.term=new K(document.querySelector("canvas"),re,oe,{maxFps:15,crt:{scale:6,blur:.5,curvature:.1,chroma:.5,vignette:.15,scanlineWidth:.75,scanlineIntensity:.25}}),this.gui=new W(this.term),this.mainMenu=new he(this),this.state=this.mainMenu,this.term.update=()=>this.state.update()}newGame(){this.game=new ae(this),this.state=this.game}continueGame(){this.game&&(this.state=this.game)}}new le;
