{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","g","b","a","undefined","fromHsv","h","f","q","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","ItemShortcutButton","containerItems","shortcutItem","item","getItem","player","dst","count","countItems","drawRightString","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","ItemButton","initialItem","stackItems","TargetType","Entity","blocks","offset","zIndex","pixelX","tileSize","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","seen","j","dx","dy","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","animations","SlideAnimation","blocked","move","targetX","targetY","abs","target","damage","onAttack","takeDamage","BumpAnimation","heal","min","addFloatingText","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextAnimation","animation_1","DURATION","entity","update","floor","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","Mouse","prev","dragDistance","longPress","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","buttonslot_1","itembutton_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","ai","rng","FadeInAnimation","duration","blackoutRect","alpha","max","FadeOutAnimation","ProjectileAnimation","position","velocity","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","Game","viewportFocus","turnIndex","cursor","TooltipDialog","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","messageLog","animation","updateGlobalAnimations","updateTooltip","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","focusLeftX","ceil","focusTopY","tileMap","isTargeting","targetSprite","z","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","getCell","cancelTargeting","isKeyDown","endTargeting","targetTile","path","nextStep","stopAutoWalk","right","up","wait","tryMoveOrAttack","onBump","minX","minY","maxX","maxY","pathTile","endTurn","recomputeFov","recalculateViewportFocus","startTurn","computeFov","dialog_1","WIDTH","MARGIN","LINE_PADDING","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","containerRect","buttonRect","message_1","MessageLog","maxItems","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","shortcutbuttonslot_1","DEFAULT_SPACING","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","user","Talent","rank","tilemapVS","tilemapFS","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","vradius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    tooltip.visible = false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayListListener} from './arraylistlistener';\n\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() {}\n\n  endTurn() {}\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {BumpAnimation} from './animations/bumpanimation';\nimport {FloatingTextAnimation} from './animations/floatingtextanimation';\nimport {SlideAnimation} from './animations/slideanimation';\nimport {ArrayList} from './arraylist';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {TileMapCell} from './tilemap';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    // TODO: Enforce distance check?\n\n    this.onAttack(target, damage);\n    target.takeDamage(damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(damage: number) {\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity|TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath() {}\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.0) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Key, Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly animations: Animation[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.animations = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawAnimations();\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width;\n    this.viewport.height = this.app.size.height;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = 0.1 * focusLeftX - 0.1 * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = 0.1 * focusTopY - 0.1 * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity.zIndex === z && (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y))) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.viewportFocus.y -= 2 * this.tileSize.height;\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.viewportFocus.x -= 2 * this.tileSize.width;\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.viewportFocus.x += 2 * this.tileSize.width;\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.viewportFocus.y += 2 * this.tileSize.height;\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.cursor.y--;\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.cursor.x--;\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.cursor.x++;\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    const down = this.isKeyPressed(DOWN_KEYS) || (nextStep && nextStep.y > this.player.y);\n    const left = this.isKeyPressed(LEFT_KEYS) || (nextStep && nextStep.x < this.player.x);\n    const right = this.isKeyPressed(RIGHT_KEYS) || (nextStep && nextStep.x > this.player.x);\n    const up = this.isKeyPressed(UP_KEYS) || (nextStep && nextStep.y < this.player.y);\n    const wait = this.isKeyPressed(WAIT_KEYS);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.ap = 0;\n    }\n  }\n\n  private isKeyPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.app.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        this.stopAutoWalk();\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Find the bounds of desired area\n    let minX = player.pixelX;\n    let minY = player.pixelY;\n    let maxX = minX + player.sprite.width;\n    let maxY = minY + player.sprite.height;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * this.tileSize.width);\n        minY = Math.min(minY, pathTile.y * this.tileSize.height);\n        maxX = Math.max(maxX, (pathTile.x + 1) * this.tileSize.width);\n        maxY = Math.max(maxY, (pathTile.y + 1) * this.tileSize.height);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor && this.tileMap && this.tileMap.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.pixelX);\n          minY = Math.min(minY, entity.pixelY);\n          maxX = Math.max(maxX, entity.pixelX + entity.sprite.width);\n          maxY = Math.max(maxY, entity.pixelY + entity.sprite.height);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n    this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities[this.turnIndex];\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n        this.recalculateViewportFocus();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities[this.turnIndex];\n      nextEntity.startTurn();\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player || !this.tileMap) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n    // this.modal = true;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\n\nconst DEFAULT_SPACING = 2;\n\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && slot.button.shortcutItem.name === item.name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\n\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   if (gl_FragColor.a == 0.0) discard;' +\n    '   gl_FragColor.a *= tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.minX = Math.max(0, originX - dx);\n    this.minY = Math.max(0, originY - dy);\n    this.maxX = Math.min(this.width - 1, originX + dx);\n    this.maxY = Math.min(this.height - 1, originY + dy);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}