{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/serializable.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/palettes/standardcolors.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/tilemap/tilemap.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/tilemap/tilemaprenderer.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/serializemetadata.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/tilemap/tilemapcell.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/compoundmessage.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/tilemap/tilemaplayer.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/palettes/cgacolors.ts","webpack://wglt/./src/palettes/pico8colors.ts","webpack://wglt/./src/serializer.ts","webpack://wglt/./src/talent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializemetadata_1","KNOWN_CLASSES","Serializable","options","ctor","metadata","createSerializeMetadata","className","valueType","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","__decorate","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","StandardColors","fromRgb","g","b","a","undefined","fromHsv","h","v","f","q","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","standardcolors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","drawImage","cx","cy","drawCenteredString","toString","BLACK","WHITE","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","tilemapcell_1","rect_1","tilemaplayer_1","getTileId","tileX","tileY","TileMap","layerCount","tileSize","depth","grid","Array","layers","dirty","originX","originY","visibleRect","prevVisibleRect","TileMapCell","TileMapLayer","z","clear","isOutOfRange","getTile","tile","setTile","blocked","blockedSight","cell","getCell","seen","isAnimated","animated","setAnimated","radius","vradius","copy","dx","dy","max","min","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","floor","idx","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","Entity","blocks","offset","zIndex","pixelX","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","itembutton_1","GUI","DialogRenderer","rootPanel","size","dragOffset","updateDragging","target","onDrop","move","removeAll","Message","text","color","pos","drawString","glutils_1","tilemapVS","tilemapFS","TileMapRenderer","gl","tileMap","quadVertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","tilemapShader","initShaderProgram","positionAttribute","getAttribLocation","textureAttribute","viewportSizeUniform","getUniformLocation","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","layerTextures","texture","createTexture","imageData","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","animFrame","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1f","activeTexture","TEXTURE0","uniform1i","TEXTURE1","minX","minY","maxX","maxY","layer","alpha","isVisible","isSeen","setAlpha","texSubImage2D","drawArrays","TRIANGLES","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","j","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","animations","SlideAnimation","targetX","targetY","abs","damage","onAttack","takeDamage","BumpAnimation","heal","addFloatingText","GREEN","attacker","RED","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","FloatingTextAnimation","animation_1","DURATION","entity","update","METADATA_KEY","SerializeMetadata","getSerializeMetadata","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","canvas","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","style","outline","tabIndex","focus","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","Keyboard","Mouse","addEventListener","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","state","flush","requestAnimationFrame","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","dw","dh","out","keyCode","getKey","isKeyArrayPressed","keys","input_1","KEY_COUNT","e","setKey","stopPropagation","preventDefault","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","getBoundingClientRect","terminalAspectRatio","rectAspectRatio","actualWidth","excess","actualHeight","mwe","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","url","program","viewportSizeLocation","positionLocation","texcoordLocation","colorLocation","positionBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","texcoordArray","colorUint8Array","Uint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","charCode","charCodeAt","isInRange","getOffset","getWidth","optColor","optDw","optDh","loaded","tx","ty","tx2","ty2","setUint32","DYNAMIC_DRAW","normalize","stride","primitiveType","loadShader","source","shader","createShader","shaderSource","compileShader","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","internalFormat","srcFormat","srcType","pixel","image","Image","onload","generateMipmap","gui_1","AppState","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dx1","dy1","dx2","dy2","sx","sy","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","serializable_1","tilemap_1","tilemaprenderer_1","DEFAULT_MAP_SIZE","Game","viewportFocus","focusMargins","turnIndex","cursor","TooltipDialog","rng","RNG","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","mapSize","mapLayers","tileMapRenderer","message","messageLog","animation","Sprite","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","globalAnimIndex","isTargeting","targetSprite","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","cancelTargeting","ai","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","computePath","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","map","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","buildPath","result","curr","reverse","dest","maxDist","clearDijkstra","sourceCell","alt","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","seed","mt","mti","setSeed","mag01","kk","nextInt","end","nextFloat","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Sprite_1","loop","ticksPerFrame","colorOverride","animIndex","animDelay","buttonslot_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","FadeInAnimation","duration","blackoutRect","FadeOutAnimation","ProjectileAnimation","position","velocity","START_CHAR_CODE","END_CHAR_CODE","Font","sum","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","message_1","CompoundMessage","dialog_1","lineHeight","msg","getIndex","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","YELLOW","ImagePanel","srcRect","itemcontainerbuttonslot_1","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","MessageLog","maxItems","bottom","MessagePanel","SelectDialog","close","shortcutbuttonslot_1","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","CgaColors","Pico8Colors","game_1","app_1","Serializer","typeLists","obj","serializeObject","refs","objType","constructor","Function","serializeArray","refType","_c","_i","typeList","properties","getOwnPropertyNames","propertyCount","serializedValue","Talent","rank"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","import { createSerializeMetadata, SerializeMetadata } from \"./serializemetadata\";\n\nexport const KNOWN_CLASSES: { [name: string]: SerializeMetadata } = {};\n\nexport interface SerializableOptions {\n  valueType?: boolean;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n\nexport function Serializable(name: string, options?: SerializableOptions) {\n  return function (ctor: Function) {\n    const metadata = createSerializeMetadata(ctor);\n    metadata.className = name;\n\n    if (options) {\n      metadata.valueType = !!options.valueType;\n    }\n\n    KNOWN_CLASSES[name] = metadata;\n  };\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import { Serializable } from \"./serializable\";\n\n@Serializable('Vec2')\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Panel')\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from '../color';\n\nexport enum StandardColors {\n  BLACK = fromRgb(0, 0, 0),\n  WHITE = fromRgb(0xFF, 0xFF, 0xFF),\n  GRAY = fromRgb(0x80, 0x80, 0x80),\n  YELLOW = fromRgb(0xFF, 0xFF, 0x00),\n  RED = fromRgb(0xFF, 0x00, 0x00),\n  GREEN = fromRgb(0x00, 0xFF, 0x00),\n  CYAN = fromRgb(0x00, 0xFF, 0xFF),\n  BLUE = fromRgb(0x00, 0x00, 0xFF),\n  PINK = fromRgb(0xFF, 0x00, 0xFF),\n  ORANGE = fromRgb(0xFF, 0x80, 0x00),\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('Dialog')\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\nimport { Serializable } from './serializable';\n\n@Serializable('ArrayList')\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {StandardColors} from '../palettes/standardcolors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('TalentButton')\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, StandardColors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, StandardColors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemButton')\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemShortcutButton')\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Button')\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import { TileMapCell } from \"./tilemapcell\";\nimport { Rect } from \"../rect\";\nimport { TileMapLayer } from \"./tilemaplayer\";\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return tileY * 64 + tileX;\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly width: number;\n  readonly height: number;\n  readonly depth: number;\n  readonly tileSize: Rect;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  dirty: boolean;\n\n  // Field-of-view state\n  originX: number;\n  originY: number;\n  visibleRect: Rect;\n  prevVisibleRect: Rect;\n\n  constructor(width: number, height: number, layerCount: number, tileSize: Rect) {\n    this.width = width;\n    this.height = height;\n    this.depth = layerCount;\n    this.tileSize = tileSize;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n  }\n\n  isOutOfRange(x: number, y: number, z: number) {\n    return x < 0 || x >= this.width ||\n        y < 0 || y >= this.height ||\n        z < 0 || z >= this.depth;\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  getTile(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return 0;\n    }\n    return this.layers[z].getTile(x, y);\n  }\n\n  setTile(x: number, y: number, z: number, tile: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setTile(x, y, tile);\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return true;\n    }\n    return this.grid[y][x].blocked;\n  }\n\n  setBlocked(x: number, y: number, blocked: boolean, blockedSight?: boolean) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return;\n    }\n    this.grid[y][x].blocked = blocked;\n    this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : blocked;\n  }\n\n  getCell(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return null;\n    }\n    return this.grid[y][x];\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(x: number, y: number) {\n    const cell = this.getCell(x, y);\n    return cell && cell.seen;\n  }\n\n  setSeen(x: number, y: number, seen: boolean) {\n    const cell = this.getCell(x, y);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return false;\n    }\n    return this.layers[z].isAnimated(x, y);\n  }\n\n  setAnimated(x: number, y: number, z: number, animated: boolean) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setAnimated(x, y, animated);\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n      y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n        processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n        x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n      x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n        processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n        y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ButtonSlot')\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import { Actor } from './actor';\nimport { Entity } from './entity';\nimport { Message } from './message';\nimport { Sprite } from './sprite';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity | TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\nimport { Serializable } from './serializable';\n\n@Serializable('Entity')\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\nimport { Serializable } from './serializable';\n\n@Serializable('GUI')\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n\n  draw(app: App, pos: Vec2) {\n    app.drawString(this.text, pos.x, pos.y, this.color, pos);\n  }\n}\n","\nimport { initShaderProgram } from \"../glutils\";\nimport { TileMap } from \"./tilemap\";\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n  'attribute vec2 position;' +\n  'attribute vec2 texture;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 viewOffset;' +\n  'uniform vec2 viewportSize;' +\n  'uniform vec2 tileSize;' +\n  'uniform vec2 mapSize;' +\n\n  'void main(void) {' +\n  '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n  '   texCoord = pixelCoord / mapSize / tileSize;' +\n  '   gl_Position = vec4(position, 0.0, 1.0);' +\n  '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 tileSize;' +\n  'uniform float animFrame;' +\n  'uniform sampler2D tiles;' +\n  'uniform sampler2D sprites;' +\n\n  'void main(void) {' +\n  '   vec4 tile = texture2D(tiles, texCoord);' +\n  '   if(tile.x == 0.0 && tile.y == 0.0) { discard; }' +\n  '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n  '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n  '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n  '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n  '   if (gl_FragColor.a == 0.0) discard;' +\n  '   gl_FragColor.a *= tile.a;' +\n  '}';\n\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMapRenderer {\n  readonly gl: WebGLRenderingContext;\n  readonly tileMap: TileMap;\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n  private readonly layerTextures: WebGLTexture[];\n\n  constructor(gl: WebGLRenderingContext, tileMap: TileMap) {\n    this.gl = gl;\n    this.tileMap = tileMap;\n\n    const quadVerts = [\n      // x   y   u  v\n      -1, -1, 0, 1,\n      1, -1, 1, 1,\n      1, 1, 1, 0,\n      -1, -1, 0, 1,\n      1, 1, 1, 0,\n      -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    this.layerTextures = new Array(tileMap.depth);\n\n    for (let i = 0; i < tileMap.depth; i++) {\n      const texture = gl.createTexture() as WebGLTexture;\n      const imageData = tileMap.layers[i].imageData;\n\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, tileMap.width, tileMap.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      // MUST be filtered with NEAREST or tile lookup fails\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      this.layerTextures[i] = texture;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n    const tileMap = this.tileMap;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, tileMap.tileSize.width, tileMap.tileSize.height);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(tileMap.visibleRect.x1, tileMap.prevVisibleRect.x1);\n    const minY = Math.min(tileMap.visibleRect.y1, tileMap.prevVisibleRect.y1);\n    const maxX = Math.max(tileMap.visibleRect.x2, tileMap.prevVisibleRect.x2);\n    const maxY = Math.max(tileMap.visibleRect.y2, tileMap.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < tileMap.depth; i++) {\n      const layer = tileMap.layers[i];\n      const texture = this.layerTextures[i];\n      gl.uniform2f(this.mapSizeUniform, tileMap.width, tileMap.height);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      if (tileMap.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = tileMap.isVisible(x, y) ? 255 : tileMap.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, layer.width, layer.height, gl.RGBA, gl.UNSIGNED_BYTE, layer.imageData);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    tileMap.dirty = false;\n  }\n}\n","import { Ability, TargetType } from './ability';\nimport { AI } from './ai/ai';\nimport { BumpAnimation } from './animations/bumpanimation';\nimport { FloatingTextAnimation } from './animations/floatingtextanimation';\nimport { SlideAnimation } from './animations/slideanimation';\nimport { ArrayList } from './arraylist';\nimport { Color } from './color';\nimport { StandardColors } from './palettes/standardcolors';\nimport { Entity } from './entity';\nimport { Game } from './game';\nimport { Item } from './item';\nimport { Sprite } from './sprite';\nimport { Talent } from './talent';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\n@Serializable('Actor')\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), StandardColors.GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), StandardColors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity | TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) { }\n  onDeath(attacker: Actor) { }\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {StandardColors} from '../palettes/standardcolors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || StandardColors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nconst METADATA_KEY = '__wgltMetadata';\n\nexport function createSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = new SerializeMetadata(ctor);\n  ctor[METADATA_KEY] = metadata;\n  return metadata;\n}\n\nexport function getSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = ctor[METADATA_KEY];\n  return metadata || createSerializeMetadata(ctor);\n}\n\nexport class SerializeMetadata {\n  ctor: { new(): any; };\n  className: string = 'Object';\n  valueType: boolean = false;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n\n  constructor(ctor: { new(): any; }) {\n    this.ctor = ctor;\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7, Keys.VK_Y];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9, Keys.VK_U];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1, Keys.VK_B];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3, Keys.VK_N];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x: number, y: number, color?: Color, out?: Vec2) {\n    this.renderSet.drawString(str, x, y, color, out);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\nimport { Vec2 } from './vec2';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color, out?: Vec2) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let x = x0;\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      if (i > 0) {\n        x = x0;\n        y += height;\n      }\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n    }\n    if (out) {\n      out.x = x;\n      out.y = y;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","\n/**\n * The ExtendedTexture class \"extends\" WebGLTexture and\n * provides additional helper properties.\n *\n * It is not actually a class, as we are really just dynamically\n * adding properties to a WebGLTexture object.\n *\n * Previously this was actually a class, and actually extended WebGLTexture.\n * However, that caused type errors with Jest.\n * This works well enough.\n */\nexport interface ExtendedTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('DialogRenderer')\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {StandardColors} from './palettes/standardcolors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapRenderer } from './tilemap/tilemaprenderer';\nimport { Message } from './message';\n\nconst DEFAULT_MAP_SIZE = new Rect(0, 0, 256, 256);\nconst DEFAULT_MAP_LAYERS = 1;\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n@Serializable('Game')\nexport class Game extends AppState {\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly focusMargins: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap: TileMap;\n  tileMapRenderer: TileMapRenderer;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.focusMargins = options.focusMargins || new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n\n    const mapSize = options.mapSize || DEFAULT_MAP_SIZE;\n    const mapLayers = options.mapLayers || DEFAULT_MAP_LAYERS;\n    const tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.tileMap = new TileMap(mapSize.width, mapSize.height, mapLayers, tileSize);\n    this.tileMapRenderer = new TileMapRenderer(app.gl, this.tileMap);\n  }\n\n  get tileSize() {\n    return this.tileMap.tileSize;\n  }\n\n  log(message: string|Message, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(message, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMapRenderer.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileMap.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileMap.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && this.tileMap.isVisible(entity.x, entity.y)) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileMap.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileMap.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n      const target = this.tileMap.getCell(tx, ty);\n      if (target && target !== this.targetTile) {\n        this.targetTile = target;\n        this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n        this.pathIndex = 0;\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    const tileWidth = map.tileSize.width;\n    const tileHeight = map.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= (this.viewport.width - 2 * this.focusMargins.x)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= (this.viewport.height - 2 * this.focusMargins.y)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', StandardColors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","\nimport { Vec2 } from './vec2';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell | null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","/*\n * Random number generator.\n *\n * Currently using a Mersenne Twister based on:\n * https://gist.github.com/banksean/300494\n *\n * Old version used LCG\n * https://stackoverflow.com/a/424445/2051724\n * but had precision issues which led to cycle issues.\n */\n\n/* Period parameters */\nconst N = 624;\nconst M = 397;\nconst MATRIX_A = 0x9908b0df;   /* constant vector a */\nconst UPPER_MASK = 0x80000000; /* most significant w-r bits */\nconst LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\nexport class RNG {\n  private readonly mt: number[];\n  private mti: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    this.mt = new Array(N); /* the array for the state vector */\n    this.mti = N + 1; /* mti==N+1 means mt[N] is not initialized */\n    this.setSeed(seed || 1);\n  }\n\n  setSeed(s: number) {\n    // this.state = seed;\n    this.mt[0] = s >>> 0;\n    for (this.mti = 1; this.mti < N; this.mti++) {\n      const s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n      this.mt[this.mti] =\n        (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\n          (s & 0x0000ffff) * 1812433253) + this.mti;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n      /* In the previous versions, MSBs of the seed affect   */\n      /* only MSBs of the array mt[].                        */\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      this.mt[this.mti] >>>= 0;\n      /* for >32 bit machines */\n    }\n  }\n\n  nextInt() {\n    let y = 0;\n    const mag01 = new Array(0x0, MATRIX_A);\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n    if (this.mti >= N) { /* generate N words at one time */\n      var kk;\n\n      // if (this.mti == N+1)   /* if init_genrand() has not been called, */\n      //   this.setSeed(5489); /* a default initial seed is used */\n\n      for (kk = 0; kk < N - M; kk++) {\n        y = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + M] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      for (; kk < N - 1; kk++) {\n        y = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + (M - N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      y = (this.mt[N - 1] & UPPER_MASK) | (this.mt[0] & LOWER_MASK);\n      this.mt[N - 1] = this.mt[M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n      this.mti = 0;\n    }\n\n    y = this.mt[this.mti++];\n\n    /* Tempering */\n    y ^= (y >>> 11);\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= (y >>> 18);\n\n    return y >>> 0;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    return this.nextInt() * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    return start + ((this.nextFloat() * (end - start)) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: { [key: string]: number }) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\n@Serializable('Sprite')\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import { Vec2 } from \"../vec2\";\n\nexport class TileMapCell extends Vec2 {\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell | null;\n\n  constructor(x: number, y: number) {\n    super(x, y);\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\n@Serializable('ShortcutButtonSlot')\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './compoundmessage';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './palettes/cgacolors';\nexport * from './palettes/pico8colors';\nexport * from './palettes/standardcolors';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './serializable';\nexport * from './serializer';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap/tilemap';\nexport * from './tilemap/tilemapcell';\nexport * from './tilemap/tilemaprenderer';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_DAMAGE = 1;\n\n@Serializable('BasicMonster')\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\n@Serializable('ConfusedMonster')\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\nimport { Message } from './message';\n\nexport class CompoundMessage extends Message {\n  readonly messages: Message[];\n\n  constructor(...messages: Message[]) {\n    super('', 0);\n    this.messages = messages;\n  }\n\n  draw(app: App, pos: Vec2) {\n    // app.drawString(this.text, pos.x, pos.y, this.color, pos);\n    for (let i = 0; i < this.messages.length; i++) {\n      this.messages[i].draw(app, pos);\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\n@Serializable('TooltipDialog')\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import { getTileId } from \"./tilemap\";\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 0;\n    }\n  }\n\n  getIndex(x: number, y: number) {\n    return 4 * (y * this.width + x);\n  }\n\n  setTile(x: number, y: number, tile: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index] = (tile % 64) | 0;\n    this.imageData[index + 1] = (tile / 64) | 0;\n  }\n\n  getTile(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return getTileId(this.imageData[index], this.imageData[index + 1]);\n  }\n\n  isAnimated(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return !!this.imageData[index + 2];\n  }\n\n  setAnimated(x: number, y: number, animated: boolean) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 2] = animated ? 1 : 0;\n  }\n\n  getAlpha(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return this.imageData[index + 3];\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 3] = alpha;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\n\n@Serializable('ComplexSelectDialog')\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {StandardColors} from '../palettes/standardcolors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\n@Serializable('DefaultSelectOptionRenderer')\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? StandardColors.YELLOW : StandardColors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ImagePanel')\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('ItemContainerDialog')\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemContainerButtonSlot')\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {StandardColors} from '../palettes/standardcolors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\nimport { Vec2 } from '../vec2';\n\n@Serializable('MessageLog')\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(message: string|Message|Panel, color?: Color) {\n    if (message instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    if (message instanceof Message) {\n      this.messages.push(message);\n    } else {\n      this.messages.push(new Message(message, color || StandardColors.WHITE));\n    }\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const pos = new Vec2(this.rect.x, this.rect.y);\n\n    if (pos.y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + pos.y + this.rect.height;\n      pos.y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      msg.draw(this.gui.app, pos);\n      pos.x = 0;\n      pos.y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessagePanel')\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\n@Serializable('SelectDialog')\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_SPACING = 2;\n\n@Serializable('ShortcutBar')\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('TalentsDialog')\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport { Serializable } from './serializable';\n\n@Serializable('Item')\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","\nimport {fromRgb} from '../color';\n\n/**\n * https://en.wikipedia.org/wiki/Color_Graphics_Adapter\n */\nexport enum CgaColors {\n  BLACK = fromRgb(0, 0, 0),\n  BLUE = fromRgb(0x00, 0x00, 0xFF),\n  GREEN = fromRgb(0x00, 0xAA, 0x00),\n  CYAN = fromRgb(0x00, 0xAA, 0xAA),\n  RED = fromRgb(0xAA, 0x00, 0x00),\n  MAGENTA = fromRgb(0xAA, 0x00, 0xAA),\n  BROWN = fromRgb(0xAA, 0x55, 0x00),\n  LIGHT_GRAY = fromRgb(0xAA, 0xAA, 0xAA),\n  DARK_GRAY = fromRgb(0x55, 0x55, 0x55),\n  LIGHT_BLUE = fromRgb(0x55, 0x55, 0xFF),\n  LIGHT_GREEN = fromRgb(0x55, 0xFF, 0x55),\n  LIGHT_CYAN = fromRgb(0xFF, 0xFF, 0xFF),\n  LIGHT_RED = fromRgb(0xFF, 0x55, 0x55),\n  LIGHT_MAGENTA = fromRgb(0xFF, 0x55, 0xFF),\n  YELLOW = fromRgb(0xFF, 0xFF, 0x55),\n  WHITE = fromRgb(0xFF, 0xFF, 0xFF),\n}\n","\nimport {fromRgb} from '../color';\n\n/**\n * https://www.romanzolotarev.com/pico-8-color-palette/\n * https://twitter.com/lexaloffle/status/732649035165667329\n */\nexport enum Pico8Colors {\n  BLACK = fromRgb(0, 0, 0),\n  DARK_BLUE = fromRgb(29, 43, 83),\n  DARK_PURPLE = fromRgb(126, 37, 83),\n  DARK_GREEN = fromRgb(0, 135, 81),\n  BROWN = fromRgb(171, 82, 54),\n  DARK_GRAY = fromRgb(95, 87, 79),\n  LIGHT_GRAY = fromRgb(194, 195, 199),\n  WHITE = fromRgb(255, 241, 232),\n  RED = fromRgb(255, 0, 77),\n  ORANGE = fromRgb(255, 163, 0),\n  YELLOW = fromRgb(255, 236, 39),\n  GREEN = fromRgb(0, 228, 54),\n  BLUE = fromRgb(41, 173, 255),\n  INDIGO = fromRgb(131, 118, 156),\n  PINK = fromRgb(255, 119, 168),\n  PEACH = fromRgb(255, 204, 170),\n}\n","import { Game } from \"./game\";\nimport { RenderSet } from \"./renderset\";\nimport { App } from \"./app\";\nimport { GUI } from \"./gui\";\nimport { Panel } from \"./gui/panel\";\nimport { getSerializeMetadata } from \"./serializemetadata\";\nimport { TileMap } from \"./tilemap/tilemap\";\nimport { TileMapRenderer } from \"./tilemap/tilemaprenderer\";\n\nexport class Serializer {\n  readonly typeLists: any = {};\n\n  serialize(obj: any): any {\n    const root = this.serializeObject(obj);\n    return {\n      'root': root,\n      'refs': this.typeLists\n    }\n  }\n\n  private serializeObject(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    const objType = typeof obj;\n    if (objType === 'boolean' || objType === 'number' || objType === 'string') {\n      return obj;\n    }\n\n    if (!obj.constructor) {\n      throw new Error('Object does not have a constructor');\n    }\n\n    if (obj instanceof App ||\n      obj instanceof GUI ||\n      obj instanceof Panel ||\n      obj instanceof RenderSet ||\n      obj instanceof TileMap ||\n      obj instanceof TileMapRenderer ||\n      obj instanceof Function) {\n      return undefined;\n    }\n\n    if (obj instanceof Array) {\n      return this.serializeArray(obj);\n    }\n\n    const metadata = getSerializeMetadata(obj.constructor);\n    const className = metadata.className;\n    const refType = !metadata.valueType;\n    const result: any = {};\n\n    if (className && refType) {\n      if (obj['_i'] !== undefined) {\n        return {\n          '_c': className,\n          '_i': obj['_i']\n        }\n      }\n\n      let typeList = this.typeLists[className];\n      if (!typeList) {\n        typeList = [];\n        this.typeLists[className] = typeList;\n      }\n      obj['_i'] = typeList.length;\n      typeList.push(result);\n    }\n\n    const properties = Object.getOwnPropertyNames(obj);\n    let propertyCount = 0;\n\n    for (let i = 0; i < properties.length; i++) {\n      const key = properties[i];\n      const value = (obj as any)[key];\n\n      if (key === '_i') {\n        continue;\n      }\n\n      if (obj instanceof Game) {\n        if (key === 'tooltip' || key === 'tooltipElement' || key === 'messageLog') {\n          continue;\n        }\n      }\n\n      const serializedValue = this.serializeObject(value);\n      if (serializedValue === undefined) {\n        continue;\n      }\n\n      result[key] = serializedValue;\n      propertyCount++;\n    }\n\n    if (propertyCount === 0) {\n      // Ignore objects without any properties\n      return undefined;\n    }\n\n    if (className && refType) {\n      return {\n        '_c': className,\n        '_i': obj['_i']\n      };\n    } else {\n      return result;\n    }\n  }\n\n  private serializeArray(a: Array<any>) {\n    const result = [];\n    for (let i = 0; i < a.length; i++) {\n      result.push(this.serializeObject(a[i]));\n    }\n    return result;\n  }\n}\n","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap/tilemapcell';\nimport { Serializable } from './serializable';\n\n@Serializable('Talent')\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n"],"sourceRoot":""}