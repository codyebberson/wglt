{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","containerItems","shortcutItem","item","getItem","player","dst","count","countItems","drawRightString","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","ItemButton","initialItem","stackItems","TargetType","Entity","blocks","offset","zIndex","pixelX","tileSize","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","seen","j","dx","dy","slideCount","destX","destY","isBlocked","tileMap","xSpeed","ySpeed","animations","SlideAnimation","blocked","move","targetX","targetY","abs","target","damage","onAttack","takeDamage","BumpAnimation","heal","min","addFloatingText","attacker","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextAnimation","animation_1","DURATION","entity","update","floor","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","Mouse","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","mwe","max","deltaY","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","buttonslot_1","itembutton_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","ai","rng","FadeInAnimation","duration","blackoutRect","alpha","FadeOutAnimation","ProjectileAnimation","position","velocity","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","options","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","isKeyArrayPressed","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","viewportFocus","turnIndex","cursor","TooltipDialog","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","messageLog","animation","updateGlobalAnimations","updateTooltip","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","focusLeftX","ceil","focusTopY","animFrame","isTargeting","targetSprite","z","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","getCell","cancelTargeting","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","minX","minY","maxX","maxY","pathTile","endTurn","recomputeFov","recalculateViewportFocus","startTurn","computeFov","dialog_1","WIDTH","MARGIN","LINE_PADDING","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","containerRect","buttonRect","message_1","MessageLog","maxItems","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","shortcutbuttonslot_1","DEFAULT_SPACING","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","Talent","rank","tilemapVS","tilemapFS","getTileId","tileX","tileY","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","dirty","originX","originY","visibleRect","prevVisibleRect","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","animated","uniform1f","uniform1i","TEXTURE1","uniform2fv","isSeen","setAlpha","updateGl","radius","vradius","copy","computeOctantY","computeOctantX","deltaX","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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,EAAA3P,WACtC7S,OAAOoL,GACL,GAAI9K,KAAKwK,SAASI,OAAS,EAGzB,OAAO,EAGT,GAAIE,aAAiBqX,EAAAvP,WAAY,CAC/B,MAAMyP,EAAavX,EACbqG,EAAiBkR,EAAWlR,eAC5BC,EAAeiR,EAAWvP,WAAW1U,IAAI,GAI/C,OAHA4B,KAAKgL,IAAI,IAAIwS,EAAAtM,mBAAmBlR,KAAKsK,KAAKgY,QAASnR,EAAgBC,KAG5D,EAGT,OAAItG,aAAiB2S,EAAAtO,eACfrE,EAAMwE,WAKRtP,KAAKgL,IAAI,IAAIyS,EAAAtO,aAAanP,KAAKsK,KAAKgY,QAASxX,EAAMuE,QAAQ,KACpD,MAIPvE,aAAiB0S,EAAAtM,oBAAuBpG,aAAiB2S,EAAAtO,cAAgBrE,EAAMwE,yJCnCvFiT,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,IACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,IAEAklB,EAAAllB,EAAA,IACAklB,EAAAllB,EAAA,IACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KAEAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,IACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,IACAklB,EAAAllB,EAAA,KAGAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,KACAklB,EAAAllB,EAAA,IACAklB,E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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    tooltip.visible = false;\n  }\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\n\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {BumpAnimation} from './animations/bumpanimation';\nimport {FloatingTextAnimation} from './animations/floatingtextanimation';\nimport {SlideAnimation} from './animations/slideanimation';\nimport {ArrayList} from './arraylist';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {TileMapCell} from './tilemap';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap && this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity|TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath(attacker: Actor) {}\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = 0.1 * focusLeftX - 0.1 * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = 0.1 * focusTopY - 0.1 * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMap.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y))) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    if (!map) {\n      return;\n    }\n\n    const tileWidth = this.tileSize.width;\n    const tileHeight = this.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // If the visible area is smaller than the screen,\n    // then just center on the visible area.\n    // if ((maxX - minX) < this.viewport.width && (maxY - minY) < this.viewport)\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= this.viewport.width) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= this.viewport.height) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n        this.recalculateViewportFocus();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player || !this.tileMap) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n    // this.modal = true;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\n\nconst DEFAULT_SPACING = 2;\n\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && slot.button.shortcutItem.name === item.name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\n\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\nimport { Rect } from './rect';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform float animFrame;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   if (gl_FragColor.a == 0.0) discard;' +\n    '   gl_FragColor.a *= tile.a;' +\n    '}';\n\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return 1 + tileY * 64 + tileX;\n}\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 0;\n      this.imageData[i++] = 0;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n  dirty: boolean;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private visibleRect: Rect;\n  private prevVisibleRect: Rect;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n     // x   y   u  v\n       -1, -1,  0, 1,\n        1, -1,  1, 1,\n        1,  1,  1, 0,\n       -1, -1,  0, 1,\n        1,  1,  1, 0,\n       -1,  1,  0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(tx: number, ty: number, layerIndex: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return false;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    return layer.imageData[ti + 2] !== 0;\n  }\n\n  setAnimated(tx: number, ty: number, layerIndex: number, animated: boolean) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    layer.imageData[ti + 2] = animated ? 1 : 0;\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(this.visibleRect.x1, this.prevVisibleRect.x1);\n    const minY = Math.min(this.visibleRect.y1, this.prevVisibleRect.y1);\n    const maxX = Math.max(this.visibleRect.x2, this.prevVisibleRect.x2);\n    const maxY = Math.max(this.visibleRect.y2, this.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n\n      if (this.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = this.isVisible(x, y) ? 255 : this.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        layer.updateGl(gl);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    this.dirty = false;\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}