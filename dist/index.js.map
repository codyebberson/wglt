{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/effects/fadeineffect.ts","webpack://wglt/./src/effects/fadeouteffect.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","point","Effect","countdown","blocking","game","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","panel_1","Dialog","closeButton","renderer","draw","app","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","g","b","a","undefined","fromHsv","h","v","f","q","Button","destRect","sprite","shortcutKey","onClick","src","dst","offsetX","offsetY","mouse","start","startDragging","isKeyPressed","isClicked","click","down","tooltipMessages","messages","colors_1","button_1","TalentButton","talent","shortcut","ability","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","drawImage","cx","cy","drawCenteredString","toString","ButtonSlot","button","buttonSlotRect","drawRightString","String","fromCharCode","ItemButton","containerItems","initialItem","stackItems","item","player","TargetType","Entity","blocks","offset","pixelX","tileSize","pixelY","hypot","viewport","bumper","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","AI","Input","downCount","upCount","ItemShortcutButton","shortcutItem","getItem","count","countItems","ability_1","bumpeffect_1","floatingtexteffect_1","slideeffect_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","activatedCount","seen","dx","dy","destX","destY","isBlocked","xSpeed","ySpeed","effects","SlideEffect","blocked","targetX","targetY","abs","move","target","onAttack","takeDamage","BumpEffect","heal","min","addFloatingText","damage","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextEffect","effect_1","DURATION","entity","update","floor","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","Mouse","prev","dragDistance","longPress","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","__export","ai_1","BasicMonster","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","ai","rng","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","FadeInEffect","duration","blackoutRect","FadeOutEffect","ProjectileEffect","position","velocity","actor_1","appstate_1","scrolleffect_1","tooltipdialog_1","keys_1","path_1","rng_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","Game","turnIndex","cursor","TooltipDialog","pathIndex","followPlayer","viewDistance","messageLog","updateGlobalAnimations","updateTooltip","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","isLongPress","vibrate","tooltipElement","hoverPanel","showAt","effect","isDone","onDone","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getEnemyAt","TILE","getCell","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","targetTile","path","distance","nextStep","right","up","wait","tryMoveOrAttack","onBump","recomputeFov","sort","computeFov","stopAutoWalk","dialog_1","WIDTH","MARGIN","LINE_PADDING","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","itembutton_1","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","buttonslot_1","ImagePanel","srcRect","message_1","MessageLog","maxItems","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","ShortcutButtonSlot","itemButton","TalentsDialog","Item","user","Talent","rank","tilemapVS","tilemapFS","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n  onDone?: Function;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    tooltip.visible = false;\n  }\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly stackItems: XArray<Item>;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new XArray<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {XArray} from './xarray';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: XArray<Item>;\n  talents: XArray<Talent>;\n  activatedCount: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new XArray<Item>();\n    this.talents = new XArray<Talent>();\n    this.activatedCount = -1;\n    this.seen = false;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.ap--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor) {\n    if (target === this) {\n      return;\n    }\n\n    // TODO: Enforce distance check?\n\n    const damage = 10;\n    this.onAttack(target, damage);\n    target.takeDamage(damage);\n    this.ap--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(damage: number) {\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, callback?: Function) {\n    if (ability.targetType === TargetType.SELF) {\n      if (ability.cast(this)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.effects.push(new FloatingTextEffect(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath() {}\n}","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(40, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/fadeineffect';\nexport * from './effects/fadeouteffect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.0) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeInEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeOutEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Key, Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Actor;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  followPlayer: boolean;\n  viewDistance: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.followPlayer = true;\n    this.viewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n\n    const longPress = mouse.isLongPress();\n    if (longPress) {\n      window.navigator.vibrate(100);\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        const effect = this.effects[i];\n        if (effect.onDone) {\n          effect.onDone();\n        }\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            this.handlePlayerInput();\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (!this.blocked && currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getEnemyAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.cursor.y--;\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.cursor.x--;\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.cursor.x++;\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.isKeyPressed(DOWN_KEYS) || (nextStep && nextStep.y > this.player.y);\n    const left = this.isKeyPressed(LEFT_KEYS) || (nextStep && nextStep.x < this.player.x);\n    const right = this.isKeyPressed(RIGHT_KEYS) || (nextStep && nextStep.x > this.player.x);\n    const up = this.isKeyPressed(UP_KEYS) || (nextStep && nextStep.y < this.player.y);\n    const wait = this.isKeyPressed(WAIT_KEYS);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.ap = 0;\n    }\n  }\n\n  private isKeyPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.app.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Actor) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor) {\n          entity.ap = entity.maxAp;\n          for (let j = 0; j < entity.talents.length; j++) {\n            const talent = entity.talents.get(j);\n            if (talent.cooldown > 0) {\n              talent.cooldown--;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!(other instanceof Actor)) {\n        continue;\n      }\n      if (other.hp <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, this.viewDistance);\n\n      // Determine which entities are activated\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity === this.player) {\n          continue;\n        }\n        if (entity instanceof Actor) {\n          if (this.tileMap.isVisible(entity.x, entity.y)) {\n            if (!entity.seen) {\n              // Spotted a new entity, stop auto walking\n              entity.seen = true;\n              this.player.addFloatingText('!', Colors.WHITE);\n              this.stopAutoWalk();\n            }\n            entity.activatedCount++;\n          } else {\n            entity.activatedCount = -1;\n          }\n        }\n      }\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Dialog} from './dialog';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n    // this.modal = true;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, capacity: number, items: XArray<Item>) {\n    super(rect);\n    this.capacity = capacity;\n    this.items = items;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, items: XArray<Item>) {\n    super(rect);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly capacity: number;\n  readonly talents: XArray<Talent>;\n\n  constructor(rect: Rect, capacity: number, talents: XArray<Talent>) {\n    super(rect);\n    this.capacity = capacity;\n    this.talents = talents;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24)));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\n\nexport class Item extends Entity {\n  readonly tooltipMessages?: Message[];\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use() {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n    this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}