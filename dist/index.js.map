{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","Entity","blocks","offset","zIndex","pixelX","tileSize","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","seen","j","dx","dy","slideCount","destX","destY","isBlocked","tileMap","xSpeed","ySpeed","animations","SlideAnimation","blocked","move","targetX","targetY","abs","target","damage","onAttack","takeDamage","BumpAnimation","heal","min","addFloatingText","attacker","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextAnimation","animation_1","DURATION","entity","update","floor","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","Mouse","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","mwe","max","deltaY","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","itembutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","removeAll","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","buttonslot_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","ai","rng","FadeInAnimation","duration","blackoutRect","alpha","FadeOutAnimation","ProjectileAnimation","position","velocity","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","options","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","isKeyArrayPressed","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","viewportFocus","turnIndex","cursor","TooltipDialog","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","messageLog","animation","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","animFrame","isTargeting","targetSprite","z","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","getCell","cancelTargeting","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","minX","minY","maxX","maxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dialog_1","WIDTH","MARGIN","LINE_PADDING","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","message_1","MessageLog","maxItems","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","shortcutbuttonslot_1","DEFAULT_SPACING","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","Talent","rank","tilemapVS","tilemapFS","getTileId","tileX","tileY","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","dirty","originX","originY","visibleRect","prevVisibleRect","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","animated","uniform1f","uniform1i","TEXTURE1","uniform2fv","isSeen","setAlpha","updateGl","radius","vradius","copy","computeOctantY","computeOctantX","deltaX","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\n\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\n\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {BumpAnimation} from './animations/bumpanimation';\nimport {FloatingTextAnimation} from './animations/floatingtextanimation';\nimport {SlideAnimation} from './animations/slideanimation';\nimport {ArrayList} from './arraylist';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {TileMapCell} from './tilemap';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap && this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity|TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath(attacker: Actor) {}\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMap.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y))) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    if (!map) {\n      return;\n    }\n\n    const tileWidth = this.tileSize.width;\n    const tileHeight = this.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= this.viewport.width) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= this.viewport.height) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player || !this.tileMap) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n    // this.modal = true;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\n\nconst DEFAULT_SPACING = 2;\n\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\n\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\nimport { Rect } from './rect';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform float animFrame;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   if (gl_FragColor.a == 0.0) discard;' +\n    '   gl_FragColor.a *= tile.a;' +\n    '}';\n\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return 1 + tileY * 64 + tileX;\n}\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 0;\n      this.imageData[i++] = 0;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n  dirty: boolean;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private visibleRect: Rect;\n  private prevVisibleRect: Rect;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n     // x   y   u  v\n       -1, -1,  0, 1,\n        1, -1,  1, 1,\n        1,  1,  1, 0,\n       -1, -1,  0, 1,\n        1,  1,  1, 0,\n       -1,  1,  0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(tx: number, ty: number, layerIndex: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return false;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    return layer.imageData[ti + 2] !== 0;\n  }\n\n  setAnimated(tx: number, ty: number, layerIndex: number, animated: boolean) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    layer.imageData[ti + 2] = animated ? 1 : 0;\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(this.visibleRect.x1, this.prevVisibleRect.x1);\n    const minY = Math.min(this.visibleRect.y1, this.prevVisibleRect.y1);\n    const maxX = Math.max(this.visibleRect.x2, this.prevVisibleRect.x2);\n    const maxY = Math.max(this.visibleRect.y2, this.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n\n      if (this.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = this.isVisible(x, y) ? 255 : this.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        layer.updateGl(gl);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    this.dirty = false;\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}