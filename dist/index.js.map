{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/serializable.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/tilemap/tilemap.ts","webpack://wglt/./src/tilemap/tilemaprenderer.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/serializemetadata.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/tilemap/tilemapcell.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/compoundmessage.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/serialize.ts","webpack://wglt/./src/talent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializemetadata_1","Serializable","options","ctor","console","log","metadata","createSerializeMetadata","className","valueType","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","__decorate","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","Entity","blocks","offset","zIndex","pixelX","tileMap","tileSize","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","rect_1","itembutton_1","GUI","DialogRenderer","rootPanel","size","dragOffset","updateDragging","target","onDrop","move","removeAll","Message","text","color","pos","drawString","tilemapcell_1","getTileId","tileX","tileY","TileMap","layerCount","grid","Array","layerImageData","tileWidth","tileHeight","dirty","originX","originY","visibleRect","prevVisibleRect","TileMapCell","Uint8Array","imageData","j","layerIndex","tile","blocked","blockedSight","ti","tx","ty","cell","getCell","seen","animated","radius","vradius","copy","dx","dy","max","min","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","floor","idx","glutils_1","tilemapVS","tilemapFS","TileMapRenderer","gl","quadVertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","tilemapShader","initShaderProgram","positionAttribute","getAttribLocation","textureAttribute","viewportSizeUniform","getUniformLocation","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","layerTextures","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","animFrame","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1f","activeTexture","TEXTURE0","uniform1i","TEXTURE1","minX","minY","maxX","maxY","alpha","isVisible","isSeen","texSubImage2D","drawArrays","TRIANGLES","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","animations","SlideAnimation","targetX","targetY","abs","damage","onAttack","takeDamage","BumpAnimation","heal","addFloatingText","attacker","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","FloatingTextAnimation","animation_1","DURATION","entity","update","METADATA_KEY","SerializeMetadata","getSerializeMetadata","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","canvas","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","style","outline","tabIndex","focus","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","Keyboard","Mouse","addEventListener","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","state","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","dw","dh","out","keyCode","getKey","isKeyArrayPressed","keys","input_1","KEY_COUNT","e","setKey","stopPropagation","preventDefault","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","getBoundingClientRect","terminalAspectRatio","rectAspectRatio","actualWidth","excess","actualHeight","mwe","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","url","program","viewportSizeLocation","positionLocation","texcoordLocation","colorLocation","positionBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","charCode","charCodeAt","isInRange","getOffset","getWidth","optColor","optDw","optDh","loaded","tx2","ty2","setUint32","DYNAMIC_DRAW","normalize","stride","primitiveType","loadShader","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","internalFormat","srcFormat","srcType","pixel","image","Image","onload","generateMipmap","gui_1","AppState","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dx1","dy1","dx2","dy2","sx","sy","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","serializable_1","tilemap_1","tilemaprenderer_1","DEFAULT_MAP_SIZE","Game","viewportFocus","turnIndex","cursor","TooltipDialog","rng","RNG","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","mapSize","mapLayers","tileMapRenderer","message","messageLog","animation","Sprite","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","globalAnimIndex","isTargeting","targetSprite","z","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","cancelTargeting","ai","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","computePath","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","map","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","buildPath","result","curr","reverse","dest","maxDist","clearDijkstra","sourceCell","alt","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Sprite_1","loop","ticksPerFrame","colorOverride","animIndex","animDelay","buttonslot_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","FadeInAnimation","duration","blackoutRect","FadeOutAnimation","ProjectileAnimation","position","velocity","START_CHAR_CODE","END_CHAR_CODE","Font","sum","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","message_1","CompoundMessage","dialog_1","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","MessageLog","maxItems","bottom","MessagePanel","SelectDialog","close","shortcutbuttonslot_1","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","game_1","app_1","Serializer","typeLists","obj","serializeObject","refs","objType","constructor","Function","serializeArray","refType","__className","__index","typeList","properties","getOwnPropertyNames","propertyCount","serializedValue","Talent","rank"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,GACA,iBAAAC,QACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oFClFA,MAAAC,EAAAlC,EAAA,IAQAN,EAAAyC,aAAA,SAA6B1B,EAAc2B,GACzC,OAAO,SAAUC,GACF,UAAT5B,GACF6B,QAAQC,IAAI,0BAGd,MAAMC,EAAWN,EAAAO,wBAAwBJ,GACzCG,EAASE,UAAYjC,EAEjB2B,IACFI,EAASG,YAAcP,EAAQO,4FCjBrC,MAAAC,EAAA5C,EAAA,GAEA,MAAa6C,UAAaD,EAAAE,KAIxBC,YAAYC,EAAWC,EAAWC,EAAeC,GAC/CC,MAAMJ,EAAGC,GACTI,KAAKH,MAAQA,EACbG,KAAKF,OAASA,EAGhBG,SACE,OAAOD,KAAKL,EAGdO,SACE,OAAOF,KAAKJ,EAGdO,SACE,OAAOH,KAAKL,EAAIK,KAAKH,MAGvBO,SACE,OAAOJ,KAAKJ,EAAII,KAAKF,OAGvBO,WACE,OAAOL,KAAKL,EAGdW,UACE,OAAON,KAAKJ,EAGdF,QACE,OAAO,IAAIF,EAAKQ,KAAKL,EAAGK,KAAKJ,EAAGI,KAAKH,MAAOG,KAAKF,QAGnDJ,KAAKa,GACHP,KAAKL,EAAIY,EAAMZ,EACfK,KAAKJ,EAAIW,EAAMX,EACfI,KAAKH,MAAQU,EAAMV,MACnBG,KAAKF,OAASS,EAAMT,OAGtBJ,YACE,OAAO,IAAIH,EAAAE,KAAKO,KAAKL,EAAKK,KAAKH,MAAQ,EAAK,EAAGG,KAAKJ,EAAKI,KAAKF,OAAS,EAAK,GAG9EJ,WAAWa,GACT,OAAOP,KAAKL,GAAKY,EAAMJ,IAAMH,KAAKG,IAAMI,EAAMZ,GAAKK,KAAKJ,GAAKW,EAAMH,IAAMJ,KAAKI,IAAMG,EAAMX,EAG5FF,SAASc,GACP,OAAOA,EAAMb,GAAKK,KAAKL,GAAKa,EAAMb,GAAKK,KAAKG,IAAMK,EAAMZ,GAAKI,KAAKJ,GAAKY,EAAMZ,GAAKI,KAAKI,IAtD3F/D,EAAAmD,ubCAA,IAAaC,EAAb,MAIEC,YAAYC,EAAWC,GACrBI,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EAGXF,IAAIe,GACFT,KAAKL,GAAKc,EAAMd,EAChBK,KAAKJ,GAAKa,EAAMb,IAXPH,EAAIiB,EAAA,CAHjB/D,EAAA,GAECmC,aAAa,OAAQ,CAACQ,WAAW,KACrBG,GAAApD,EAAAoD,ubCHb,MAAAkB,EAAAhE,EAAA,GAUA,IAAaiE,EAAb,MAQElB,YAAYmB,GACVb,KAAKc,IAAM,KACXd,KAAKa,KAAOA,EACZb,KAAKe,SAAW,IAAIJ,EAAAK,UACpBhB,KAAKiB,OAAQ,EACbjB,KAAKkB,SAAU,EAGjBxB,OAAOoB,GACL,IAAId,KAAKc,IAAT,CAIAd,KAAKc,IAAMA,EACX,IAAK,IAAIjE,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IACxCmD,KAAKe,SAASrD,IAAIb,GAAGuE,OAAON,IAIhCpB,IAAI2B,GACFA,EAAMC,OAAStB,KACfqB,EAAMD,OAAOpB,KAAKc,KAClBd,KAAKe,SAASQ,IAAIF,GAGpB3B,OAAO2B,GACLrB,KAAKe,SAASS,OAAOH,GAGvB3B,KAAK+B,GACCzB,KAAKsB,QACPtB,KAAKsB,OAAOE,OAAOxB,MAErByB,EAAUF,IAAIvB,MAGhBN,WAAWc,GACT,IAAK,IAAI3D,EAAImD,KAAKe,SAASI,OAAS,EAAGtE,GAAK,EAAGA,IAAK,CAClD,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAChC,IAAK6E,EAAMR,QAET,SAEF,GAAIQ,EAAMC,aAER,SAEF,MAAMC,EAAcF,EAAMG,WAAWrB,GACrC,GAAIoB,EACF,OAAOA,EAGX,GAAI5B,KAAKa,KAAKiB,SAAStB,GACrB,OAAOR,KAKXN,eACEM,KAAK+B,eAGPrC,eACE,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAC3B6E,EAAMR,SAIXQ,EAAMM,gBAIVtC,cACE,OAAOM,KAAKiC,sBAGdvC,sBAEE,IAAK,IAAI7C,EAAImD,KAAKe,SAASI,OAAS,EAAGtE,GAAK,EAAGA,IAAK,CAClD,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAChC,GAAK6E,EAAMR,UAIPQ,EAAMQ,eAAiBR,EAAMT,OAC/B,OAAO,EAGX,OAAO,EAGTvB,aACE,OAAOM,KAAKc,KAAOd,KAAKc,IAAIqB,cAAgBnC,KAG9CN,OAAO2B,GACL,OAAO,EAGT3B,cAAc0C,GAGZA,EAAQlB,SAAU,IA/GTN,EAAKF,EAAA,CAHlB/D,EAAA,GAECmC,aAAa,UACD8B,GAAAvE,EAAAuE,uFCPb,MAAayB,GACKA,EAAAC,UAAiB,EACjBD,EAAAE,QAAe,EACfF,EAAAG,cAAqB,EACrBH,EAAAI,OAAc,EACdJ,EAAAK,SAAgB,GAChBL,EAAAM,SAAgB,GAChBN,EAAAO,SAAgB,GAChBP,EAAAQ,WAAkB,GAClBR,EAAAS,OAAc,GACdT,EAAAU,SAAgB,GAChBV,EAAAW,aAAoB,GACpBX,EAAAY,UAAiB,GACjBZ,EAAAa,SAAgB,GAChBb,EAAAc,WAAkB,GAClBd,EAAAe,aAAoB,GACpBf,EAAAgB,OAAc,GACdhB,EAAAiB,QAAe,GACfjB,EAAAkB,QAAe,GACflB,EAAAmB,MAAa,GACbnB,EAAAoB,SAAgB,GAChBpB,EAAAqB,QAAe,GACfrB,EAAAsB,eAAsB,GACtBtB,EAAAuB,UAAiB,GACjBvB,EAAAwB,UAAiB,GACjBxB,EAAAyB,KAAY,GACZzB,EAAA0B,KAAY,GACZ1B,EAAA2B,KAAY,GACZ3B,EAAA4B,KAAY,GACZ5B,EAAA6B,KAAY,GACZ7B,EAAA8B,KAAY,GACZ9B,EAAA+B,KAAY,GACZ/B,EAAAgC,KAAY,GACZhC,EAAAiC,KAAY,GACZjC,EAAAkC,KAAY,GACZlC,EAAAmC,SAAgB,GAChBnC,EAAAoC,aAAoB,GACpBpC,EAAAqC,aAAoB,GACpBrC,EAAAsC,UAAiB,GACjBtC,EAAAuC,gBAAuB,GACvBvC,EAAAwC,iBAAwB,GACxBxC,EAAAyC,MAAa,GACbzC,EAAA0C,KAAY,GACZ1C,EAAA2C,KAAY,GACZ3C,EAAA4C,KAAY,GACZ5C,EAAA6C,KAAY,GACZ7C,EAAA8C,KAAY,GACZ9C,EAAA+C,KAAY,GACZ/C,EAAAgD,KAAY,GACZhD,EAAAiD,KAAY,GACZjD,EAAAkD,KAAY,GACZlD,EAAAmD,KAAY,GACZnD,EAAAoD,KAAY,GACZpD,EAAAqD,KAAY,GACZrD,EAAAsD,KAAY,GACZtD,EAAAuD,KAAY,GACZvD,EAAAwD,KAAY,GACZxD,EAAAyD,KAAY,GACZzD,EAAA0D,KAAY,GACZ1D,EAAA2D,KAAY,GACZ3D,EAAA4D,KAAY,GACZ5D,EAAA6D,KAAY,GACZ7D,EAAA8D,KAAY,GACZ9D,EAAA+D,KAAY,GACZ/D,EAAAgE,KAAY,GACZhE,EAAAiE,KAAY,GACZjE,EAAAkE,KAAY,GACZlE,EAAAmE,KAAY,GACZnE,EAAAoE,gBAAuB,GACvBpE,EAAAqE,WAAkB,GAClBrE,EAAAsE,WAAkB,GAClBtE,EAAAuE,WAAkB,GAClBvE,EAAAwE,WAAkB,GAClBxE,EAAAyE,WAAkB,IAClBzE,EAAA0E,WAAkB,IAClB1E,EAAA2E,WAAkB,IAClB3E,EAAA4E,WAAkB,IAClB5E,EAAA6E,WAAkB,IAClB7E,EAAA8E,WAAkB,IAClB9E,EAAA+E,YAAmB,IACnB/E,EAAAgF,OAAc,IACdhF,EAAAiF,aAAoB,IACpBjF,EAAAkF,YAAmB,IACnBlF,EAAAmF,WAAkB,IAClBnF,EAAAoF,UAAiB,IACjBpF,EAAAqF,MAAa,IACbrF,EAAAsF,MAAa,IACbtF,EAAAuF,MAAa,IACbvF,EAAAwF,MAAa,IACbxF,EAAAyF,MAAa,IACbzF,EAAA0F,MAAa,IACb1F,EAAA2F,MAAa,IACb3F,EAAA4F,MAAa,IACb5F,EAAA6F,MAAa,IACb7F,EAAA8F,OAAc,IACd9F,EAAA+F,OAAc,IACd/F,EAAAgG,OAAc,IACdhG,EAAAiG,OAAc,IACdjG,EAAAkG,OAAc,IACdlG,EAAAmG,OAAc,IACdnG,EAAAoG,OAAc,IACdpG,EAAAqG,OAAc,IACdrG,EAAAsG,OAAc,IACdtG,EAAAuG,OAAc,IACdvG,EAAAwG,OAAc,IACdxG,EAAAyG,OAAc,IACdzG,EAAA0G,OAAc,IACd1G,EAAA2G,OAAc,IACd3G,EAAA4G,OAAc,IACd5G,EAAA6G,YAAmB,IACnB7G,EAAA8G,eAAsB,IACtB9G,EAAA+G,cAAqB,IACrB/G,EAAAgH,eAAsB,IACtBhH,EAAAiH,gBAAuB,IACvBjH,EAAAkH,QAAe,IACflH,EAAAmH,UAAiB,IACjBnH,EAAAoH,WAAkB,IAClBpH,EAAAqH,aAAoB,IACpBrH,EAAAsH,cAAqB,IACrBtH,EAAAuH,cAAqB,IACrBvH,EAAAwH,eAAsB,IACtBxH,EAAAyH,YAAmB,IACnBzH,EAAA0H,QAAe,IACf1H,EAAA2H,QAAe,IACf3H,EAAA4H,gBAAuB,IACvB5H,EAAA6H,sBAA6B,IAC7B7H,EAAA8H,uBAA8B,IAC9B9H,EAAA+H,SAAgB,IAChB/H,EAAAgI,SAAgB,IAChBhI,EAAAiI,UAAiB,IACjBjI,EAAAkI,SAAgB,IAChBlI,EAAAmI,cAAqB,IACrBnI,EAAAoI,gBAAuB,IACvBpI,EAAAqI,cAAqB,IACrBrI,EAAAsI,iBAAwB,IACxBtI,EAAAuI,SAAgB,IAChBvI,EAAAwI,QAAe,IACfxI,EAAAyI,SAAgB,IAChBzI,EAAA0I,OAAc,GACd1I,EAAA2I,QAAe,GACf3I,EAAA4I,UAAiB,GACjB5I,EAAA6I,QAAe,GACf7I,EAAA8I,SAAgB,GAChB9I,EAAA+I,SAAgB,GAChB/I,EAAAgJ,SAAgB,GAChBhJ,EAAAiJ,SAAgB,GAChBjJ,EAAAkJ,WAAkB,GAClBlJ,EAAAmJ,cAAqB,GACrBnJ,EAAAoJ,UAAiB,GACjBpJ,EAAAqJ,cAAqB,GACrBrJ,EAAAsJ,UAAiB,GACjBtJ,EAAAuJ,SAAgB,GAChBvJ,EAAAwJ,WAAkB,GAClBxJ,EAAAyJ,SAAgB,GAzJlCzP,EAAAgG,sFCFA,MAAA0J,EAAApP,EAAA,IAEAN,EAAA2P,UAAA,MAKEtM,YAAYuM,EAAmBC,GAC7BlM,KAAKmM,QAAU,IAAIJ,EAAAK,iBACnBpM,KAAKiM,UAAYA,EACjBjM,KAAKkM,SAAWA,EAGlBxM,SACE,OAAOM,KAAKiM,WAAa,EAG3BvM,SACEM,KAAKiM,YAGPvM,KAAK2M,qFCrBP,MAAAC,EAAA3P,EAAA,IAEA,MAAa4P,GACKA,EAAAC,MAAQF,EAAAG,QAAQ,EAAG,EAAG,GACtBF,EAAAG,MAAQJ,EAAAG,QAAQ,IAAM,IAAM,KAC5BF,EAAAI,KAAOL,EAAAG,QAAQ,IAAM,IAAM,KAC3BF,EAAAK,WAAaN,EAAAG,QAAQ,IAAM,IAAM,KACjCF,EAAAM,UAAYP,EAAAG,QAAQ,GAAM,GAAM,IAChCF,EAAAO,OAASR,EAAAG,QAAQ,IAAM,IAAM,IAC7BF,EAAAQ,MAAQT,EAAAG,QAAQ,IAAM,GAAM,GAC5BF,EAAAS,IAAMV,EAAAG,QAAQ,IAAM,EAAM,GAC1BF,EAAAU,UAAYX,EAAAG,QAAQ,IAAM,GAAM,IAChCF,EAAAW,SAAWZ,EAAAG,QAAQ,IAAM,EAAM,GAC/BF,EAAAY,MAAQb,EAAAG,QAAQ,EAAM,IAAM,GAC5BF,EAAAa,YAAcd,EAAAG,QAAQ,GAAM,IAAM,IAClCF,EAAAc,WAAaf,EAAAG,QAAQ,EAAM,IAAM,GACjCF,EAAAe,WAAahB,EAAAG,QAAQ,GAAM,IAAM,KACjCF,EAAAgB,UAAYjB,EAAAG,QAAQ,EAAM,IAAM,KAChCF,EAAAiB,KAAOlB,EAAAG,QAAQ,EAAM,EAAM,KAC3BF,EAAAkB,WAAanB,EAAAG,QAAQ,GAAM,GAAM,KACjCF,EAAAmB,UAAYpB,EAAAG,QAAQ,EAAM,EAAM,KAChCF,EAAAoB,cAAgBrB,EAAAG,QAAQ,IAAM,GAAM,KACpCF,EAAAqB,aAAetB,EAAAG,QAAQ,IAAM,EAAM,KACnCF,EAAAsB,OAASvB,EAAAG,QAAQ,IAAM,IAAM,GArB/CpQ,EAAAkQ,ybCHA,MAAAuB,EAAAnR,EAAA,GAGAoR,EAAApR,EAAA,GAIA,IAAaqR,EAAb,cAA4BD,EAAAnN,MAG1BlB,YAAYmB,GACVd,MAAMc,GACNb,KAAKiO,aAAc,EAGrBvO,eACOM,KAAKc,KAGVd,KAAKc,IAAIoN,SAASC,KAAKnO,KAAKc,IAAIsN,IAAKpO,MAGvCN,cACE,IAAKM,KAAKc,IACR,OAAO,EAGT,GAAId,KAAKiC,sBACP,OAAO,EAGT,GAAIjC,KAAKc,IAAIsN,IAAIC,aAAaP,EAAAzL,KAAKY,WAEjC,OADAjD,KAAKkB,SAAU,GACR,EAGT,MAAMoN,EAAQtO,KAAKc,IAAIsN,IAAIE,MAC3B,SAAIA,EAAMC,aAAgBvO,KAAKa,KAAKiB,SAASwM,MAC3CtO,KAAKkB,SAAU,GACR,GAMXxB,QACOM,KAAKc,KAGVd,KAAKc,IAAIU,OAAOxB,QA1CPgO,EAAMtN,EAAA,CAHnB/D,EAAA,GAECmC,aAAa,WACDkP,GAAA3R,EAAA2R,ybCHb,IAAahN,EAAb,MAIEtB,cACEM,KAAKwO,SAAW,GAGlBrN,aACE,OAAOnB,KAAKwO,SAASrN,OAGvBzB,QACEM,KAAKwO,SAASC,OAAO,EAAGzO,KAAKwO,SAASrN,QAGxCzB,IAAIgP,GACF,OAAO1O,KAAKwO,SAASE,GAGvBhP,IAAIiP,GAEF,GADA3O,KAAKwO,SAASI,KAAKD,GACf3O,KAAK6O,UACP,IAAK,IAAIhS,EAAI,EAAGA,EAAImD,KAAK6O,UAAU1N,OAAQtE,IACzCmD,KAAK6O,UAAUhS,GAAGiS,MAAM9O,KAAM2O,GAKpCjP,OAAOiP,GACL,MAAMD,EAAQ1O,KAAKwO,SAASO,QAAQJ,GACpC,GAAID,GAAS,IACX1O,KAAKwO,SAASC,OAAOC,EAAO,GACxB1O,KAAK6O,WACP,IAAK,IAAIhS,EAAI,EAAGA,EAAImD,KAAK6O,UAAU1N,OAAQtE,IACzCmD,KAAK6O,UAAUhS,GAAGmS,SAAShP,KAAM2O,GAMzCjP,SAASiP,GACP,OAAO3O,KAAKwO,SAASO,QAAQJ,IAAO,EAGtCjP,YAAYuP,GACLjP,KAAK6O,YACR7O,KAAK6O,UAAY,IAEnB7O,KAAK6O,UAAUD,KAAKK,KAjDXjO,EAASN,EAAA,CAHtB/D,EAAA,GAECmC,aAAa,cACDkC,GAAA3E,EAAA2E,4bCJb,MAAAkO,EAAAvS,EAAA,GAIAwS,EAAAxS,EAAA,IAIA,IAAayS,EAAb,cAAkCD,EAAAE,OAIhC3P,YAAYmB,EAAYyO,EAAgBC,GACtCxP,MAAMc,EAAMyO,EAAOE,QAAQC,QAC3BzP,KAAKsP,OAASA,EACdtP,KAAKuP,WAAaA,EAClBvP,KAAK0P,gBAAkBJ,EAAOE,QAAQE,gBAGxChQ,QACEM,KAAKsP,OAAOK,MAGdjQ,eAGE,GAFAK,MAAMiC,eAEFhC,KAAKsP,OAAOM,SAAW,EAAG,CAC5B,MAAMvD,EAAOrM,KAAKsP,OAAOO,MAAMxD,KACzByD,EAAiBzD,EAAKyD,eAC5B,GAAIA,EAAgB,CAClB,MAAMC,EAAU,EAAM/P,KAAKsP,OAAOM,SAAW5P,KAAKsP,OAAOE,QAAQI,SAC3DI,EAAQC,KAAKC,MAAMH,EAAUD,EAAeK,QAC5CC,EAAIN,EAAenQ,EAAIqQ,EAAQF,EAAejQ,MAC9CwQ,EAAIP,EAAelQ,EACnBD,EAAIK,KAAKa,KAAKlB,GAAMK,KAAKa,KAAKhB,MAAQiQ,EAAejQ,OAAS,EAAK,EACnED,EAAII,KAAKa,KAAKjB,GAAMI,KAAKa,KAAKf,OAASgQ,EAAehQ,QAAU,EAAK,EAC3EuM,EAAK+B,IAAIkC,UAAU3Q,EAAGC,EAAGwQ,EAAGC,EAAGP,EAAejQ,MAAOiQ,EAAehQ,QAEpE,MAAMyQ,EAAKvQ,KAAKa,KAAKlB,EAAKK,KAAKa,KAAKhB,MAAQ,EAAK,EAC3C2Q,EAAKxQ,KAAKa,KAAKjB,EAAKI,KAAKa,KAAKf,OAAS,EAAK,EAClDuM,EAAK+B,IAAIqC,mBAAmBzQ,KAAKsP,OAAOM,SAASc,WAAYH,EAAK,EAAGC,EAAK,EAAGtB,EAAA3C,OAAOC,OACpFH,EAAK+B,IAAIqC,mBAAmBzQ,KAAKsP,OAAOM,SAASc,WAAYH,EAAIC,EAAK,EAAGtB,EAAA3C,OAAOG,WAjC3E0C,EAAY1O,EAAA,CAHzB/D,EAAA,GAECmC,aAAa,iBACDsQ,GAAA/S,EAAA+S,+bCRb,MAAAzO,EAAAhE,EAAA,GAIAwS,EAAAxS,EAAA,IAKA,IAAagU,EAAb,cAAgCxB,EAAAE,OAI9B3P,YAAYmB,EAAY+P,EAAiCC,GACvD9Q,MAAMc,EAAMgQ,EAAYpB,QACxBzP,KAAK4Q,eAAiBA,EACtB5Q,KAAK8Q,WAAa,IAAInQ,EAAAK,UACtBhB,KAAK8Q,WAAWvP,IAAIsP,GACpB7Q,KAAK0P,gBAAkBmB,EAAYnB,gBAGrChQ,QACE,GAAIM,KAAK8Q,WAAW3P,OAAS,EAAG,CAC9B,MAAM4P,EAAO/Q,KAAK8Q,WAAWpT,IAAI,GAC3BsT,EAASD,EAAK1E,KAAK2E,OACrBA,GACFA,EAAOrB,IAAIoB,IAKjBrR,YACE,IAAK,IAAI7C,EAAImD,KAAK8Q,WAAW3P,OAAS,EAAGtE,GAAK,EAAGA,IAC/CmD,KAAK4Q,eAAepP,OAAOxB,KAAK8Q,WAAWpT,IAAIb,IAInD6C,eACE,GAAKM,KAAKc,MAIVf,MAAMiC,eAEFhC,KAAK8Q,WAAW3P,OAAS,GAAG,CAC9B,MAAM8P,EAAMjR,KAAKa,KACjBb,KAAKc,IAAIsN,IAAI8C,gBAAgBlR,KAAK8Q,WAAW3P,OAAOuP,WAAYO,EAAI9Q,GAAK,EAAG8Q,EAAI7Q,GAAK,KAIzFV,cAAc0C,GACZ,GAAIpC,KAAK8Q,WAAW3P,OAAS,EAAG,CAC9B,MAAM4P,EAAO/Q,KAAK8Q,WAAWpT,IAAI,GACjCqT,EAAKI,kBACLnR,KAAK0P,gBAAkBqB,EAAKrB,gBAE9B3P,MAAMqR,cAAchP,KA/CXuO,EAAUjQ,EAAA,CAHvB/D,EAAA,GAECmC,aAAa,eACD6R,GAAAtU,EAAAsU,2CCEb,SAAgBlE,EAAQ9O,EAAW0T,EAAWC,EAAWC,GAIvD,YAHUC,IAAND,IACFA,EAAI,MAEG5T,GAAK,KAAO0T,GAAK,KAAOC,GAAK,GAAKC,mDAJ7ClV,EAAAoQ,UAmBApQ,EAAAoV,QAAA,SAAwBC,EAAW9S,EAAWyR,EAAWkB,GACvD,MAAM1U,EAAS,EAAJ6U,EAAS,EACdC,EAAQ,EAAJD,EAAQ7U,EACZ8B,EAAI0R,GAAK,EAAIzR,GACbgT,EAAIvB,GAAK,EAAIsB,EAAI/S,GACjBb,EAAIsS,GAAK,GAAK,EAAIsB,GAAK/S,GAC7B,IAAIjB,EAAG0T,EAAGC,EACV,OAAQzU,EAAI,GACV,KAAK,EACHc,EAAI0S,EAAGgB,EAAItT,EAAGuT,EAAI3S,EAClB,MACF,KAAK,EACHhB,EAAIiU,EAAGP,EAAIhB,EAAGiB,EAAI3S,EAClB,MACF,KAAK,EACHhB,EAAIgB,EAAG0S,EAAIhB,EAAGiB,EAAIvT,EAClB,MACF,KAAK,EACHJ,EAAIgB,EAAG0S,EAAIO,EAAGN,EAAIjB,EAClB,MACF,KAAK,EACH1S,EAAII,EAAGsT,EAAI1S,EAAG2S,EAAIjB,EAClB,MACF,KAAK,EACH1S,EAAI0S,EAAGgB,EAAI1S,EAAG2S,EAAIM,EAClB,MACF,QACEjU,EAAI,EACJ0T,EAAI,EACJC,EAAI,EAKR,YAHUE,IAAND,IACFA,EAAI,GAEC9E,EAAa,IAAJ9O,EAAW,EAAQ,IAAJ0T,EAAW,EAAQ,IAAJC,EAAW,EAAQ,IAAJC,EAAW,obC5D1E,MAAApC,EAAAxS,EAAA,IAIA,IAAakV,EAAb,cAAwC1C,EAAAE,OAItC3P,YAAYmB,EAAY+P,EAAiCkB,GACvD/R,MAAMc,EAAMiR,EAAarC,QACzBzP,KAAK4Q,eAAiBA,EACtB5Q,KAAK8R,aAAeA,EACpB9R,KAAK0P,gBAAkBoC,EAAapC,gBAGtChQ,QACE,MAAMqR,EAAO/Q,KAAK+R,UAClB,GAAIhB,EAAM,CACR,MAAMC,EAASD,EAAK1E,KAAK2E,OACrBA,GACFA,EAAOrB,IAAIoB,IAKjBrR,eACE,GAAKM,KAAKc,MAIVf,MAAMiC,gBAEDhC,KAAK2B,cAAc,CACtB,MAAMsP,EAAMjR,KAAKa,KACXmR,EAAQhS,KAAKiS,aACnBjS,KAAKc,IAAIsN,IAAI8C,gBAAgBc,EAAMtB,WAAYO,EAAI9Q,GAAK,EAAG8Q,EAAI7Q,GAAK,KAIhEV,UACN,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAK4Q,eAAezP,OAAQtE,IAAK,CACnD,MAAMkU,EAAO/Q,KAAK4Q,eAAelT,IAAIb,GACrC,GAAImD,KAAK8R,aAAaI,YAAYnB,GAChC,OAAOA,GAMLrR,aACN,IAAIsS,EAAQ,EACZ,IAAK,IAAInV,EAAI,EAAGA,EAAImD,KAAK4Q,eAAezP,OAAQtE,IAC1CmD,KAAK8R,aAAaI,YAAYlS,KAAK4Q,eAAelT,IAAIb,KACxDmV,IAGJ,OAAOA,IApDEH,EAAkBnR,EAAA,CAH/B/D,EAAA,GAECmC,aAAa,uBACD+S,GAAAxV,EAAAwV,qcCHb,MAAA9D,EAAApR,EAAA,GAKA,IAAa0S,EAAb,cAA4BtB,EAAAnN,MAM1BlB,YAAYyS,EAAgB1C,EAAgB2C,EAAmBC,GAC7DtS,MAAMoS,GACNnS,KAAKyP,OAASA,EACdzP,KAAKoS,YAAcA,EACnBpS,KAAKqS,QAAUA,EAGjB3S,eACE,IAAKM,KAAKc,IACR,OAGF,MAAMwR,EAAMtS,KAAKyP,OACXwB,EAAMjR,KAAKa,KACX0R,GAAYtB,EAAIpR,MAAQyS,EAAIzS,OAAS,EAAK,EAC1C2S,GAAYvB,EAAInR,OAASwS,EAAIxS,QAAU,EAAK,EAClDwS,EAAInE,KAAKnO,KAAKc,IAAIsN,IAAK6C,EAAItR,EAAI4S,EAAStB,EAAIrR,EAAI4S,GAGlD9S,cACE,IAAKM,KAAKc,IACR,OAAO,EAGT,MAAMsN,EAAMpO,KAAKc,IAAIsN,IACfE,EAAQF,EAAIE,MAElB,OAAItO,KAAKa,KAAKiB,SAASwM,EAAMmE,QAAUnE,EAAM3M,cAC3C3B,KAAKc,IAAI4R,cAAc1S,OAChB,GAGJA,KAAKoS,aAAehE,EAAIC,aAAarO,KAAKoS,cAAkBpS,KAAKa,KAAKiB,SAASwM,IAAUA,EAAMC,aAClGvO,KAAK2S,SACE,GAGFrE,EAAMsE,MAAQ5S,KAAKa,KAAKiB,SAASwM,GAG1C5O,QACMM,KAAKqS,SACPrS,KAAKqS,UAIT3S,cAAc0C,GACRpC,KAAK0P,iBACPtN,EAAQyQ,SAAW7S,KAAK0P,gBACxBtN,EAAQlB,SAAU,GAElBkB,EAAQlB,SAAU,IAzDXmO,EAAM3O,EAAA,CAHnB/D,EAAA,GAECmC,aAAa,WACDuQ,GAAAhT,EAAAgT,ybCNb,MAAAtB,EAAApR,EAAA,GAIA,IAAamW,EAAb,cAAgC/E,EAAAnN,MAG9BlB,YAAYmB,EAAYuR,GACtBrS,MAAMc,GACNb,KAAKoS,YAAcA,EAGrBW,aACE,OAAO/S,KAAKe,SAASI,OAAS,EAAInB,KAAKe,SAASrD,IAAI,QAAe8T,EAGrE9R,eACE,IAAKM,KAAKc,IACR,OAGF,MAAMmQ,EAAMjR,KAAKa,KACXyR,EAAMtS,KAAKc,IAAIoN,SAAS8E,eAC1BV,GACFtS,KAAKc,IAAIsN,IAAIkC,UAAUW,EAAItR,EAAGsR,EAAIrR,EAAG0S,EAAI3S,EAAG2S,EAAI1S,EAAGqR,EAAIpR,MAAOoR,EAAInR,QAGpE,MAAMiT,EAAS/S,KAAK+S,OAChBA,IAAWA,EAAOpR,eACpBoR,EAAOlS,KAAKlB,EAAIK,KAAKa,KAAKlB,EAC1BoT,EAAOlS,KAAKjB,EAAII,KAAKa,KAAKjB,EAC1BmT,EAAOlS,KAAKhB,MAAQG,KAAKa,KAAKhB,MAC9BkT,EAAOlS,KAAKf,OAASE,KAAKa,KAAKf,OAC/BE,KAAK+B,gBAGH/B,KAAKoS,aACPpS,KAAKc,IAAIsN,IAAI8C,gBAAgB+B,OAAOC,aAAalT,KAAKoS,aAAcnB,EAAI9Q,GAAK,EAAG8Q,EAAIrR,EAAI,GAI5FF,cACE,IAAKM,KAAKc,IACR,OAAO,EAGT,GAAId,KAAKiC,sBACP,OAAO,EAGT,MAAMmM,EAAMpO,KAAKc,IAAIsN,IACfE,EAAQF,EAAIE,MACZyE,EAAS/S,KAAK+S,OACpB,OAAIA,IACG/S,KAAKoS,aAAehE,EAAIC,aAAarO,KAAKoS,cAC1CpS,KAAKa,KAAKiB,SAASwM,IAAUA,EAAMC,cACtCwE,EAAOJ,SACA,GAIJrE,EAAMsE,MAAQ5S,KAAKa,KAAKiB,SAASwM,KAzD/BwE,EAAUpS,EAAA,CAHvB/D,EAAA,GAECmC,aAAa,eACDgU,GAAAzW,EAAAyW,4FCFb,SAAYK,GACVA,IAAA,eACAA,IAAA,mBACAA,IAAA,eAHF,CAAY9W,EAAA8W,aAAA9W,EAAA8W,WAAU,qbCHtB,MAAA5T,EAAA5C,EAAA,GAKA,IAAayW,EAAb,cAA4B7T,EAAAE,KAQ1BC,YAAY2M,EAAY1M,EAAWC,EAAWxC,EAAcqS,EAAgB4D,GAC1EtT,MAAMJ,EAAGC,GACTI,KAAKqM,KAAOA,EACZrM,KAAKsT,OAAS,IAAI/T,EAAAE,KAAK,EAAG,GAC1BO,KAAK5C,KAAOA,EACZ4C,KAAKyP,OAASA,EACdzP,KAAKqT,OAASA,EACdrT,KAAKuT,OAAS,EAGhBC,aACE,OAAOxT,KAAKL,EAAIK,KAAKqM,KAAKoH,QAAQC,SAAS7T,MAAQG,KAAKsT,OAAO3T,EAGjEgU,aACE,OAAO3T,KAAKJ,EAAII,KAAKqM,KAAKoH,QAAQC,SAAS5T,OAASE,KAAKsT,OAAO1T,EAGlEgU,mBACE,OAAO5T,KAAKwT,OAAUxT,KAAKyP,OAAO5P,MAAQ,EAAK,EAGjDgU,mBACE,OAAO7T,KAAK2T,OAAU3T,KAAKyP,OAAO3P,OAAS,EAAK,EAGlDJ,WAAWa,GACT,OAAO0P,KAAK6D,MAAMvT,EAAMZ,EAAIK,KAAKL,EAAGY,EAAMX,EAAII,KAAKJ,GAGrDF,SAASC,EAAWC,GAClB,OAAOqQ,KAAK6D,MAAMnU,EAAIK,KAAKL,EAAGC,EAAII,KAAKJ,GAGzCF,OACEM,KAAKyP,OAAOtB,KAAKnO,KAAKqM,KAAK+B,IAAKpO,KAAKwT,OAASxT,KAAKqM,KAAK0H,SAASpU,EAAGK,KAAK2T,OAAS3T,KAAKqM,KAAK0H,SAASnU,GAGvGF,aAEAA,WAEAA,cAQAA,OAAOsU,GACL,OAAO,IA3DEZ,EAAM1S,EAAA,CAHnB/D,EAAA,GAECmC,aAAa,WACDsU,GAAA/W,EAAA+W,wFCNb/W,EAAA4X,GAAA,MAIEvU,YAAYmQ,GACV7P,KAAK6P,MAAQA,EACb7P,KAAKkU,cAAe,mFCPxB7X,EAAA8X,MAAA,MAKEzU,cACEM,KAAK4S,MAAO,EACZ5S,KAAKoU,UAAY,EACjBpU,KAAKqU,QAAU,EAGjB3U,SACMM,KAAK4S,MACP5S,KAAKoU,YACLpU,KAAKqU,QAAU,IAEfrU,KAAKoU,UAAY,EACjBpU,KAAKqU,6bChBX,MAAAC,EAAA3X,EAAA,IACA4X,EAAA5X,EAAA,IACAoR,EAAApR,EAAA,GACA6X,EAAA7X,EAAA,GAEA8X,EAAA9X,EAAA,GACA4C,EAAA5C,EAAA,GACA+X,EAAA/X,EAAA,IAIA,IAAagY,EAAb,MAOEjV,YAAY0O,GACVpO,KAAKoO,IAAMA,EACXpO,KAAKkO,SAAW,IAAIoG,EAAAM,eAAe,IAAIH,EAAAjV,KAAK,EAAG,EAAG,EAAG,IACrDQ,KAAK6U,UAAY,IAAI9G,EAAAnN,MAAMwN,EAAI0G,MAC/B9U,KAAK6U,UAAU/T,IAAMd,KAGvBN,IAAI2B,GACFrB,KAAK6U,UAAUtT,IAAIF,GAGrB3B,OAAO2B,GACLrB,KAAK6U,UAAUrT,OAAOH,GAGxB3B,WAAWc,GACT,OAAOR,KAAK6U,UAAUhT,WAAWrB,GAGnCd,cACE,OAAIM,KAAKmC,aAAenC,KAAK+U,YAC3B/U,KAAKgV,kBACE,GAGFhV,KAAK6U,UAAU3S,cAGxBxC,OACEM,KAAK6U,UAAU7S,eAEXhC,KAAKmC,aAEPnC,KAAKmC,YAAYH,eAIrBtC,cAAc2B,GACZ,MAAMiN,EAAQtO,KAAKoO,IAAIE,MACvBtO,KAAKmC,YAAcd,EACnBrB,KAAK+U,WAAa,IAAIxV,EAAAE,KAAK6O,EAAMmE,MAAM9S,EAAI0B,EAAMR,KAAKlB,EAAG2O,EAAMmE,MAAM7S,EAAIyB,EAAMR,KAAKjB,GAG9EF,iBACN,MAAM4O,EAAQtO,KAAKoO,IAAIE,MACjBnM,EAAcnC,KAAKmC,YACnB4S,EAAa/U,KAAK+U,WACxB,GAAIzG,EAAMsE,KAERzQ,EAAYtB,KAAKlB,EAAI2O,EAAM3O,EAAIoV,EAAWpV,EAC1CwC,EAAYtB,KAAKjB,EAAI0O,EAAM1O,EAAImV,EAAWnV,MACrC,CAEL,MAAMqV,EAASjV,KAAK6U,UAAUhT,WAAWyM,GACrC2G,GAAUA,EAAOC,OAAO/S,IAE1BA,EAAYtB,KAAKlB,EAAIsV,EAAOpU,KAAKlB,EACjCwC,EAAYtB,KAAKjB,EAAIqV,EAAOpU,KAAKjB,EACjCuC,EAAYgT,KAAKF,IACR9S,aAAuBuS,EAAA/D,YAAcsE,IAAWjV,KAAK6U,UAE9D1S,EAAYiT,YACHjT,aAAuBoS,EAAA1C,oBAAsBoD,IAAWjV,KAAK6U,UAElE1S,EAAYb,QACda,EAAYb,OAAOE,OAAOW,GAEnBA,aAAuBqS,EAAApF,cAAgBjN,EAAYoN,UAAY0F,IAAWjV,KAAK6U,UAEpF1S,EAAYb,QACda,EAAYb,OAAOE,OAAOW,IAI5BA,EAAYtB,KAAKlB,EAAI2O,EAAMmE,MAAM9S,EAAIoV,EAAWpV,EAChDwC,EAAYtB,KAAKjB,EAAI0O,EAAMmE,MAAM7S,EAAImV,EAAWnV,GAElDI,KAAKmC,iBAAcqP,EACnBxR,KAAK+U,gBAAavD,KArFXmD,EAAGjU,EAAA,CAHhB/D,EAAA,GAECmC,aAAa,QACD6V,GAAAtY,EAAAsY,qFCTbtY,EAAAgZ,QAAA,MAIE3V,YAAY4V,EAAcC,GACxBvV,KAAKsV,KAAOA,EACZtV,KAAKuV,MAAQA,EAGf7V,KAAK0O,EAAUoH,GACbpH,EAAIqH,WAAWzV,KAAKsV,KAAME,EAAI7V,EAAG6V,EAAI5V,EAAGI,KAAKuV,MAAOC,oFCdxD,MAAAE,EAAA/Y,EAAA,IACA8X,EAAA9X,EAAA,GAYAN,EAAAsZ,UAAA,SAA0BC,EAAeC,GACvC,OAAO,EAAY,GAARA,EAAaD,GAS1BvZ,EAAAyZ,QAAA,MA8BEpW,YAAYG,EAAeC,EAAgBiW,EAAoBrC,GAE7DzU,QAAQC,IAAI,iBAAkBW,EAAOC,GACrCE,KAAKH,MAAQA,EACbG,KAAKF,OAASA,EACdE,KAAK0T,SAAWA,EAChB1T,KAAKgW,KAAO,IAAIC,MAAMnW,GACtBE,KAAKkW,eAAiB,IAAID,MAAMF,GAChC/V,KAAKmW,UAAY,GACjBnW,KAAKoW,WAAa,GAClBpW,KAAKqW,OAAQ,EAIbrW,KAAKsW,QAAU,EACftW,KAAKuW,QAAU,EACfvW,KAAKwW,YAAc,IAAI/B,EAAAjV,KAAK,EAAG,EAAGK,EAAOC,GACzCE,KAAKyW,gBAAkB,IAAIhC,EAAAjV,KAAK,EAAG,EAAGK,EAAOC,GAE7C,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC/BI,KAAKgW,KAAKpW,GAAK,IAAIqW,MAAMpW,GACzB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAOF,IACzBK,KAAKgW,KAAKpW,GAAGD,GAAK,IAAI+V,EAAAgB,YAAY/W,EAAGC,EAAG,GAI5C,IAAK,IAAI/C,EAAI,EAAGA,EAAIkZ,EAAYlZ,IAE9BmD,KAAKkW,eAAerZ,GAAK,IAAI8Z,WAAW,EAAI9W,EAAQC,GAiCxDJ,QAKE,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAKkW,eAAe/U,OAAQtE,IAAK,CACnD,MAAM+Z,EAAY5W,KAAKkW,eAAerZ,GAEtC,IAAIga,EAAI,EACR,KAAOA,EAAID,EAAUzV,QACnByV,EAAUC,KAAO,IACjBD,EAAUC,KAAO,IACjBD,EAAUC,KAAO,EACjBD,EAAUC,KAAO,GAKvBnX,QAAQoX,EAAoBnX,EAAWC,EAAWmX,EAAcC,EAAmBC,GACjF,GAAItX,EAAI,GAAKA,GAAKK,KAAKH,OAASD,EAAI,GAAKA,GAAKI,KAAKF,OACjD,OAGiB,IAAfgX,IACF9W,KAAKgW,KAAKpW,GAAGD,GAAGoX,KAAOA,EACvB/W,KAAKgW,KAAKpW,GAAGD,GAAGqX,UAAYA,EAC5BhX,KAAKgW,KAAKpW,GAAGD,GAAGsX,kBAAiCzF,IAAjByF,EAA8BA,IAAiBD,GAIjF,MAAMJ,EAAY5W,KAAKkW,eAAeY,GAChCI,EAAK,GAAKtX,EAAII,KAAKH,MAAQF,GAC3BwX,EAAc,IAATJ,EAAa,KAAQA,EAAO,GAAK,GAAM,EAC5CK,EAAc,IAATL,EAAa,KAAQA,EAAO,GAAK,GAAM,EAClDH,EAAUM,EAAK,GAAKC,EACpBP,EAAUM,EAAK,GAAKE,EAGtB1X,QAAQyX,EAAYC,GAClB,OAAID,EAAK,GAAKA,GAAMnX,KAAKH,OAASuX,EAAK,GAAKA,GAAMpX,KAAKF,OAC9C,KAEFE,KAAKgW,KAAKoB,GAAID,GAGvBzX,QAAQyX,EAAYC,GAClB,MAAMC,EAAOrX,KAAKsX,QAAQH,EAAIC,GAC9B,OAAOC,EAAOA,EAAKN,KAAO,EAG5BrX,UAAUyX,EAAYC,GACpB,MAAMC,EAAOrX,KAAKsX,QAAQH,EAAIC,GAC9B,OAAQC,GAAQA,EAAKL,QAGvBtX,UAAUC,EAAWC,GACnB,QAAID,EAAIK,KAAKwW,YAAYvW,IAAMN,GAAKK,KAAKwW,YAAYrW,IAAMP,EAAII,KAAKwW,YAAYtW,IAAMN,GAAKI,KAAKwW,YAAYpW,KAGrGJ,KAAKgW,KAAKpW,GAAGD,GAAGuB,QAGzBxB,OAAOyX,EAAYC,GACjB,MAAMC,EAAOrX,KAAKsX,QAAQH,EAAIC,GAC9B,OAAOC,GAAQA,EAAKE,KAGtB7X,QAAQyX,EAAYC,EAAYG,GAC9B,MAAMF,EAAOrX,KAAKsX,QAAQH,EAAIC,GAC1BC,IACFA,EAAKE,KAAOA,GAIhB7X,WAAWyX,EAAYC,EAAYN,GACjC,GAAIK,EAAK,GAAKA,GAAMnX,KAAKH,OAASuX,EAAK,GAAKA,GAAMpX,KAAKF,OACrD,OAAO,EAIT,MAAMoX,EAAK,GAAKE,EAAKpX,KAAKH,MAAQsX,GAClC,OAAmD,IAA5CnX,KAAKkW,eAAeY,GAAYI,EAAK,GAG9CxX,YAAYyX,EAAYC,EAAYN,EAAoBU,GACtD,GAAIL,EAAK,GAAKA,GAAMnX,KAAKH,OAASuX,EAAK,GAAKA,GAAMpX,KAAKF,OACrD,OAIF,MAAMoX,EAAK,GAAKE,EAAKpX,KAAKH,MAAQsX,GAClCnX,KAAKkW,eAAeY,GAAYI,EAAK,GAAKM,EAAW,EAAI,EAuD3D9X,WACE,IAAK,IAAIE,EAAI,EAAGA,EAAII,KAAKF,OAAQF,IAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIK,KAAKH,MAAOF,IAC9BK,KAAKgW,KAAKpW,GAAGD,GAAG4X,MAAO,EACvBvX,KAAKgW,KAAKpW,GAAGD,GAAGuB,SAAU,EAKhCxB,WAAW4W,EAAiBC,EAAiBkB,EAAgBC,GAC3D1X,KAAKsW,QAAUA,EACftW,KAAKuW,QAAUA,EACfvW,KAAKyW,gBAAgBkB,KAAK3X,KAAKwW,aAE/B,MAAMoB,EAAKH,EACLI,EAAKH,GAAWD,EACtBzX,KAAKwW,YAAY7W,EAAIsQ,KAAK6H,IAAI,EAAGxB,EAAUsB,GAC3C5X,KAAKwW,YAAY5W,EAAIqQ,KAAK6H,IAAI,EAAGvB,EAAUsB,GAC3C7X,KAAKwW,YAAY3W,MAAQoQ,KAAK8H,IAAI/X,KAAKH,MAAQ,EAAGyW,EAAUsB,GAAM5X,KAAKwW,YAAY7W,EAAI,EACvFK,KAAKwW,YAAY1W,OAASmQ,KAAK8H,IAAI/X,KAAKF,OAAS,EAAGyW,EAAUsB,GAAM7X,KAAKwW,YAAY5W,EAAI,EAEzF,IAAK,IAAIA,EAAII,KAAKwW,YAAYtW,GAAIN,EAAII,KAAKwW,YAAYpW,GAAIR,IACzD,IAAK,IAAID,EAAIK,KAAKwW,YAAYvW,GAAIN,EAAIK,KAAKwW,YAAYrW,GAAIR,IACzDK,KAAKgW,KAAKpW,GAAGD,GAAGuB,SAAU,EAI9BlB,KAAKgW,KAAKO,GAASD,GAASpV,SAAU,EAEtClB,KAAKgY,eAAe,EAAG,GACvBhY,KAAKiY,eAAe,EAAG,GACvBjY,KAAKgY,eAAe,GAAI,GACxBhY,KAAKiY,eAAe,GAAI,GACxBjY,KAAKgY,gBAAgB,EAAG,GACxBhY,KAAKiY,gBAAgB,EAAG,GACxBjY,KAAKgY,gBAAgB,GAAI,GACzBhY,KAAKiY,gBAAgB,GAAI,GACzBjY,KAAKqW,OAAQ,EAMP3W,eAAewY,EAAgBC,GACrC,MAAMC,EAAwB,GACxBC,EAAsB,GAC5B,IAII1Y,EACAC,EACA0Y,EACAC,EACArX,EACAsX,EACAC,EACAC,EACAC,EACAC,EAbAC,EAAY,EACZC,EAAiB,EACjBC,EAAsB,EACtBC,EAAW,EAYf,IAAKpZ,EAAII,KAAKuW,QAAU4B,EAAQvY,GAAKI,KAAKwW,YAAYtW,IAAMN,EAAII,KAAKwW,YAAYpW,GAC/ER,GAAKuY,EAAQY,EAAsBD,IAAkBD,EAGrD,IAFAP,EAAY,GAAMO,EAClBD,GAAoB,EACfL,EAAgBtI,KAAKgJ,MAAMD,EAAWH,EAAY,IAAMlZ,EAAIK,KAAKsW,QAAWiC,EAAgBL,EAC/FK,GAAiBM,GAAalZ,GAAKK,KAAKwW,YAAYvW,IAAMN,EAAIK,KAAKwW,YAAYrW,GAC/ER,GAAKuY,IAAUK,EAAeK,EAAmBD,EAAU,CAO3D,GANAzX,GAAU,EACVsX,GAAW,EAEXE,EAAaE,EACbD,GAFAF,EAAcF,EAAgBM,GAELP,EAErBS,EAAsB,EACxB,GAAM/Y,KAAKgW,KAAKpW,EAAIuY,GAAQxY,GAAGuB,UAAYlB,KAAKgW,KAAKpW,EAAIuY,GAAQxY,GAAGsX,cAChEjX,KAAKgW,KAAKpW,EAAIuY,GAAQxY,EAAIuY,GAAQhX,UAAYlB,KAAKgW,KAAKpW,EAAIuY,GAAQxY,EAAIuY,GAAQjB,cAGlF,IAAK,IAAIiC,EAAM,EAAGA,EAAMH,GAAuB7X,IAAWgY,EACxD,GAAIR,GAAcL,EAAUa,IAAQP,GAAYP,EAAYc,GAC1D,GAAKlZ,KAAKgW,KAAKpW,GAAGD,GAAGsX,aAKd,CACL,GAAIyB,GAAcN,EAAYc,IAAQP,GAAYN,EAAUa,GAAM,CAChEhY,GAAU,EACV,MAEAkX,EAAYc,GAAOjJ,KAAK8H,IAAIK,EAAYc,GAAMR,GAC9CL,EAAUa,GAAOjJ,KAAK6H,IAAIO,EAAUa,GAAMP,GAC1CH,GAAW,OAXb,GAAIC,EAAcL,EAAYc,IAAQT,EAAcJ,EAAUa,GAAM,CAClEhY,GAAU,EACV,YAPRA,GAAU,EAuBVA,IACFlB,KAAKgW,KAAKpW,GAAGD,GAAGuB,SAAU,EAC1BlB,KAAKgW,KAAKpW,GAAGD,GAAG4X,MAAO,EACnBvX,KAAKgW,KAAKpW,GAAGD,GAAGsX,eACd+B,GAAYN,EACdM,EAAWL,EACDH,IACVJ,EAAYU,GAAkBJ,EAC9BL,EAAUS,KAAoBH,MAWlCjZ,eAAewY,EAAgBC,GACrC,MAAMC,EAAwB,GACxBC,EAAsB,GAC5B,IAII1Y,EACAC,EACA0Y,EACAC,EACArX,EACAsX,EACAC,EACAC,EACAC,EACAC,EAbAC,EAAY,EACZC,EAAiB,EACjBC,EAAsB,EACtBC,EAAW,EAYf,IAAKrZ,EAAIK,KAAKsW,QAAU4B,EAAQvY,GAAKK,KAAKwW,YAAYvW,IAAMN,EAAIK,KAAKwW,YAAYrW,GAC/ER,GAAKuY,EAAQa,EAAsBD,IAAkBD,EAGrD,IAFAP,EAAY,GAAMO,EAClBD,GAAoB,EACfL,EAAgBtI,KAAKgJ,MAAMD,EAAWH,EAAY,IAAMjZ,EAAII,KAAKuW,QAAWgC,EAAgBJ,EAC/FI,GAAiBM,GAAajZ,GAAKI,KAAKwW,YAAYtW,IAAMN,EAAII,KAAKwW,YAAYpW,GAC/ER,GAAKuY,IAAUI,EAAeK,EAAmBD,EAAU,CAO3D,GANAzX,GAAU,EACVsX,GAAW,EAEXE,EAAaE,EACbD,GAFAF,EAAcF,EAAgBM,GAELP,EAErBS,EAAsB,EACxB,GAAM/Y,KAAKgW,KAAKpW,GAAGD,EAAIuY,GAAQhX,UAAYlB,KAAKgW,KAAKpW,GAAGD,EAAIuY,GAAQjB,cAChEjX,KAAKgW,KAAKpW,EAAIuY,GAAQxY,EAAIuY,GAAQhX,UAAYlB,KAAKgW,KAAKpW,EAAIuY,GAAQxY,EAAIuY,GAAQjB,cAGlF,IAAK,IAAIiC,EAAM,EAAGA,EAAMH,GAAuB7X,IAAWgY,EACxD,GAAIR,GAAcL,EAAUa,IAAQP,GAAYP,EAAYc,GAC1D,GAAKlZ,KAAKgW,KAAKpW,GAAGD,GAAGsX,aAKd,CACL,GAAIyB,GAAcN,EAAYc,IAAQP,GAAYN,EAAUa,GAAM,CAChEhY,GAAU,EACV,MAEAkX,EAAYc,GAAOjJ,KAAK8H,IAAIK,EAAYc,GAAMR,GAC9CL,EAAUa,GAAOjJ,KAAK6H,IAAIO,EAAUa,GAAMP,GAC1CH,GAAW,OAXb,GAAIC,EAAcL,EAAYc,IAAQT,EAAcJ,EAAUa,GAAM,CAClEhY,GAAU,EACV,YAPRA,GAAU,EAuBVA,IACFlB,KAAKgW,KAAKpW,GAAGD,GAAGuB,SAAU,EAC1BlB,KAAKgW,KAAKpW,GAAGD,GAAG4X,MAAO,EACnBvX,KAAKgW,KAAKpW,GAAGD,GAAGsX,eACd+B,GAAYN,EACdM,EAAWL,EACDH,IACVJ,EAAYU,GAAkBJ,EAC9BL,EAAUS,KAAoBH,uFC1b5C,MAAAQ,EAAAxc,EAAA,IAOMyc,EAAY,mXAmBZC,EAAY,0kBA4BlBhd,EAAAid,gBAAA,MA+BE5Z,YAAY6Z,EAA2B9F,GACrCzT,KAAKuZ,GAAKA,EACVvZ,KAAKyT,QAAUA,EAqCfzT,KAAKwZ,eAAiBD,EAAGE,eACzBF,EAAGG,WAAWH,EAAGI,aAAc3Z,KAAKwZ,gBACpCD,EAAGK,WAAWL,EAAGI,aAAc,IAAIE,aAZjB,EAEf,GAAI,EAAG,EAAG,EACX,GAAI,EAAG,EAAG,EACV,EAAG,EAAG,EAAG,GACR,GAAI,EAAG,EAAG,EACX,EAAG,EAAG,EAAG,GACR,EAAG,EAAG,EAAG,IAKgDN,EAAGO,aAE/D9Z,KAAK+Z,cAAgBZ,EAAAa,kBAAkBT,EAAIH,EAAWC,GACtDrZ,KAAKia,kBAAoBV,EAAGW,kBAAkBla,KAAK+Z,cAAe,YAClE/Z,KAAKma,iBAAmBZ,EAAGW,kBAAkBla,KAAK+Z,cAAe,WACjE/Z,KAAKoa,oBAAsBb,EAAGc,mBAAmBra,KAAK+Z,cAAe,gBACrE/Z,KAAKsa,kBAAoBf,EAAGc,mBAAmBra,KAAK+Z,cAAe,cACnE/Z,KAAKua,eAAiBhB,EAAGc,mBAAmBra,KAAK+Z,cAAe,WAChE/Z,KAAKwa,gBAAkBjB,EAAGc,mBAAmBra,KAAK+Z,cAAe,YACjE/Z,KAAKya,iBAAmBlB,EAAGc,mBAAmBra,KAAK+Z,cAAe,aAClE/Z,KAAK0a,mBAAqBnB,EAAGc,mBAAmBra,KAAK+Z,cAAe,SACpE/Z,KAAK2a,qBAAuBpB,EAAGc,mBAAmBra,KAAK+Z,cAAe,WAMtE/Z,KAAK4a,cAAgB,IAAI3E,MAAMxC,EAAQyC,eAAe/U,QAEtD,IAAK,IAAItE,EAAI,EAAGA,EAAI4W,EAAQyC,eAAe/U,OAAQtE,IAAK,CACtD,MAAMge,EAAUtB,EAAGuB,gBACblE,EAAYnD,EAAQyC,eAAerZ,GAEzC0c,EAAGwB,YAAYxB,EAAGyB,WAAYH,GAC9BtB,EAAG0B,WAAW1B,EAAGyB,WAAY,EAAGzB,EAAG2B,KAAMzH,EAAQ5T,MAAO4T,EAAQ3T,OAAQ,EAAGyZ,EAAG2B,KAAM3B,EAAG4B,cAAevE,GAGtG2C,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAG8B,mBAAoB9B,EAAG+B,SAC1D/B,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGgC,mBAAoBhC,EAAG+B,SAC1D/B,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGiC,eAAgBjC,EAAGkC,eACtDlC,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGmC,eAAgBnC,EAAGkC,eAEtDzb,KAAK4a,cAAc/d,GAAKge,GAqF5Bnb,KAAKC,EAAWC,EAAWC,EAAeC,EAAgB6b,GACxD,MAAMpC,EAAKvZ,KAAKuZ,GACV9F,EAAUzT,KAAKyT,QAErB8F,EAAGqC,OAAOrC,EAAGsC,OACbtC,EAAGuC,UAAUvC,EAAGwC,UAAWxC,EAAGyC,qBAE9BzC,EAAG0C,WAAWjc,KAAK+Z,eAEnBR,EAAGG,WAAWH,EAAGI,aAAc3Z,KAAKwZ,gBAEpCD,EAAG2C,wBAAwBlc,KAAKia,mBAChCV,EAAG2C,wBAAwBlc,KAAKma,kBAChCZ,EAAG4C,oBAAoBnc,KAAKia,kBAAmB,EAAGV,EAAG6C,OAAO,EAAO,GAAI,GACvE7C,EAAG4C,oBAAoBnc,KAAKma,iBAAkB,EAAGZ,EAAG6C,OAAO,EAAO,GAAI,GAEtE7C,EAAG8C,UAAUrc,KAAKsa,kBAAmB3a,EAAGC,GACxC2Z,EAAG8C,UAAUrc,KAAKoa,oBAAqBva,EAAOC,GAC9CyZ,EAAG8C,UAAUrc,KAAKwa,gBAAiB/G,EAAQ0C,UAAW1C,EAAQ2C,YAC9DmD,EAAG+C,UAAUtc,KAAKya,iBAAkBkB,GAAa,GAEjDpC,EAAGgD,cAAchD,EAAGiD,UACpBjD,EAAGkD,UAAUzc,KAAK2a,qBAAsB,GAExCpB,EAAGgD,cAAchD,EAAGmD,UACpBnD,EAAGkD,UAAUzc,KAAK0a,mBAAoB,GAEtC,MAAMiC,EAAO1M,KAAK8H,IAAItE,EAAQ+C,YAAYvW,GAAIwT,EAAQgD,gBAAgBxW,IAChE2c,EAAO3M,KAAK8H,IAAItE,EAAQ+C,YAAYtW,GAAIuT,EAAQgD,gBAAgBvW,IAChE2c,EAAO5M,KAAK6H,IAAIrE,EAAQ+C,YAAYrW,GAAIsT,EAAQgD,gBAAgBtW,IAChE2c,EAAO7M,KAAK6H,IAAIrE,EAAQ+C,YAAYpW,GAAIqT,EAAQgD,gBAAgBrW,IAGtE,IAAK,IAAIvD,EAAI,EAAGA,EAAI4W,EAAQyC,eAAe/U,OAAQtE,IAAK,CAEtD,MAAMge,EAAU7a,KAAK4a,cAAc/d,GAKnC,GAHA0c,EAAG8C,UAAUrc,KAAKua,eAAgB9G,EAAQ5T,MAAO4T,EAAQ3T,QACzDyZ,EAAGwB,YAAYxB,EAAGyB,WAAYH,GAE1BpH,EAAQ4C,MAAO,CACjB,MAAMO,EAAYnD,EAAQyC,eAAerZ,GAEzC,IAAK,IAAI+C,EAAIgd,EAAMhd,EAAIkd,EAAMld,IAC3B,IAAK,IAAID,EAAIgd,EAAMhd,EAAIkd,EAAMld,IAAK,CAChC,MAAMod,EAAQtJ,EAAQuJ,UAAUrd,EAAGC,GAAK,IAAM6T,EAAQwJ,OAAOtd,EAAGC,GAAK,IAAM,EAE3EgX,EAAU,GAAKhX,EAAI6T,EAAQ5T,MAAQF,GAAK,GAAKod,EAIjDxD,EAAG2D,cAAc3D,EAAGyB,WAAY,EAAG,EAAG,EAAGvH,EAAQ5T,MAAO4T,EAAQ3T,OAAQyZ,EAAG2B,KAAM3B,EAAG4B,cAAevE,GAGrG2C,EAAG4D,WAAW5D,EAAG6D,UAAW,EAAG,GAEjC3J,EAAQ4C,OAAQ,obC7SpB,MAAAgH,EAAA1gB,EAAA,IAEA2gB,EAAA3gB,EAAA,IACA4gB,EAAA5gB,EAAA,IACA6gB,EAAA7gB,EAAA,IACAgE,EAAAhE,EAAA,GAEAuS,EAAAvS,EAAA,GACA8gB,EAAA9gB,EAAA,IASA,IAAa+gB,EAAb,cAA2BD,EAAArK,OAWzB1T,YAAY2M,EAAY1M,EAAWC,EAAWxC,EAAcqS,EAAgB4D,GAC1EtT,MAAMsM,EAAM1M,EAAGC,EAAGxC,EAAMqS,EAAQ4D,GAChCrT,KAAK2d,GAAK,IACV3d,KAAK4d,MAAQ,IACb5d,KAAK6d,GAAK,EACV7d,KAAK8d,MAAQ,EACb9d,KAAK+d,UAAY,IAAIpd,EAAAK,UACrBhB,KAAKge,QAAU,IAAIrd,EAAAK,UACnBhB,KAAKie,iBAAmB,EACxBje,KAAKuX,MAAO,EAGd7X,YACEM,KAAK6d,GAAK7d,KAAK8d,MACf,IAAK,IAAIjH,EAAI,EAAGA,EAAI7W,KAAKge,QAAQ7c,OAAQ0V,IAAK,CAC5C,MAAMvH,EAAStP,KAAKge,QAAQtgB,IAAImZ,GAC5BvH,EAAOM,SAAW,GACpBN,EAAOM,YAKblQ,KAAKkY,EAAYC,EAAYqG,GAC3B,MAAMC,EAAQne,KAAKL,EAAIiY,EACjBwG,EAAQpe,KAAKJ,EAAIiY,EAIvB,GAAI7X,KAAKqT,QAEP,GAAIrT,KAAKqM,KAAKgS,UAAUF,EAAOC,GAC7B,OAAO,OAIT,GAAIpe,KAAKqM,KAAKoH,SAAWzT,KAAKqM,KAAKoH,QAAQ4K,UAAUF,EAAOC,GAC1D,OAAO,EAMXpe,KAAKL,EAAIwe,EACTne,KAAKJ,EAAIwe,EACTpe,KAAK6d,KACL7d,KAAKsT,OAAO3T,GAAKiY,EAAK5X,KAAKqM,KAAKoH,QAAQC,SAAS7T,MACjDG,KAAKsT,OAAO1T,GAAKiY,EAAK7X,KAAKqM,KAAKoH,QAAQC,SAAS5T,OAGjD,MAAMkS,EAAQkM,GAAc,EACtBI,EAASte,KAAKqM,KAAKoH,QAAQC,SAAS7T,MAAQmS,EAC5CuM,EAASve,KAAKqM,KAAKoH,QAAQC,SAAS5T,OAASkS,EAGnD,OAFAhS,KAAKqM,KAAKmS,WAAW5P,KAAK,IAAI4O,EAAAiB,eAAeze,KAAM4X,EAAK0G,EAAQzG,EAAK0G,EAAQvM,IAC7EhS,KAAKqM,KAAK2K,SAAU,GACb,EAGTtX,OAAOye,EAAeC,EAAeF,GACnC,OAAOle,KAAKmV,KAAKgJ,EAAQne,KAAKL,EAAGye,EAAQpe,KAAKJ,EAAGse,GAGnDxe,WAAWgf,EAAiBC,EAAiBT,GAC3C,MAAMtG,EAAK8G,EAAU1e,KAAKL,EACpBkY,EAAK8G,EAAU3e,KAAKJ,EAE1B,GAAIgY,EAAK,GAAKC,EAAK,GAAK7X,KAAKmV,MAAM,GAAI,EAAG+I,GACxC,OAAO,EAET,GAAItG,EAAK,GAAKC,EAAK,GAAK7X,KAAKmV,MAAM,EAAG,EAAG+I,GACvC,OAAO,EAET,GAAItG,EAAK,GAAKC,EAAK,GAAK7X,KAAKmV,KAAK,GAAI,EAAG+I,GACvC,OAAO,EAET,GAAItG,EAAK,GAAKC,EAAK,GAAK7X,KAAKmV,KAAK,EAAG,EAAG+I,GACtC,OAAO,EAGT,GAAIjO,KAAK2O,IAAIhH,GAAM3H,KAAK2O,IAAI/G,GAAK,CAC/B,GAAID,EAAK,GAAK5X,KAAKmV,MAAM,EAAG,EAAG+I,GAC7B,OAAO,EAET,GAAItG,EAAK,GAAK5X,KAAKmV,KAAK,EAAG,EAAG+I,GAC5B,OAAO,EAET,GAAIrG,EAAK,GAAK7X,KAAKmV,KAAK,GAAI,EAAG+I,GAC7B,OAAO,EAET,GAAIrG,EAAK,GAAK7X,KAAKmV,KAAK,EAAG,EAAG+I,GAC5B,OAAO,MAEJ,CACL,GAAIrG,EAAK,GAAK7X,KAAKmV,KAAK,GAAI,EAAG+I,GAC7B,OAAO,EAET,GAAIrG,EAAK,GAAK7X,KAAKmV,KAAK,EAAG,EAAG+I,GAC5B,OAAO,EAET,GAAItG,EAAK,GAAK5X,KAAKmV,MAAM,EAAG,EAAG+I,GAC7B,OAAO,EAET,GAAItG,EAAK,GAAK5X,KAAKmV,KAAK,EAAG,EAAG+I,GAC5B,OAAO,EAGX,OAAO,EAGTxe,OAAOuV,EAAe4J,GAChB5J,IAAWjV,OAIfA,KAAK8e,SAAS7J,EAAQ4J,GACtB5J,EAAO8J,WAAW/e,KAAM6e,GACxB7e,KAAK6d,KACL7d,KAAKqM,KAAKmS,WAAW5P,KAAK,IAAI0O,EAAA0B,cAAchf,KAAMiV,IAClDjV,KAAKqM,KAAK2K,SAAU,GAGtBtX,SAASuf,GACPjf,KAAK2d,GAAK1N,KAAK8H,IAAI/X,KAAK2d,GAAKsB,EAAMjf,KAAK4d,OACxC5d,KAAKkf,gBAAgBD,EAAKvO,WAAYxB,EAAA3C,OAAOa,aAG/C1N,WAAWyf,EAAiBN,GACtB7e,KAAK2d,IAAM,IAKf3d,KAAK2d,IAAMkB,EACX7e,KAAKkf,gBAAgBL,EAAOnO,WAAYxB,EAAA3C,OAAOS,KAE3ChN,KAAK2d,IAAM,IACb3d,KAAK2d,GAAK,EACV3d,KAAKof,QAAQD,GACbnf,KAAKqM,KAAKgT,SAAS7d,OAAOxB,QAI9BN,OAAOqR,GACLA,EAAKuO,SAAStf,MACdA,KAAK+d,UAAUxc,IAAIwP,GACnB/Q,KAAKqM,KAAKgT,SAAS7d,OAAOuP,GAG5BrR,IAAIqR,GACF,OAAOA,EAAKwO,MAAMvf,MAGpBN,KAAK8P,EAAkByF,EAA+BuK,GAChDhQ,EAAQiQ,aAAepC,EAAAlK,WAAWuM,MAAQzK,EACxCzF,EAAQmQ,KAAK3f,KAAMiV,IACjBuK,GACFA,IAIJxf,KAAKqM,KAAKuT,eAAepQ,EAASgQ,GAItC9f,gBAAgBmgB,EAAatK,GAC3BvV,KAAKqM,KAAKmS,WAAW5P,KAAK,IAAI2O,EAAAuC,sBAAsB9f,KAAM6f,EAAKtK,IAGjE7V,SAASuV,EAAe4J,IACxBnf,QAAQyf,MAnLGzB,EAAKhd,EAAA,CAJlB/D,EAAA,GAGCmC,aAAa,UACD4e,GAAArhB,EAAAqhB,uFCdb,MAAAqC,EAAApjB,EAAA,GAEMqjB,EAAW,GAEjB3jB,EAAA2iB,cAAA,cAAmCe,EAAA/T,UAKjCtM,YAAYugB,EAAgBhL,GAC1BlV,MAAMigB,GAAU,GAChBhgB,KAAKigB,OAASA,EACdjgB,KAAK4X,GAAK3C,EAAOtV,EAAIsgB,EAAOtgB,EAC5BK,KAAK6X,GAAK5C,EAAOrV,EAAIqgB,EAAOrgB,EAG9BF,SACE,MAAM3B,EAAIiiB,EAAWhgB,KAAKiM,UAEtBlO,GAAK,GAAKA,EAAI,IAChBiC,KAAKigB,OAAO3M,OAAO3T,GAAKK,KAAK4X,GAC7B5X,KAAKigB,OAAO3M,OAAO1T,GAAKI,KAAK6X,IAG3B9Z,GAAK,GAAKA,EAAI,IAChBiC,KAAKigB,OAAO3M,OAAO3T,GAAKK,KAAK4X,GAC7B5X,KAAKigB,OAAO3M,OAAO1T,GAAKI,KAAK6X,IAG/B9X,MAAMmgB,0FC9BV,MAAAhR,EAAAvS,EAAA,GAGAojB,EAAApjB,EAAA,GAEMqjB,EAAW,GAEjB3jB,EAAAyjB,sBAAA,cAA2CC,EAAA/T,UAKzCtM,YAAYmQ,EAAcgQ,EAAatK,GACrCxV,MAAMigB,GAAU,GAChBhgB,KAAK6P,MAAQA,EACb7P,KAAK6f,IAAMA,EACX7f,KAAKuV,MAAQA,GAASrG,EAAA3C,OAAOG,MAG/BhN,KAAK2M,GACH,MAAM2D,EAAQgQ,EAAWhgB,KAAKiM,UACxBtM,EAAIK,KAAK6P,MAAM2D,QAAWxT,KAAK6P,MAAMJ,OAAO5P,MAAQ,EAAK,GAAKwM,EAAK0H,SAASpU,EAE5ES,EADIJ,KAAK6P,MAAM8D,OAAS,EAAItH,EAAK0H,SAASnU,EACjCqQ,KAAK8H,IAAI,EAAG9H,KAAKgJ,MAAMjJ,EAAQ,IAC9C3D,EAAK+B,IAAIqC,mBAAmBzQ,KAAK6f,IAAKlgB,EAAGS,EAAIJ,KAAKuV,wFCvBtD,MAAAwK,EAAApjB,EAAA,GAEAN,EAAAoiB,eAAA,cAAoCsB,EAAA/T,UAKlCtM,YAAYugB,EAAgBrI,EAAYC,EAAY7F,GAClDjS,MAAMiS,GAAO,GACbhS,KAAKigB,OAASA,EACdjgB,KAAK4X,GAAKA,EACV5X,KAAK6X,GAAKA,EAGZnY,SACEM,KAAKiM,YACDjM,KAAKiM,WAAa,IACpBjM,KAAKigB,OAAO3M,OAAO3T,GAAKK,KAAK4X,GAC7B5X,KAAKigB,OAAO3M,OAAO1T,GAAKI,KAAK6X,IAER,IAAnB7X,KAAKiM,YACPjM,KAAKigB,OAAO3M,OAAO3T,EAAI,EACvBK,KAAKigB,OAAO3M,OAAO1T,EAAI,oFCxB7B,MAAMugB,EAAe,iBAErB,SAAgB/gB,EAAwBJ,GACtC,MAAMG,EAAW,IAAIihB,EAErB,OADAphB,EAAKmhB,GAAgBhhB,EACdA,EAHT9C,EAAA+C,0BAMA/C,EAAAgkB,qBAAA,SAAqCrhB,GAEnC,OADiBA,EAAKmhB,IACH/gB,EAAwBJ,IAG7C,MAAaohB,EAAb1gB,cACEM,KAAAX,UAAoB,SACpBW,KAAAV,WAAqB,GAFvBjD,EAAA+jB,mGCXA,MAAAE,EAAA3jB,EAAA,IACA4jB,EAAA5jB,EAAA,IACA6jB,EAAA7jB,EAAA,IACA8X,EAAA9X,EAAA,GACA8jB,EAAA9jB,EAAA,IACA4C,EAAA5C,EAAA,GACAmR,EAAAnR,EAAA,GAEM+jB,EAAgB,IAChBC,EAAiB,IACjBC,GAAsB,EACtBC,EAAuB,EAGvBC,EAAiB,CAAChT,EAAAzL,KAAK4E,YACvB8Z,EAAiB,CAACjT,EAAAzL,KAAK8E,YACvB6Z,EAAiB,CAAClT,EAAAzL,KAAKsE,YACvBsa,EAAiB,CAACnT,EAAAzL,KAAKwE,YACvBqa,EAAU,CAACpT,EAAAzL,KAAKmB,MAAOsK,EAAAzL,KAAK6E,WAAY4G,EAAAzL,KAAKoD,KAAMqI,EAAAzL,KAAKgE,KAAMyH,EAAAzL,KAAKmE,MACnE2a,EAAY,CAACrT,EAAAzL,KAAKkB,QAASuK,EAAAzL,KAAKyE,WAAYgH,EAAAzL,KAAKiD,KAAMwI,EAAAzL,KAAK0C,KAAM+I,EAAAzL,KAAK0D,MACvEqb,EAAY,CAACtT,EAAAzL,KAAKqB,QAASoK,EAAAzL,KAAKuE,WAAYkH,EAAAzL,KAAKmD,KAAMsI,EAAAzL,KAAK4D,MAC5Dob,EAAa,CAACvT,EAAAzL,KAAKoB,SAAUqK,EAAAzL,KAAK2E,WAAY8G,EAAAzL,KAAKqD,KAAMoI,EAAAzL,KAAK6C,MAC9Doc,EAAY,CAACxT,EAAAzL,KAAKa,SAAU4K,EAAAzL,KAAK0E,YAEvC1K,EAAAklB,IAAA,MAcE7hB,YAAYX,GACV,MAAMyiB,EAASziB,EAAQyiB,OACvB,IAAKA,EACH,MAAM,IAAIC,MAAM,kCAGlB,MAAMlI,EAAKiI,EAAOE,WAAW,QAAS,CAAC3E,OAAO,EAAO4E,WAAW,IAChE,IAAKpI,EACH,MAAM,IAAIkI,MAAM,+BAGlBzhB,KAAKwhB,OAASA,EACdxhB,KAAKuZ,GAAKA,EACVvZ,KAAK8U,KAAO/V,EAAQ+V,MAAQ,IAAIL,EAAAjV,KAAK,EAAG,EAAGkhB,EAAeC,GAC1D3gB,KAAK4hB,KAAO7iB,EAAQ6iB,MAAQtB,EAAAuB,WAC5B7hB,KAAK8hB,WAAa/iB,EAAQ+iB,YAAclB,EACxC5gB,KAAK+hB,YAAchjB,EAAQgjB,aAAelB,EAC1C7gB,KAAKgiB,OAAS,IAAIziB,EAAAE,KAAMO,KAAK8U,KAAKjV,MAAQ,EAAK,EAAIG,KAAK8U,KAAKhV,OAAS,EAAK,GAE3EyZ,EAAG0I,QAAQ1I,EAAG2I,YACd3I,EAAGqC,OAAOrC,EAAGsC,OACbtC,EAAGuC,UAAUvC,EAAGwC,UAAWxC,EAAGyC,qBAE9BwF,EAAO3hB,MAAQG,KAAK8U,KAAKjV,MACzB2hB,EAAO1hB,OAASE,KAAK8U,KAAKhV,OAC1B0hB,EAAOW,MAAMC,QAAU,OACvBZ,EAAOa,SAAW,EAClBb,EAAOc,QAEPtiB,KAAKuiB,OAASviB,KAAKwiB,WAEnBxiB,KAAKyiB,UAAY,IAAIhC,EAAAiC,UAAUnJ,EAAIxa,EAAQ4jB,SAAU3iB,KAAK4hB,MAC1D5hB,KAAK4iB,SAAW,IAAIrC,EAAAsC,SAASrB,GAC7BxhB,KAAKsO,MAAQ,IAAIkS,EAAAsC,MAAM9iB,MAEnBA,KAAK8hB,aACPrlB,OAAOsmB,iBAAiB,SAAU/iB,KAAKgjB,kBAAkB3kB,KAAK2B,OAAO,GACrEA,KAAKgjB,qBAGPhjB,KAAKijB,aAOPvjB,oBACE,MAAMG,EAAQpD,OAAOymB,WACfpjB,EAASrD,OAAO0mB,YAOhBZ,EAASviB,KAAKwiB,WACdY,EAAeb,EAAS,IAAQ,IAChCc,EAAed,EAAS,IAAQ,IAEtCviB,KAAK+hB,YAAc,EAEjB/hB,KAAK+hB,YADHliB,EAAQC,EACSmQ,KAAK6H,IAAI,EAAG7H,KAAK8H,IAAI9H,KAAKC,MAAMrQ,EAAQujB,GAAenT,KAAKC,MAAMpQ,EAASujB,KAE3EpT,KAAK6H,IAAI,EAAG7H,KAAK8H,IAAI9H,KAAKC,MAAMrQ,EAAQwjB,GAAepT,KAAKC,MAAMpQ,EAASsjB,KAGhGpjB,KAAK8U,KAAKjV,MAAQoQ,KAAKC,MAAMrQ,EAAQG,KAAK+hB,aAC1C/hB,KAAK8U,KAAKhV,OAASmQ,KAAKC,MAAMpQ,EAASE,KAAK+hB,aAC5C/hB,KAAKgiB,OAAOriB,EAAKK,KAAK8U,KAAKjV,MAAQ,EAAK,EACxCG,KAAKgiB,OAAOpiB,EAAKI,KAAK8U,KAAKhV,OAAS,EAAK,EAEzCE,KAAKwhB,OAAO3hB,MAAQG,KAAK8U,KAAKjV,MAC9BG,KAAKwhB,OAAO1hB,OAASE,KAAK8U,KAAKhV,OAC/BE,KAAKwhB,OAAOW,MAAM9hB,KAAO,IACzBL,KAAKwhB,OAAOW,MAAM7hB,IAAM,IACxBN,KAAKwhB,OAAOW,MAAMtiB,MAAQA,EAAQ,KAClCG,KAAKwhB,OAAOW,MAAMriB,OAASA,EAAS,KAO9BJ,WACN,QAAS4jB,UAAUC,UAAUC,MAAM,sDAGrC9jB,aACEM,KAAK4iB,SAAS1C,SACdlgB,KAAKsO,MAAM4R,SACXlgB,KAAKyjB,UAEDzjB,KAAK0jB,OACP1jB,KAAK0jB,MAAMxD,SAGblgB,KAAKyiB,UAAUkB,MAAM3jB,KAAK8U,KAAKjV,MAAOG,KAAK8U,KAAKhV,QAChD8jB,sBAAsB5jB,KAAKijB,WAAW5kB,KAAK2B,OAGrCN,UACN,MAAM6Z,EAAKvZ,KAAKuZ,GAChBA,EAAGxF,SAAS,EAAG,EAAG/T,KAAK8U,KAAKjV,MAAOG,KAAK8U,KAAKhV,QAC7CyZ,EAAGsK,WAAW,EAAG,EAAG,EAAG,GACvBtK,EAAGuK,MAAMvK,EAAGwK,iBAAmBxK,EAAGyK,kBAGlChkB,KAAKyiB,UAAUwB,mBAAqB,EACpCjkB,KAAKyiB,UAAUyB,mBAAqB,EACpClkB,KAAKyiB,UAAU0B,gBAAkB,EAenCzkB,UAAUC,EAAWC,EAAWwQ,EAAWC,EAAW+T,EAAW1S,EAAW6D,EAAe8O,EAAaC,GACtGtkB,KAAKyiB,UAAUnS,UAAU3Q,EAAGC,EAAGwQ,EAAGC,EAAG+T,EAAG1S,EAAG6D,EAAO8O,EAAIC,GAWxD5kB,WAAWmgB,EAAalgB,EAAWC,EAAW2V,EAAegP,GAC3DvkB,KAAKyiB,UAAUhN,WAAWoK,EAAKlgB,EAAGC,EAAG2V,EAAOgP,GAU9C7kB,mBAAmBmgB,EAAalgB,EAAWC,EAAW2V,GACpDvV,KAAKyiB,UAAUhS,mBAAmBoP,EAAKlgB,EAAGC,EAAG2V,GAU/C7V,gBAAgBmgB,EAAalgB,EAAWC,EAAW2V,GACjDvV,KAAKyiB,UAAUvR,gBAAgB2O,EAAKlgB,EAAGC,EAAG2V,GAG5C7V,UAAU8kB,GACR,MAAMpmB,EAAM4B,KAAK4iB,SAAS6B,OAAOD,GACjC,OAAOpmB,GAAOA,EAAIwU,KAGpBlT,aAAa8kB,GACX,MAAMpmB,EAAM4B,KAAK4iB,SAAS6B,OAAOD,GAC3BxS,EAAQ5T,EAAMA,EAAIgW,UAAY,EACpC,OAAiB,IAAVpC,GAAgBA,EAAQ,GAGjCtS,uBACE,OAAOM,KAAK0kB,kBAAkB1D,GAGhCthB,mBACE,OAAOM,KAAK0kB,kBAAkBtD,GAGhC1hB,wBACE,OAAOM,KAAK0kB,kBAAkBzD,GAGhCvhB,mBACE,OAAOM,KAAK0kB,kBAAkBvD,GAGhCzhB,mBACE,OAAOM,KAAK0kB,kBAAkBpD,GAGhC5hB,oBACE,OAAOM,KAAK0kB,kBAAkBrD,GAGhC3hB,qBACE,OAAOM,KAAK0kB,kBAAkB5D,GAGhCphB,iBACE,OAAOM,KAAK0kB,kBAAkBxD,GAGhCxhB,sBACE,OAAOM,KAAK0kB,kBAAkB3D,GAGxBrhB,kBAAkBilB,GACxB,IAAK,IAAI9nB,EAAI,EAAGA,EAAI8nB,EAAKxjB,OAAQtE,IAC/B,GAAImD,KAAKqO,aAAasW,EAAK9nB,IACzB,OAAO,EAGX,OAAO,mFChQX,MAAA+nB,EAAAjoB,EAAA,IAKMkoB,EAAY,IAElBxoB,EAAAwmB,SAAA,MAQEnjB,YAAYiP,GACV3O,KAAK2kB,KAAO,IAAI1O,MAAM4O,GACtB,IAAK,IAAIhoB,EAAI,EAAGA,EAAIgoB,EAAWhoB,IAC7BmD,KAAK2kB,KAAK9nB,GAAK,IAAI+nB,EAAAzQ,MAGrBxF,EAAGoU,iBAAiB,UAAW+B,GAAK9kB,KAAK+kB,OAAOD,GAAoB,IACpEnW,EAAGoU,iBAAiB,QAAS+B,GAAK9kB,KAAK+kB,OAAOD,GAAoB,IAG5DplB,OAAOolB,EAAkBpB,GAC/BoB,EAAEE,kBACFF,EAAEG,iBACF,MAAMT,EAAUM,EAAEN,QACdA,GAAW,GAAKA,EAAUK,IAC5B7kB,KAAK2kB,KAAKH,GAAS5R,KAAO8Q,GAI9BhkB,SACE,IAAK,IAAI7C,EAAI,EAAGA,EAAIgoB,EAAWhoB,IACzBmD,KAAK2kB,KAAK9nB,GAAG+V,KACf5S,KAAK2kB,KAAK9nB,GAAGuX,YAEbpU,KAAK2kB,KAAK9nB,GAAGuX,UAAY,EAK/B1U,OAAO8kB,GACL,OAAOA,GAAW,GAAKA,EAAUK,EAAY7kB,KAAK2kB,KAAKH,GAAW,sFC5CtE,MAAAI,EAAAjoB,EAAA,IACA8X,EAAA9X,EAAA,GACA4C,EAAA5C,EAAA,GAEMuoB,EAAoB,EACpBC,EAAmB,GAEzB9oB,EAAAymB,MAAA,cAA2B8B,EAAAzQ,MAazBzU,YAAY0O,GACVrO,QACAC,KAAKoO,IAAMA,EACXpO,KAAKolB,KAAO,IAAI7lB,EAAAE,KAAK,EAAG,GACxBO,KAAKyS,MAAQ,IAAIlT,EAAAE,KAAK,EAAG,GACzBO,KAAKL,EAAI,EACTK,KAAKJ,EAAI,EACTI,KAAK4X,GAAK,EACV5X,KAAK6X,GAAK,EACV7X,KAAKqlB,aAAe,EACpBrlB,KAAKslB,WAAY,EACjBtlB,KAAKulB,WAAa,EAClBvlB,KAAKwlB,eAAiB,EAEtB,MAAM7W,EAAKP,EAAIoT,OAETiE,EAAoBzlB,KAAK0lB,YAAYrnB,KAAK2B,MAChD2O,EAAGoU,iBAAiB,YAAa0C,GACjC9W,EAAGoU,iBAAiB,UAAW0C,GAC/B9W,EAAGoU,iBAAiB,YAAa0C,GACjC9W,EAAGoU,iBAAiB,cAAe0C,GAEnC,MAAME,EAAoB3lB,KAAK4lB,iBAAiBvnB,KAAK2B,MACrD2O,EAAGoU,iBAAiB,aAAc4C,GAClChX,EAAGoU,iBAAiB,WAAY4C,GAChChX,EAAGoU,iBAAiB,cAAe4C,GACnChX,EAAGoU,iBAAiB,YAAa4C,GAEjC,MAAME,EAAoB7lB,KAAK8lB,iBAAiBznB,KAAK2B,MACrD2O,EAAGoU,iBAAiB,aAAc8C,GAG5BnmB,iBAAiBolB,GAIvB,GAHAA,EAAEE,kBACFF,EAAEG,iBAEEH,EAAEiB,QAAQ5kB,OAAS,EAAG,CACxB,MAAM6kB,EAAQlB,EAAEiB,QAAQ,GACxB/lB,KAAKimB,eAAeD,EAAME,QAASF,EAAMG,SAG5B,eAAXrB,EAAEsB,OACJpmB,KAAK4S,MAAO,EACZ5S,KAAKolB,KAAKzlB,EAAIK,KAAKL,EACnBK,KAAKolB,KAAKxlB,EAAII,KAAKJ,EACnBI,KAAKyS,MAAM9S,EAAIK,KAAKL,EACpBK,KAAKyS,MAAM7S,EAAII,KAAKJ,EACpBI,KAAK4X,GAAK,EACV5X,KAAK6X,GAAK,EACV7X,KAAKqlB,aAAe,GAGP,aAAXP,EAAEsB,OACJpmB,KAAK4S,MAAO,EACZ5S,KAAKslB,UAAYtlB,KAAKoU,WAAa+Q,GAI/BzlB,YAAYolB,GAClBA,EAAEE,kBACFF,EAAEG,iBAEFjlB,KAAKimB,eAAenB,EAAEoB,QAASpB,EAAEqB,SAElB,cAAXrB,EAAEsB,OACJpmB,KAAK4S,MAAO,EACZ5S,KAAKyS,MAAM9S,EAAIK,KAAKL,EACpBK,KAAKyS,MAAM7S,EAAII,KAAKJ,EACpBI,KAAKqlB,aAAe,EACpBrlB,KAAKoO,IAAIoT,OAAOc,SAGH,YAAXwC,EAAEsB,OACJpmB,KAAK4S,MAAO,EACZ5S,KAAKslB,UAAYtlB,KAAKoU,WAAa+Q,GAI/BzlB,eAAewmB,EAAiBC,GACtC,IAAItlB,EAAoCb,KAAKoO,IAAIoT,OAAO6E,wBAMxD,MAAMC,EAAsBtmB,KAAKoO,IAAI0G,KAAKjV,MAAQG,KAAKoO,IAAI0G,KAAKhV,OAC1DymB,EAAkB1lB,EAAKhB,MAAQgB,EAAKf,OAE1C,GAAIymB,EAAkBD,EAAsB,IAAM,CAChD,MAAME,EAAcF,EAAsBzlB,EAAKf,OACzC2mB,EAAS5lB,EAAKhB,MAAQ2mB,EAC5B3lB,EAAO,IAAI4T,EAAAjV,KAAKyQ,KAAKgJ,MAAMwN,EAAS,GAAI,EAAGD,EAAa3lB,EAAKf,QAG/D,GAAIymB,EAAkBD,GAAuB,IAAM,CACjD,MAAMI,EAAe7lB,EAAKhB,MAAQymB,EAC5BG,EAAS5lB,EAAKf,OAAS4mB,EAC7B7lB,EAAO,IAAI4T,EAAAjV,KAAK,EAAGyQ,KAAKgJ,MAAMwN,EAAS,GAAI5lB,EAAKhB,MAAO6mB,GAGzD1mB,KAAKL,EAAKK,KAAKoO,IAAI0G,KAAKjV,OAASqmB,EAAUrlB,EAAKR,MAAQQ,EAAKhB,MAAS,EACtEG,KAAKJ,EAAKI,KAAKoO,IAAI0G,KAAKhV,QAAUqmB,EAAUtlB,EAAKP,KAAOO,EAAKf,OAAU,EAGjEJ,iBAAiBolB,GACvBA,EAAEE,kBACFF,EAAEG,iBAEF,MAAM0B,EAAM7B,EAEZ,OADA9kB,KAAKwlB,eAAiBvV,KAAK6H,KAAK,EAAG7H,KAAK8H,IAAI,EAAG4O,EAAIxO,UAC5C,EAGTzY,SACEK,MAAMmgB,SACNlgB,KAAK4X,GAAK5X,KAAKL,EAAIK,KAAKolB,KAAKzlB,EAC7BK,KAAK6X,GAAK7X,KAAKJ,EAAII,KAAKolB,KAAKxlB,EAC7BI,KAAKolB,KAAKzlB,EAAIK,KAAKL,EACnBK,KAAKolB,KAAKxlB,EAAII,KAAKJ,EACnBI,KAAKulB,WAAavlB,KAAKwlB,eACvBxlB,KAAKwlB,eAAiB,EAElBxlB,KAAK4S,OACP5S,KAAKqlB,cAAgBpV,KAAK2O,IAAI5e,KAAK4X,IAAM3H,KAAK2O,IAAI5e,KAAK6X,KAI3DnY,YACE,OAAwB,IAAjBM,KAAKqU,SAAiBrU,KAAKqlB,aAAeH,IAAsBllB,KAAKslB,UAG9E5lB,aACE,OAAOM,KAAK4S,MAAQ5S,KAAKqlB,aAAeH,EAG1CxlB,cACE,OAAOM,KAAKoU,YAAc+Q,IAAqBnlB,KAAK2B,8FC3JxD,MAAAwX,EAAAxc,EAAA,IAWMiqB,EAAc,MAEdC,EAAqB,gXAyBrBC,EAAuB,2OAiB7BzqB,EAAAqmB,UAAA,MAoBEhjB,YAAY6Z,EAA2BwN,EAAanF,GAClD5hB,KAAKuZ,GAAKA,EACVvZ,KAAK4hB,KAAOA,EAEZ,MAAMoF,EAAU7N,EAAAa,kBAAkBT,EAAIsN,EAAoBC,GAE1D9mB,KAAKgnB,QAAUA,EACfhnB,KAAKinB,qBAAuB1N,EAAGc,mBAAmB2M,EAAS,kBAC3DhnB,KAAKknB,iBAAmB3N,EAAGW,kBAAkB8M,EAAS,cACtDhnB,KAAKmnB,iBAAmB5N,EAAGW,kBAAkB8M,EAAS,cACtDhnB,KAAKonB,cAAgB7N,EAAGW,kBAAkB8M,EAAS,WACnDhnB,KAAKqnB,eAAiB9N,EAAGE,eACzBzZ,KAAKsnB,eAAiB/N,EAAGE,eACzBzZ,KAAKunB,YAAchO,EAAGE,eACtBzZ,KAAKwnB,cAAgBrO,EAAA2B,cAAcvB,EAAIwN,GACvC/mB,KAAKynB,cAAgB,IAAI5N,aAAa+M,GACtC5mB,KAAKikB,mBAAqB,EAC1BjkB,KAAK0nB,cAAgB,IAAI7N,aAAa+M,GACtC5mB,KAAKkkB,mBAAqB,EAC1BlkB,KAAK2nB,gBAAkB,IAAIhR,WAAWiQ,GACtC5mB,KAAK4nB,cAAgB,IAAIC,SAAS7nB,KAAK2nB,gBAAgBG,QACvD9nB,KAAKmkB,gBAAkB,EAUzBzkB,mBAAmBmgB,EAAalgB,EAAWC,EAAW2V,GACpD,MAAMpV,EAAKR,EAAKK,KAAK4hB,KAAKmG,eAAelI,GAAO,EAAK,EACrD7f,KAAKyV,WAAWoK,EAAK1f,EAAIP,EAAG2V,GAU9B7V,gBAAgBmgB,EAAalgB,EAAWC,EAAW2V,GACjD,MAAMpV,EAAKR,EAAIK,KAAK4hB,KAAKmG,eAAelI,GACxC7f,KAAKyV,WAAWoK,EAAK1f,EAAIP,EAAG2V,GAW9B7V,WAAWmgB,EAAamI,EAAYC,EAAY1S,EAAegP,GAC7D,MAAM2D,EAAQrI,EAAIsI,MAAM,MAClBroB,EAASE,KAAK4hB,KAAKwG,YACzB,IAAIzoB,EAAIqoB,EACJpoB,EAAIqoB,EACR,IAAK,IAAIprB,EAAI,EAAGA,EAAIqrB,EAAM/mB,OAAQtE,IAAK,CACjCA,EAAI,IACN8C,EAAIqoB,EACJpoB,GAAKE,GAEP,IAAK,IAAI+W,EAAI,EAAGA,EAAIqR,EAAMrrB,GAAGsE,OAAQ0V,IAAK,CACxC,MAAMwR,EAAWH,EAAMrrB,GAAGyrB,WAAWzR,GACrC,GAAI7W,KAAK4hB,KAAK2G,UAAUF,GAAW,CACjC,MAAM/U,EAAStT,KAAK4hB,KAAK4G,UAAUH,GAC7BxoB,EAAQG,KAAK4hB,KAAK6G,SAASJ,GACjCroB,KAAKsQ,UAAU3Q,EAAGC,EAAG0T,EAAQ,EAAGzT,EAAOC,EAAQyV,GAC/C5V,GAAKE,IAIP0kB,IACFA,EAAI5kB,EAAIA,EACR4kB,EAAI3kB,EAAIA,GAWZF,SAASxC,EAAWyC,EAAWC,EAAW2V,GACxC,GAAIvV,KAAK4hB,KAAK2G,UAAUrrB,GAAI,CAC1B,MAAMoW,EAAStT,KAAK4hB,KAAK4G,UAAUtrB,GAC7B2C,EAAQG,KAAK4hB,KAAK6G,SAASvrB,GAC3B4C,EAASE,KAAK4hB,KAAKwG,YACzBpoB,KAAKsQ,UAAU3Q,EAAGC,EAAG0T,EAAQ,EAAGzT,EAAOC,EAAQyV,IAgBnD7V,UACIC,EAAWC,EAAWwQ,EAAWC,EAAW+T,EAAW1S,EAAWgX,EAAkBC,EACpFC,GACF,MAAMpB,EAAgBxnB,KAAKwnB,cAC3B,IAAKA,EAAcqB,OACjB,OAGF,MAAMxE,OAAe7S,IAAVmX,EAAsBA,EAAQvE,EACnCE,OAAe9S,IAAVoX,EAAsBA,EAAQlX,EACnCvR,EAAKR,EAAIsQ,KAAK2O,IAAIyF,GAClBjkB,EAAKR,EAAI0kB,EACTnN,EAAK/G,EAAIoX,EAAc3nB,MACvBuX,EAAK/G,EAAImX,EAAc1nB,OACvBgpB,GAAO1Y,EAAIgU,GAAKoD,EAAc3nB,MAC9BkpB,GAAO1Y,EAAIqB,GAAK8V,EAAc1nB,OAC9ByV,EAAQmT,GAAY,EAG1B1oB,KAAKynB,cAAcznB,KAAKikB,sBAAwBtkB,EAChDK,KAAKynB,cAAcznB,KAAKikB,sBAAwBrkB,EAChDI,KAAKynB,cAAcznB,KAAKikB,sBAAwB9jB,EAChDH,KAAKynB,cAAcznB,KAAKikB,sBAAwBrkB,EAChDI,KAAKynB,cAAcznB,KAAKikB,sBAAwBtkB,EAChDK,KAAKynB,cAAcznB,KAAKikB,sBAAwB7jB,EAEhDJ,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB/M,EAChDnX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB9M,EAChDpX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB4E,EAChD9oB,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB9M,EAChDpX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB/M,EAChDnX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB6E,EAGhD/oB,KAAKynB,cAAcznB,KAAKikB,sBAAwBtkB,EAChDK,KAAKynB,cAAcznB,KAAKikB,sBAAwB7jB,EAChDJ,KAAKynB,cAAcznB,KAAKikB,sBAAwB9jB,EAChDH,KAAKynB,cAAcznB,KAAKikB,sBAAwBrkB,EAChDI,KAAKynB,cAAcznB,KAAKikB,sBAAwB9jB,EAChDH,KAAKynB,cAAcznB,KAAKikB,sBAAwB7jB,EAEhDJ,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB/M,EAChDnX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB6E,EAChD/oB,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB4E,EAChD9oB,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB9M,EAChDpX,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB4E,EAChD9oB,KAAK0nB,cAAc1nB,KAAKkkB,sBAAwB6E,EAEhD,IAAK,IAAIlsB,EAAI,EAAGA,EAAI,EAAGA,IACrBmD,KAAK4nB,cAAcoB,UAAUhpB,KAAKmkB,gBAAiB5O,GAAO,GAC1DvV,KAAKmkB,iBAAmB,EAS5BzkB,MAAMG,EAAeC,GACnB,IAAKE,KAAKwnB,cAAcqB,QAAsC,IAA5B7oB,KAAKikB,mBACrC,OAGF,MAAM1K,EAAKvZ,KAAKuZ,GAGhBA,EAAG0C,WAAWjc,KAAKgnB,SAGnBzN,EAAG8C,UAAUrc,KAAKinB,qBAAsBpnB,EAAOC,GAG/CyZ,EAAGgD,cAAchD,EAAGiD,UACpBjD,EAAGwB,YAAYxB,EAAGyB,WAAYhb,KAAKwnB,eAEnC,CAEEjO,EAAG2C,wBAAwBlc,KAAKknB,kBAChC3N,EAAGG,WAAWH,EAAGI,aAAc3Z,KAAKqnB,gBACpC9N,EAAGK,WAAWL,EAAGI,aAAc3Z,KAAKynB,cAAelO,EAAG0P,cAItD,MAAMnU,EAAO,EACPsR,EAAO7M,EAAG6C,MACV8M,GAAY,EACZC,EAAS,EAET7V,EAAS,EACfiG,EAAG4C,oBAAoBnc,KAAKknB,iBAAkBpS,EAAMsR,EAAM8C,EAAWC,EAAQ7V,GAG/E,CAEEiG,EAAG2C,wBAAwBlc,KAAKmnB,kBAChC5N,EAAGG,WAAWH,EAAGI,aAAc3Z,KAAKsnB,gBACpC/N,EAAGK,WAAWL,EAAGI,aAAc3Z,KAAK0nB,cAAenO,EAAG0P,cAItD,MAAMnU,EAAO,EACPsR,EAAO7M,EAAG6C,MACV8M,GAAY,EACZC,EAAS,EAET7V,EAAS,EACfiG,EAAG4C,oBAAoBnc,KAAKmnB,iBAAkBrS,EAAMsR,EAAM8C,EAAWC,EAAQ7V,GAG/E,CAEEiG,EAAG2C,wBAAwBlc,KAAKonB,eAChC7N,EAAGG,WAAWH,EAAGI,aAAc3Z,KAAKunB,aACpChO,EAAGK,WAAWL,EAAGI,aAAc3Z,KAAK2nB,gBAAiBpO,EAAG0P,cAIxD,MAAMnU,EAAO,EACPsR,EAAO7M,EAAG4B,cACV+N,GAAY,EACZC,EAAS,EAET7V,EAAS,EACfiG,EAAG4C,oBAAoBnc,KAAKonB,cAAetS,EAAMsR,EAAM8C,EAAWC,EAAQ7V,GAI5E,MAAM8V,EAAgB7P,EAAG6D,UAEnBpL,EAAQhS,KAAKikB,mBAAqB,EACxC1K,EAAG4D,WAAWiM,EAFC,EAEsBpX,oFChSzC,SAAgBqX,EAAW9P,EAA2B6M,EAAckD,GAClE,MAAMC,EAAShQ,EAAGiQ,aAAapD,GAG/B,OAFA7M,EAAGkQ,aAAaF,EAAQD,GACxB/P,EAAGmQ,cAAcH,GACVA,EAlCTltB,EAAAstB,gBAAA,cAAqCC,aAKnClqB,cACEK,QACAC,KAAK6oB,QAAS,EACd7oB,KAAKH,MAAQ,EACbG,KAAKF,OAAS,IAOlBzD,EAAA2d,kBAAA,SAAkCT,EAA2BsQ,EAAkBC,GAC7E,MAAMC,EAAeV,EAAW9P,EAAIA,EAAGyQ,cAAeH,GAChDI,EAAiBZ,EAAW9P,EAAIA,EAAG2Q,gBAAiBJ,GACpDK,EAAgB5Q,EAAG6Q,gBAIzB,OAHA7Q,EAAG8Q,aAAaF,EAAeJ,GAC/BxQ,EAAG8Q,aAAaF,EAAeF,GAC/B1Q,EAAG+Q,YAAYH,GACRA,GAOT9tB,EAAAgtB,aAWAhtB,EAAAye,cAAA,SAA8BvB,EAA2BwN,GACvD,MAAMlM,EAAUtB,EAAGuB,gBACnBvB,EAAGwB,YAAYxB,EAAGyB,WAAYH,GAO9B,MACM0P,EAAiBhR,EAAG2B,KAIpBsP,EAAYjR,EAAG2B,KACfuP,EAAUlR,EAAG4B,cACbuP,EAAQ,IAAI/T,WAAW,CAAC,EAAG,EAAG,EAAG,MACvC4C,EAAG0B,WAAW1B,EAAGyB,WARH,EAQsBuP,EANtB,EACC,EACA,EAI4DC,EAAWC,EAASC,GAE/F,MAAMC,EAAQ,IAAIC,MAelB,OAdAD,EAAME,OAAS,MACbtR,EAAGwB,YAAYxB,EAAGyB,WAAYH,GAC9BtB,EAAG0B,WAAW1B,EAAGyB,WAbL,EAawBuP,EAAgBC,EAAWC,EAASE,GACxEpR,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGiC,eAAgBjC,EAAGkC,eACtDlC,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGmC,eAAgBnC,EAAGkC,eACtDlC,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAG8B,mBAAoB9B,EAAG+B,SAC1D/B,EAAG6B,cAAc7B,EAAGyB,WAAYzB,EAAGgC,mBAAoBhC,EAAG+B,SAC1D/B,EAAGuR,eAAevR,EAAGyB,YACrBH,EAAQgO,QAAS,EACjBhO,EAAQhb,MAAQ8qB,EAAM9qB,MACtBgb,EAAQ/a,OAAS6qB,EAAM7qB,SAEzB6qB,EAAMrY,IAAMyU,EAELlM,kFC3ET,MAAAkQ,EAAApuB,EAAA,IAEAN,EAAA2uB,SAAA,MAIEtrB,YAAY0O,GACVpO,KAAKoO,IAAMA,EACXpO,KAAKc,IAAM,IAAIiqB,EAAApW,IAAIvG,GAGrB1O,SACEM,KAAKc,IAAIoB,cACTlC,KAAKc,IAAIqN,ybCNb,IAAayG,EAAb,MAKElV,YAAYurB,EAAgBC,GAC1BlrB,KAAKirB,SAAWA,EAChBjrB,KAAKkrB,gBAAkBA,EAGzBxrB,KAAK0O,EAAU+c,GAWb,MAAMC,EAAMprB,KAAKirB,SAAStrB,EACpB0rB,EAAMrrB,KAAKirB,SAASrrB,EACpB0rB,EAAMtrB,KAAKirB,SAASprB,MAAQ,EAAK,EACjC0rB,EAAMvrB,KAAKirB,SAASnrB,OAAS,EAAK,EAClC0rB,EAAMJ,EAAME,EACZG,EAAMJ,EAAME,EACZG,EAAMN,EAAM,EAAIE,EAChBK,EAAMN,EAAM,EAAIC,EAGhBM,EAAMT,EAAOtqB,KAAKlB,EAClBksB,EAAMV,EAAOtqB,KAAKjB,EAClBykB,EAAK8G,EAAOtqB,KAAKhB,MAAQ,EAAIyrB,EAC7BhH,EAAK6G,EAAOtqB,KAAKf,OAAS,EAAIyrB,EAC9BO,EAAMF,EAAMN,EACZS,EAAMF,EAAMN,EACZS,EAAMF,EAAMzH,EACZ4H,EAAMF,EAAMzH,EA6BlB,GA1BAlW,EAAIkC,UAAUsb,EAAKC,EAAKT,EAAKC,EAAKC,EAAIC,OAAI/Z,EAAW8Z,EAAIC,GAGzDnd,EAAIkC,UAAUwb,EAAKD,EAAKL,EAAKH,EAAKC,EAAIC,OAAI/Z,EAAW6S,EAAIkH,GAGzDnd,EAAIkC,UAAU0b,EAAKH,EAAKH,EAAKL,EAAKC,EAAIC,OAAI/Z,EAAW8Z,EAAIC,GAGzDnd,EAAIkC,UAAUsb,EAAKG,EAAKX,EAAKK,EAAKH,EAAIC,OAAI/Z,EAAW8Z,EAAIhH,GAGzDlW,EAAIkC,UAAUwb,EAAKC,EAAKP,EAAKC,EAAKH,EAAIC,OAAI/Z,EAAW6S,EAAIC,GAGzDlW,EAAIkC,UAAU0b,EAAKD,EAAKL,EAAKD,EAAKH,EAAIC,OAAI/Z,EAAW8Z,EAAIhH,GAGzDlW,EAAIkC,UAAUsb,EAAKK,EAAKb,EAAKO,EAAKL,EAAIC,OAAI/Z,EAAW8Z,EAAIC,GAGzDnd,EAAIkC,UAAUwb,EAAKG,EAAKT,EAAKG,EAAKL,EAAIC,OAAI/Z,EAAW6S,EAAIkH,GAGzDnd,EAAIkC,UAAU0b,EAAKC,EAAKP,EAAKC,EAAKL,EAAIC,OAAI/Z,EAAW8Z,EAAIC,GAErDvrB,KAAKkrB,iBAAmBC,EAAOld,YAAa,CAC9C,MAAMmW,EAAIpkB,KAAKkrB,gBAAgBrrB,MACzB6R,EAAI1R,KAAKkrB,gBAAgBprB,OACzB8X,EAAKuT,EAAOtqB,KAAKV,GAAKikB,EACtBvM,EAAKsT,EAAOtqB,KAAKjB,EACjBssB,EAAKlsB,KAAKkrB,gBAAgBvrB,EAC1BwsB,EAAKnsB,KAAKkrB,gBAAgBtrB,EAChCwO,EAAIkC,UAAUsH,EAAIC,EAAIqU,EAAIC,EAAI/H,EAAG1S,MA1E1BkD,EAAclU,EAAA,CAH3B/D,EAAA,GAECmC,aAAa,mBACD8V,GAAAvY,EAAAuY,icCRb,MAAAyI,EAAA1gB,EAAA,IACAyvB,EAAAzvB,EAAA,IAGA0vB,EAAA1vB,EAAA,IAEAuS,EAAAvS,EAAA,GAKA2vB,EAAA3vB,EAAA,IACAmR,EAAAnR,EAAA,GACA4vB,EAAA5vB,EAAA,IACA8X,EAAA9X,EAAA,GACA6vB,EAAA7vB,EAAA,IACA8vB,EAAA9vB,EAAA,IACA4C,EAAA5C,EAAA,GACAgE,EAAAhE,EAAA,GACA+vB,EAAA/vB,EAAA,GAEAgwB,EAAAhwB,EAAA,IACAiwB,EAAAjwB,EAAA,IAGMkwB,EAAmB,IAAIpY,EAAAjV,KAAK,EAAG,EAAG,IAAK,KAO7C,IAAastB,EAAb,cAA0BT,EAAArB,SA4BxBtrB,YAAY0O,EAAUrP,GACpBgB,MAAMqO,GACNpO,KAAK+T,SAAW,IAAIU,EAAAjV,KAAK,EAAG,EAAG4O,EAAI0G,KAAKjV,MAAOuO,EAAI0G,KAAKhV,QACxDE,KAAK+sB,cAAgB,IAAIxtB,EAAAE,KAAK,EAAG,GACjCO,KAAKwe,WAAa,GAClBxe,KAAKqf,SAAW,IAAI1e,EAAAK,UACpBhB,KAAKgtB,UAAY,EACjBhtB,KAAKgX,SAAU,EACfhX,KAAKitB,OAAS,IAAI1tB,EAAAE,MAAM,GAAI,GAC5BO,KAAKoC,QAAU,IAAIkqB,EAAAY,cACnBltB,KAAKmtB,IAAM,IAAIX,EAAAY,IACfptB,KAAKqtB,UAAY,EACjBrtB,KAAKstB,uBAAyBvuB,EAAQwuB,cA3CZ,GA4C1BvtB,KAAKwtB,qBAAuBzuB,EAAQwuB,cA5CV,GA6C1BvtB,KAAKytB,KAAO,EAER1uB,EAAQuuB,yBACVttB,KAAKstB,uBAAyBvuB,EAAQuuB,wBAEpCvuB,EAAQyuB,uBACVxtB,KAAKwtB,qBAAuBzuB,EAAQyuB,sBAGtC,MAAME,EAAU3uB,EAAQ2uB,SAAWb,EAC7Bc,EAAY5uB,EAAQ4uB,WA1DH,EA2DjBja,EAAW3U,EAAQ2U,UAAY,IAAIe,EAAAjV,KAAK,EAAG,EA1D1B,GACC,IA0DxBQ,KAAKyT,QAAU,IAAIkZ,EAAA7W,QAAQ4X,EAAQ7tB,MAAO6tB,EAAQ5tB,OAAQ6tB,EAAWja,GACrE1T,KAAK4tB,gBAAkB,IAAIhB,EAAAtT,gBAAgBlL,EAAImL,GAAIvZ,KAAKyT,SAG1D/T,IAAImuB,EAAyBtY,GACvBvV,KAAK8tB,YACP9tB,KAAK8tB,WAAWvsB,IAAIssB,EAAStY,GAIjC7V,aAAaquB,GAEX,OADA/tB,KAAKwe,WAAW5P,KAAKmf,GACdA,EAAU5hB,QAGnBzM,SACE+sB,EAAAuB,OAAOC,yBACPjuB,KAAKoR,gBACLpR,KAAKkuB,aAEAluB,KAAKc,IAAIoB,gBACZlC,KAAKmuB,mBACLnuB,KAAKouB,iBAEDpuB,KAAKquB,UACPruB,KAAKquB,WAGPruB,KAAKsuB,kBAGPtuB,KAAKuuB,cAEa,IAAdvuB,KAAKytB,OACPztB,KAAKwuB,gBACLxuB,KAAKyuB,eACLzuB,KAAK0uB,kBAGP1uB,KAAKc,IAAIqN,OAGHzO,gBACN,GAAIM,KAAKc,IAAIqB,YAGX,YADAnC,KAAKoC,QAAQlB,SAAU,GAIpBlB,KAAKoC,QAAQlB,UAChBlB,KAAK2uB,oBAAiBnd,GAGxB,MAAMlD,EAAQtO,KAAKoO,IAAIE,MACjBgX,EAAYhX,EAAMsgB,cAExB,IAAMtgB,EAAMsE,OAAsB,IAAbtE,EAAMsJ,IAAyB,IAAbtJ,EAAMuJ,KAAcyN,EAAW,CACpE,MAAMuJ,EAAa7uB,KAAKc,IAAIe,WAAWyM,GACnCtO,KAAK2uB,iBAAmBE,IAE1B7uB,KAAK2uB,eAAiBE,EAClBA,IACFA,EAAWzd,cAAcpR,KAAKoC,SAC1BkjB,GACF7oB,OAAO6mB,UAAUwL,QAAQ,OAK3B9uB,KAAKoC,QAAQlB,UACVlB,KAAKoC,QAAQtB,KAGhBd,KAAKc,IAAIS,IAAIvB,KAAKoC,SAKpBpC,KAAKoC,QAAQ2sB,OAAOzgB,EAAM3O,EAAG2O,EAAM1O,GAGnCI,KAAKoC,QAAQnB,MAAQjB,KAAKoO,IAAImU,SAK5B7iB,aACN,GAAkC,IAA9BM,KAAKoO,IAAIE,MAAMiX,WAAkB,CACnC,MAAMvD,EAAShiB,KAAK+T,SAASib,YAC7BhvB,KAAK+sB,cAAcptB,EAAIqiB,EAAOriB,EAC9BK,KAAK+sB,cAAcntB,EAAIoiB,EAAOpiB,EAE1BI,KAAKoO,IAAIE,MAAMiX,WAAa,EAC9BvlB,KAAKytB,MAAQ,GAEbztB,KAAKytB,MAAQ,EAGfztB,KAAK+T,SAASlU,MAASG,KAAKytB,KAAOztB,KAAKoO,IAAI0G,KAAKjV,MAAS,EAC1DG,KAAK+T,SAASjU,OAAUE,KAAKytB,KAAOztB,KAAKoO,IAAI0G,KAAKhV,OAAU,EAC5DE,KAAK+T,SAASpU,EAAIqiB,EAAOriB,GAAMK,KAAKoO,IAAI0G,KAAKjV,MAAQG,KAAKytB,KAAO,EAAK,GACtEztB,KAAK+T,SAASnU,EAAIoiB,EAAOpiB,GAAMI,KAAKoO,IAAI0G,KAAKhV,OAASE,KAAKytB,KAAO,EAAK,IAInE/tB,mBAENM,KAAKgX,SAAU,EAGf,IAAK,IAAIna,EAAI,EAAGA,EAAImD,KAAKwe,WAAWrd,OAAQtE,IAAK,CAC/C,MAAMkxB,EAAY/tB,KAAKwe,WAAW3hB,GAClCkxB,EAAU7N,SACN6N,EAAU7hB,WACZlM,KAAKgX,SAAU,GAKnB,IAAK,IAAIna,EAAImD,KAAKwe,WAAWrd,OAAS,EAAGtE,GAAK,EAAGA,IAC3CmD,KAAKwe,WAAW3hB,GAAGoyB,WACrBjvB,KAAKwe,WAAW3hB,GAAGsP,QAAQ+iB,UAC3BlvB,KAAKwe,WAAW/P,OAAO5R,EAAG,IAKxB6C,iBACN,GAAIM,KAAKgR,QAAUhR,KAAKgR,OAAO2M,IAAM,EAEnC,OAMF,IAAIwR,EAAY,EAChB,KAC+B,IAAzBnvB,KAAKqf,SAASle,SAKdnB,KAAKgtB,WAAahtB,KAAKqf,SAASle,SAGlCnB,KAAKgtB,UAAY,KAGfmC,EAAmC,EAAvBnvB,KAAKqf,SAASle,UAZnB,CAkBX,MAAMiuB,EAAapvB,KAAKqf,SAAS3hB,IAAIsC,KAAKgtB,WAC1C,GAAIoC,aAAsBhD,EAAA1O,MAAO,CAC/B,GAAI0R,EAAWvR,GAAK,EAAG,CACrB,GAAIuR,IAAepvB,KAAKgR,OAAQ,CACzBhR,KAAKgX,SACRhX,KAAKqvB,oBAEP,MAEArvB,KAAKsvB,KAAKF,GAGVA,EAAWvR,IAAM,IAEnBuR,EAAWvR,GAAK,EAChB7d,KAAKuvB,iBAGPvvB,KAAKuvB,WAGPJ,KAIJzvB,gBACOM,KAAKgR,SAGVhR,KAAK+sB,cAAcptB,EAAIK,KAAKgR,OAAO4C,aACnC5T,KAAK+sB,cAAcntB,EAAII,KAAKgR,OAAO6C,aACnC7T,KAAK+T,SAASpU,EAAIK,KAAK+sB,cAAcptB,GAAMK,KAAKoO,IAAI0G,KAAKjV,MAAQG,KAAKytB,KAAO,EAAK,GAClFztB,KAAK+T,SAASnU,EAAII,KAAK+sB,cAAcntB,GAAMI,KAAKoO,IAAI0G,KAAKhV,OAASE,KAAKytB,KAAO,EAAK,IAG7E/tB,iBACNM,KAAK+T,SAASlU,MAAQG,KAAKoO,IAAI0G,KAAKjV,MAAQG,KAAKytB,KACjDztB,KAAK+T,SAASjU,OAASE,KAAKoO,IAAI0G,KAAKhV,OAASE,KAAKytB,KAEnD,MAAMnf,EAAQtO,KAAKoO,IAAIE,MACvB,GAAIA,EAAM3M,aACR3B,KAAK+T,SAASpU,GAAK2O,EAAMsJ,GAAK5X,KAAKytB,KACnCztB,KAAK+T,SAASnU,GAAK0O,EAAMuJ,GAAK7X,KAAKytB,KACnCztB,KAAK+sB,cAAcptB,EAAIK,KAAK+T,SAASpU,GAAMK,KAAK+T,SAASlU,MAAQ,EAAK,GACtEG,KAAK+sB,cAAcntB,EAAII,KAAK+T,SAASnU,GAAMI,KAAK+T,SAASjU,OAAS,EAAK,OAClE,CAEL,MAAM0vB,EAAY,IACZC,EAAazvB,KAAK+sB,cAAcptB,GAAMK,KAAKoO,IAAI0G,KAAKjV,MAAQG,KAAKytB,KAAO,EAAK,GACnF,GAAIgC,IAAezvB,KAAK+T,SAASpU,EAAG,CAClC,IAAIiY,EAAK4X,EAAYC,EAAaD,EAAYxvB,KAAK+T,SAASpU,EAE1DiY,EADEA,EAAK,EACF3H,KAAKgJ,MAAMrB,GAEX3H,KAAKyf,KAAK9X,GAEjB5X,KAAK+T,SAASpU,GAAKiY,EAGrB,MAAM+X,EAAY3vB,KAAK+sB,cAAcntB,GAAMI,KAAKoO,IAAI0G,KAAKhV,OAASE,KAAKytB,KAAO,EAAK,GACnF,GAAIkC,IAAc3vB,KAAK+T,SAASnU,EAAG,CACjC,IAAIiY,EAAK2X,EAAYG,EAAYH,EAAYxvB,KAAK+T,SAASnU,EAEzDiY,EADEA,EAAK,EACF5H,KAAKgJ,MAAMpB,GAEX5H,KAAKyf,KAAK7X,GAEjB7X,KAAK+T,SAASnU,GAAKiY,IAKjBnY,cACN,GAAIM,KAAKoO,IAAIqU,UAAU+E,cAAcqB,OAAQ,CAC3C,MAAMlpB,GAAMK,KAAK+T,SAASpU,EAAIK,KAAKytB,KAAQ,GAAKztB,KAAKytB,KAC/C7tB,GAAMI,KAAK+T,SAASnU,EAAII,KAAKytB,KAAQ,GAAKztB,KAAKytB,KAC/C9R,GAAc8Q,EAAAuB,OAAO4B,gBAAkB,GAAM,GAAK,EACxD5vB,KAAK4tB,gBAAgBzf,KAAKxO,EAAGC,EAAGI,KAAK+T,SAASlU,MAAOG,KAAK+T,SAASjU,OAAQ6b,IAIvEjc,gBACN,GAAIM,KAAK6vB,eAAiB7vB,KAAK8vB,aAAc,CAC3C,MAAMnwB,EAAIK,KAAKitB,OAAOttB,EAAIK,KAAKyT,QAAQC,SAAS7T,MAAQG,KAAK+T,SAASpU,EAChEC,EAAII,KAAKitB,OAAOrtB,EAAII,KAAKyT,QAAQC,SAAS5T,OAASE,KAAK+T,SAASnU,EACvEI,KAAK8vB,aAAa3hB,KAAKnO,KAAKoO,IAAKzO,EAAGC,IAIhCF,eACN,IAAK,IAAIqwB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIlzB,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAMojB,EAASjgB,KAAKqf,SAAS3hB,IAAIb,GAC7BojB,EAAO1M,SAAWwc,GAAK/vB,KAAKyT,QAAQuJ,UAAUiD,EAAOtgB,EAAGsgB,EAAOrgB,IACjEqgB,EAAO9R,QAMPzO,iBACN,IAAIswB,EAAgB,EACpB,IAAK,IAAInzB,EAAI,EAAGA,EAAImD,KAAKwe,WAAWrd,OAAQtE,IAAK,CAC/C,MAAMkxB,EAAY/tB,KAAKwe,WAAW3hB,GACZ,IAAlBmzB,GAAwBjC,EAAU7hB,UACpC6hB,EAAU5f,KAAKnO,MAEb+tB,EAAU7hB,UACZ8jB,KAKNtwB,cACE,QAASM,KAAKiwB,cAGhBvwB,eAAe8P,EAAkBgQ,GAC/Bxf,KAAKiwB,cAAgBzgB,EACrBxP,KAAKkwB,eAAiB1Q,EAClBxf,KAAKgR,SACPhR,KAAKitB,OAAOttB,EAAIK,KAAKgR,OAAOrR,EAC5BK,KAAKitB,OAAOrtB,EAAII,KAAKgR,OAAOpR,GAIxBF,eACN,GAAIM,KAAKgR,QAAUhR,KAAKiwB,cAAe,CACrC,MAAMxQ,EAAazf,KAAKiwB,cAAcxQ,WACtC,IAAIxK,EAAS,KACTwK,IAAepC,EAAAlK,WAAWgd,OAC5Blb,EAASjV,KAAKowB,WAAWpwB,KAAKitB,OAAOttB,EAAGK,KAAKitB,OAAOrtB,GAC3C6f,IAAepC,EAAAlK,WAAWkd,OACnCpb,EAASjV,KAAKyT,QAAQ6D,QAAQtX,KAAKitB,OAAOttB,EAAGK,KAAKitB,OAAOrtB,IAEvDqV,GACEjV,KAAKiwB,cAActQ,KAAK3f,KAAKgR,OAAQiE,IACnCjV,KAAKkwB,gBACPlwB,KAAKkwB,iBAKblwB,KAAKswB,kBAGP5wB,kBACEM,KAAKiwB,mBAAgBze,EACrBxR,KAAKkwB,oBAAiB1e,EAGhB9R,oBACN,IAAKM,KAAKgR,QAAUhR,KAAKgX,QACvB,OAGF,GAAIhX,KAAKgR,OAAOuf,GAGd,OAFAvwB,KAAKgR,OAAOuf,GAAGjB,YACftvB,KAAKgR,OAAO6M,GAAK,GAInB,MAAMvP,EAAQtO,KAAKoO,IAAIE,MAMvB,IALIA,EAAMsE,MAAqB,IAAbtE,EAAMsJ,IAAyB,IAAbtJ,EAAMuJ,MACxC7X,KAAKitB,OAAOttB,GAAMK,KAAK+T,SAASpU,EAAI2O,EAAM3O,GAAKK,KAAKyT,QAAQC,SAAS7T,MAAS,EAC9EG,KAAKitB,OAAOrtB,GAAMI,KAAK+T,SAASnU,EAAI0O,EAAM1O,GAAKI,KAAKyT,QAAQC,SAAS5T,OAAU,GAG7EE,KAAKoO,IAAIoiB,UAAU1iB,EAAAzL,KAAKO,UAAW,CACrC,IAAIgV,EAAK,EACLC,EAAK,EA+BT,OA9BI7X,KAAKoO,IAAIqiB,yBACX7Y,GAAM,EACNC,EAAK,GAEH7X,KAAKoO,IAAIsiB,qBACX7Y,EAAK,GAEH7X,KAAKoO,IAAIuiB,0BACX/Y,EAAK,EACLC,EAAK,GAEH7X,KAAKoO,IAAIwiB,qBACXhZ,GAAM,GAEJ5X,KAAKoO,IAAIyiB,sBACXjZ,EAAK,GAEH5X,KAAKoO,IAAI0iB,uBACXlZ,GAAM,EACNC,GAAM,GAEJ7X,KAAKoO,IAAI2iB,mBACXlZ,GAAM,GAEJ7X,KAAKoO,IAAI4iB,wBACXpZ,EAAK,EACLC,GAAM,GAER7X,KAAK+sB,cAAcptB,GAAKiY,EAAK5X,KAAKyT,QAAQC,SAAS5T,YACnDE,KAAK+sB,cAAcntB,GAAKiY,EAAK7X,KAAKyT,QAAQC,SAAS5T,QAIrD,GAAIE,KAAK6vB,cAmCP,OAlCI7vB,KAAKoO,IAAIC,aAAaP,EAAAzL,KAAKM,WAAa3C,KAAKoO,IAAIE,MAAMC,cACzDvO,KAAKixB,eAEHjxB,KAAKoO,IAAIC,aAAaP,EAAAzL,KAAKY,YAC7BjD,KAAKswB,kBAEHtwB,KAAKoO,IAAIqiB,yBACXzwB,KAAKitB,OAAOttB,IACZK,KAAKitB,OAAOrtB,KAEVI,KAAKoO,IAAIsiB,oBACX1wB,KAAKitB,OAAOrtB,IAEVI,KAAKoO,IAAIuiB,0BACX3wB,KAAKitB,OAAOttB,IACZK,KAAKitB,OAAOrtB,KAEVI,KAAKoO,IAAIwiB,oBACX5wB,KAAKitB,OAAOttB,IAEVK,KAAKoO,IAAIyiB,qBACX7wB,KAAKitB,OAAOttB,IAEVK,KAAKoO,IAAI0iB,uBACX9wB,KAAKitB,OAAOttB,IACZK,KAAKitB,OAAOrtB,KAEVI,KAAKoO,IAAI2iB,kBACX/wB,KAAKitB,OAAOrtB,SAEVI,KAAKoO,IAAI4iB,wBACXhxB,KAAKitB,OAAOttB,IACZK,KAAKitB,OAAOrtB,MAKhB,GAAI0O,EAAMC,YAAa,CACrB,MAAM4I,GAAOnX,KAAK+T,SAASpU,EAAI2O,EAAM3O,GAAKK,KAAKyT,QAAQC,SAAS7T,MAAS,EACnEuX,GAAOpX,KAAK+T,SAASnU,EAAI0O,EAAM1O,GAAKI,KAAKyT,QAAQC,SAAS5T,OAAU,EACpEmV,EAASjV,KAAKyT,QAAQ6D,QAAQH,EAAIC,GACpCnC,GAAUA,IAAWjV,KAAKkxB,aAC5BlxB,KAAKkxB,WAAajc,EAClBjV,KAAKmxB,KAAO5E,EAAA6E,YAAYpxB,KAAKyT,QAASzT,KAAKgR,OAAQhR,KAAKkxB,WAAY,KACpElxB,KAAKqtB,UAAY,GAIrB,IAAIgE,EAAW,KACf,GAAIrxB,KAAKmxB,KAAM,CAEb,IADAE,EAAWrxB,KAAKmxB,KAAKnxB,KAAKqtB,WACnBgE,GAAYA,EAAS1xB,IAAMK,KAAKgR,OAAOrR,GAAK0xB,EAASzxB,IAAMI,KAAKgR,OAAOpR,GAC5EI,KAAKqtB,YACLgE,EAAWrxB,KAAKqtB,UAAYrtB,KAAKmxB,KAAKhwB,OAASnB,KAAKmxB,KAAKnxB,KAAKqtB,WAAa,KAExEgE,GACHrxB,KAAKsxB,eAIT,GAAID,EAAJ,CACE,MAAMzZ,EAAKyZ,EAAS1xB,EAAIK,KAAKgR,OAAOrR,EAC9BkY,EAAKwZ,EAASzxB,EAAII,KAAKgR,OAAOpR,EAC/BI,KAAKuxB,gBAAgB3Z,EAAIC,IAC5B7X,KAAKsxB,oBAKLtxB,KAAKoO,IAAIqiB,wBAA0BzwB,KAAKuxB,iBAAiB,EAAG,IAG5DvxB,KAAKoO,IAAIsiB,oBAAsB1wB,KAAKuxB,gBAAgB,EAAG,IAGvDvxB,KAAKoO,IAAIuiB,yBAA2B3wB,KAAKuxB,gBAAgB,EAAG,IAG5DvxB,KAAKoO,IAAIwiB,oBAAsB5wB,KAAKuxB,iBAAiB,EAAG,IAGxDvxB,KAAKoO,IAAIyiB,qBAAuB7wB,KAAKuxB,gBAAgB,EAAG,IAGxDvxB,KAAKoO,IAAI0iB,sBAAwB9wB,KAAKuxB,iBAAiB,GAAI,IAG3DvxB,KAAKoO,IAAI2iB,kBAAoB/wB,KAAKuxB,gBAAgB,GAAI,IAGtDvxB,KAAKoO,IAAI4iB,uBAAyBhxB,KAAKuxB,gBAAgB,GAAI,IAG3DvxB,KAAKoO,IAAIojB,qBACXxxB,KAAKgR,OAAO6M,GAAK,GAWrBne,gBAAgBkY,EAAYC,GAC1B,MAAM7G,EAAShR,KAAKgR,OACpB,IAAKA,EACH,OAAO,EAGT,MAAMmN,EAAQnN,EAAOrR,EAAIiY,EACnBwG,EAAQpN,EAAOpR,EAAIiY,EAEzB,IAAK,IAAIhb,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAM0D,EAAQP,KAAKqf,SAAS3hB,IAAIb,GAChC,GAAImU,IAAWzQ,GAASA,EAAMZ,IAAMwe,GAAS5d,EAAMX,IAAMwe,EACvD,OAAIpe,KAAKmxB,MAED5wB,aAAiB6rB,EAAA1O,MAIA,IAAnB1d,KAAKqtB,WACPrtB,KAAKsxB,eACE/wB,EAAMkxB,OAAOzgB,KAGtBhR,KAAKsxB,gBACE,GAIF/wB,EAAMkxB,OAAOzgB,GAIxB,OAAOA,EAAOmE,KAAKyC,EAAIC,GAGjBnY,2BACN,MAAMsR,EAAShR,KAAKgR,OACpB,IAAKA,EACH,OAGF,MAAM0gB,EAAM1xB,KAAKyT,QACX0C,EAAYub,EAAIhe,SAAS7T,MACzBuW,EAAasb,EAAIhe,SAAS5T,OAEhC,IAAI6xB,EAAc3gB,EAAOrR,EAAIwW,EACzByb,EAAc5gB,EAAOpR,EAAIwW,EACzByb,GAAe7gB,EAAOrR,EAAI,GAAKwW,EAC/B2b,GAAe9gB,EAAOpR,EAAI,GAAKwW,EAGnC,IAAK,IAAIxW,EAAIoR,EAAOpR,EAAII,KAAKwtB,qBAAsB5tB,GAAKoR,EAAOpR,EAAII,KAAKwtB,qBAAsB5tB,IAC5F,IAAK,IAAID,EAAIqR,EAAOrR,EAAIK,KAAKstB,uBAAwB3tB,GAAKqR,EAAOrR,EAAIK,KAAKstB,uBAAwB3tB,IAC5F+xB,EAAI1U,UAAUrd,EAAGC,KACnB+xB,EAAc1hB,KAAK8H,IAAI4Z,EAAahyB,EAAIwW,GACxCyb,EAAc3hB,KAAK8H,IAAI6Z,EAAahyB,EAAIwW,GACxCyb,EAAc5hB,KAAK6H,IAAI+Z,GAAclyB,EAAI,GAAKwW,GAC9C2b,EAAc7hB,KAAK6H,IAAIga,GAAclyB,EAAI,GAAKwW,IAOpD,IAAIuG,EAAO3L,EAAOrR,EAAIwW,EAClByG,EAAO5L,EAAOpR,EAAIwW,EAClByG,EAAOF,EAAOxG,EACd2G,EAAOF,EAAOxG,EAElB,GAAIpW,KAAKmxB,KAEP,IAAK,IAAIt0B,EAAImD,KAAKqtB,UAAWxwB,EAAImD,KAAKmxB,KAAKhwB,OAAQtE,IAAK,CACtD,MAAMk1B,EAAW/xB,KAAKmxB,KAAKt0B,GAC3B8f,EAAO1M,KAAK8H,IAAI4E,EAAMoV,EAASpyB,EAAIwW,GACnCyG,EAAO3M,KAAK8H,IAAI6E,EAAMmV,EAASnyB,EAAIwW,GACnCyG,EAAO5M,KAAK6H,IAAI+E,GAAOkV,EAASpyB,EAAI,GAAKwW,GACzC2G,EAAO7M,KAAK6H,IAAIgF,GAAOiV,EAASnyB,EAAI,GAAKwW,QAI3C,IAAK,IAAIvZ,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAMojB,EAASjgB,KAAKqf,SAAS3hB,IAAIb,GAC7BojB,aAAkBmM,EAAA1O,OAASgU,EAAI1U,UAAUiD,EAAOtgB,EAAGsgB,EAAOrgB,KAC5D+c,EAAO1M,KAAK8H,IAAI4E,EAAMsD,EAAOtgB,EAAIwW,GACjCyG,EAAO3M,KAAK8H,IAAI6E,EAAMqD,EAAOrgB,EAAIwW,GACjCyG,EAAO5M,KAAK6H,IAAI+E,GAAOoD,EAAOtgB,EAAI,GAAKwW,GACvC2G,EAAO7M,KAAK6H,IAAIgF,GAAOmD,EAAOrgB,EAAI,GAAKwW,IAOxCyb,EAAcF,GAAgB3xB,KAAK+T,SAASlU,MAE/CG,KAAK+sB,cAAcptB,EAAIsQ,KAAKC,OAAOyhB,EAAcE,GAAe,GAGhE7xB,KAAK+sB,cAAcptB,EAAIsQ,KAAKC,OAAOyM,EAAOE,GAAQ,GAG/CiV,EAAcF,GAAgB5xB,KAAK+T,SAASjU,OAE/CE,KAAK+sB,cAAcntB,EAAIqQ,KAAKC,OAAO0hB,EAAcE,GAAe,GAGhE9xB,KAAK+sB,cAAcntB,EAAIqQ,KAAKC,OAAO0M,EAAOE,GAAQ,GAI9Cpd,KAAKugB,GACNA,EAAOsQ,KAMRtQ,EAAOhC,gBAAkB,GAAKgC,EAAOsQ,GAAGrc,eAC1C+L,EAAOsQ,GAAGjB,OAGZrP,EAAOpC,GAAK,GARVoC,EAAOpC,GAAK,EAWRne,WACN,GAAIM,KAAKgtB,UAAYhtB,KAAKqf,SAASle,OAAQ,CACzC,MAAMiuB,EAAapvB,KAAKqf,SAAS3hB,IAAIsC,KAAKgtB,WAC1CoC,EAAW4C,UAEPhyB,KAAKgR,SAAWoe,GAClBpvB,KAAKiyB,eAST,GALAjyB,KAAKgtB,YACDhtB,KAAKgtB,WAAahtB,KAAKqf,SAASle,SAClCnB,KAAKgtB,UAAY,GAGfhtB,KAAKgtB,WAAa,GAAKhtB,KAAKgtB,UAAYhtB,KAAKqf,SAASle,OAAQ,CAChE,MAAM+wB,EAAalyB,KAAKqf,SAAS3hB,IAAIsC,KAAKgtB,WAC1CkF,EAAWC,YAEPnyB,KAAKgR,SAAWkhB,GAClBlyB,KAAKoyB,4BAKX1yB,eACEM,KAAKmxB,UAAO3f,EACZxR,KAAKkxB,gBAAa1f,EAGpB9R,UAAUC,EAAWC,GACnB,GAAII,KAAKyT,QAAQ4K,UAAU1e,EAAGC,GAC5B,OAAO,EAET,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAM0D,EAAQP,KAAKqf,SAAS3hB,IAAIb,GAChC,GAAI0D,EAAM8S,QAAU9S,EAAMZ,IAAMA,GAAKY,EAAMX,IAAMA,EAC/C,OAAO,EAGX,OAAO,EAGTF,YAAYC,EAAWC,GACrB,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAMojB,EAASjgB,KAAKqf,SAAS3hB,IAAIb,GACjC,GAAIojB,EAAOtgB,IAAMA,GAAKsgB,EAAOrgB,IAAMA,EACjC,OAAOqgB,GAMbvgB,WAAWC,EAAWC,GACpB,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAM0D,EAAQP,KAAKqf,SAAS3hB,IAAIb,GAChC,GAAI0D,aAAiB6rB,EAAA1O,OAASnd,EAAMZ,IAAMA,GAAKY,EAAMX,IAAMA,EACzD,OAAOW,GAMbb,eACE,GAAKM,KAAKgR,OAAV,CAKAhR,KAAKyT,QAAQ4e,WAAWryB,KAAKgR,OAAOrR,EAAGK,KAAKgR,OAAOpR,EAAGI,KAAKstB,uBAAwBttB,KAAKwtB,sBAGxF,IAAK,IAAI3wB,EAAI,EAAGA,EAAImD,KAAKqf,SAASle,OAAQtE,IAAK,CAC7C,MAAMojB,EAASjgB,KAAKqf,SAAS3hB,IAAIb,GAC7BojB,IAAWjgB,KAAKgR,SAGdiP,aAAkBmM,EAAA1O,QAGpB1d,KAAKyT,QAAQuJ,UAAUiD,EAAOtgB,EAAGsgB,EAAOrgB,IACrCqgB,EAAO1I,OAEV0I,EAAO1I,MAAO,EACdvX,KAAKgR,OAAOkO,gBAAgB,IAAKhQ,EAAA3C,OAAOG,OACxC1M,KAAKsxB,eAELtxB,KAAK+sB,cAAcptB,GAAMK,KAAKgR,OAAO4C,aAAeqM,EAAOrM,cAAgB,EAAK,EAChF5T,KAAK+sB,cAAcntB,GAAMI,KAAKgR,OAAO6C,aAAeoM,EAAOpM,cAAgB,EAAK,GAElFoM,EAAOhC,mBAEPgC,EAAOhC,iBAAmB,QA/tBrB6O,EAAIpsB,EAAA,CADhBgsB,EAAA5tB,aAAa,SACDguB,GAAAzwB,EAAAywB,sFC3Bb,MAAMwF,EAAM,EAAE,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAC/BC,EAAM,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,EAAQ,CAAC,IAAK,EAAG,IAAK,EAAG,EAAG,IAAK,EAAG,KAyD1C,SAASC,EAAW7gB,GAClB,IAAI8gB,EAAW,KACXC,GAAa,EACbC,EAAUC,IAEd,IAAK,IAAIh2B,EAAI,EAAGA,EAAI+U,EAAEzQ,OAAQtE,IAAK,CACjC,MAAMwa,EAAOzF,EAAE/U,GACXwa,EAAKhG,IAAMwhB,KAAYxb,EAAKhG,EAAIgG,EAAK3F,EAAIkhB,IAC3CF,EAAWrb,EACXsb,EAAY91B,EACZ+1B,EAAUvb,EAAKhG,EAAIgG,EAAK3F,GAK5B,OADAE,EAAEnD,OAAOkkB,EAAW,GACbD,EAGT,SAASI,EAAUzb,GACjB,MAAM0b,EAAS,GACf,IAAIC,EAA2B3b,EAC/B,KAAO2b,GACLD,EAAOnkB,KAAKokB,GACZA,EAAOA,EAAK5N,KAGd,OADA2N,EAAOE,UACAF,EArET12B,EAAA+0B,YAAA,SAA4BM,EAAcpI,EAAc4J,EAAYC,IAgCpE,SAAuBzB,EAAcwB,GACnC,IAAK,IAAItzB,EAAI,EAAGA,EAAI8xB,EAAI5xB,OAAQF,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI+xB,EAAI7xB,MAAOF,IAAK,CAClC,MAAM0X,EAAOqa,EAAI1b,KAAKpW,GAAGD,GACzB0X,EAAKhG,EAAIwhB,IACTxb,EAAK3F,EAAIzB,KAAK8H,IAAI9H,KAAK2O,IAAIjf,EAAIuzB,EAAKvzB,GAAIsQ,KAAK2O,IAAIhf,EAAIszB,EAAKtzB,IAC1DyX,EAAK+N,KAAO,MArChBgO,CAAc1B,EAAKwB,GAEnB,MAAMG,EAAa3B,EAAI1b,KAAKsT,EAAO1pB,GAAG0pB,EAAO3pB,GAC7C0zB,EAAWhiB,EAAI,EAEf,MAAMO,EAAmB,CAACyhB,GAE1B,KAAOzhB,EAAEzQ,OAAS,GAAG,CACnB,MAAMiP,EAAIqiB,EAAW7gB,GAErB,GAAIxB,EAAEzQ,IAAMuzB,EAAKvzB,GAAKyQ,EAAExQ,IAAMszB,EAAKtzB,EACjC,OAAOkzB,EAAU1iB,GAGnB,IAAK,IAAIvT,EAAI,EAAGA,EAAIy1B,EAAInxB,OAAQtE,IAAK,CACnC,MAAM8C,EAAIyQ,EAAEzQ,EAAI2yB,EAAIz1B,GACd+C,EAAIwQ,EAAExQ,EAAI2yB,EAAI11B,GACpB,GAAI8C,GAAK,GAAKA,EAAI+xB,EAAI7xB,OAASD,GAAK,GAAKA,EAAI8xB,EAAI5xB,OAAQ,CACvD,MAAMuQ,EAAIqhB,EAAI1b,KAAKpW,GAAGD,GAChB2zB,EAAMljB,EAAEiB,EAAImhB,EAAM31B,GACpBy2B,EAAMjjB,EAAEgB,GAAKiiB,GAAOH,IAAaxzB,IAAMuzB,EAAKvzB,GAAKC,IAAMszB,EAAKtzB,IAAO8xB,EAAI1b,KAAKpW,GAAGD,GAAGqX,WACpF3G,EAAEgB,EAAIiiB,EACNjjB,EAAE+U,KAAOhV,EACTwB,EAAEhD,KAAKyB,uFCtCjBhU,EAAA+wB,IAAA,MAWE1tB,YAAY6zB,GAEVvzB,KAAK/C,EAAI,WACT+C,KAAKuR,EAAI,WACTvR,KAAK9C,EAAI,MACT8C,KAAK0jB,MAAQ6P,GAAQ,EAGvB7zB,QAAQ6zB,GACNvzB,KAAK0jB,MAAQ6P,EAGP7zB,UAEN,OADAM,KAAK0jB,OAAS1jB,KAAKuR,EAAIvR,KAAK0jB,MAAQ1jB,KAAK9C,GAAK8C,KAAK/C,EAC5C+C,KAAK0jB,MAMdhkB,YAEE,OAAOM,KAAKwzB,WAAaxzB,KAAK/C,EAAI,GAQpCyC,UAAU+S,EAAeghB,GAGvB,MAAMC,EAAYD,EAAMhhB,EAExB,OAAOA,GADczS,KAAKwzB,UAAYxzB,KAAK/C,EACXy2B,EAAa,GAG/Ch0B,YAAYi0B,GACV,MAAMC,EAAQD,EAAQE,OAAO,CAACtiB,EAAGD,IAAMC,EAAID,GACrCwiB,EAAO9zB,KAAK+zB,UAAU,EAAGH,EAAQ,GACvC,IAAII,EAAe,EAEnB,IAAK,IAAIn3B,EAAI,EAAGA,EAAI82B,EAAQxyB,OAAQtE,IAElC,GAAIi3B,IADJE,GAAgBL,EAAQ92B,IAEtB,OAAOA,EAIX,OAAO82B,EAAQxyB,OAAS,EAG1BzB,UAAUu0B,GACR,MAAMC,EAAmB,GACnBP,EAAoB,GAE1B,IAAK,MAAMn1B,KAAYy1B,EACjBA,EAAWv1B,eAAeF,KAC5B01B,EAAOtlB,KAAKpQ,GACZm1B,EAAQ/kB,KAAKqlB,EAAWz1B,KAI5B,OAAO01B,EAAOl0B,KAAKm0B,YAAYR,wbChFnC,MAAAlf,EAAA9X,EAAA,GACA+vB,EAAA/vB,EAAA,GAKA,IAAaqxB,EAAMoG,EAAnB,cAA4B3f,EAAAjV,KAS1BE,YACIC,EACAC,EACAC,EACAC,EACAqQ,EACAkkB,EACAC,EACAC,GACFx0B,MAAMJ,EAAGC,EAAGC,EAAOC,GACnBE,KAAKmQ,OAASA,GAAU,EACxBnQ,KAAKq0B,OAASA,EACdr0B,KAAKs0B,cAAgBA,GAxBO,GAyB5Bt0B,KAAKu0B,cAAgBA,EACrBv0B,KAAKw0B,UAAY,EACjBx0B,KAAKy0B,UAAY,EAGnB/0B,KAAK0O,EAAUzO,EAAWC,EAAW20B,GACnC,IAAIvkB,EAAQhQ,KAAKw0B,UACbx0B,KAAKq0B,OACPrkB,GAAUokB,EAAOxE,gBAAkB5vB,KAAKs0B,cAAiB,GAAKt0B,KAAKmQ,QAGrE,MAAMC,EAAIpQ,KAAKL,EAAIqQ,EAAQhQ,KAAKH,MAC1BwQ,EAAIrQ,KAAKJ,EACT2V,EAAQgf,GAAiBv0B,KAAKu0B,cACpCnmB,EAAIkC,UAAU3Q,EAAGC,EAAGwQ,EAAGC,EAAGrQ,KAAKH,MAAOG,KAAKF,OAAQyV,GAEnDvV,KAAKy0B,YACDz0B,KAAKy0B,UAAYz0B,KAAKs0B,gBACxBt0B,KAAKy0B,UAAY,EACjBz0B,KAAKw0B,YACDx0B,KAAKw0B,WAAax0B,KAAKmQ,SACrBnQ,KAAKq0B,KACPr0B,KAAKw0B,UAAY,EAEjBx0B,KAAKw0B,UAAYx0B,KAAKmQ,OAAS,IAMvCzQ,QACE,OAAO,IAAI00B,EACTp0B,KAAKL,EACLK,KAAKJ,EACLI,KAAKH,MACLG,KAAKF,OACLE,KAAKmQ,OACLnQ,KAAKq0B,KACLr0B,KAAKs0B,cACLt0B,KAAKu0B,eAGT70B,gCACE00B,EAAOxE,oBAhEF5B,EAAA4B,gBAAkB,EADd5B,EAAMoG,EAAA1zB,EAAA,CADlBgsB,EAAA5tB,aAAa,WACDkvB,GAAA3xB,EAAA2xB,wFCRb,MAAAzuB,EAAA5C,EAAA,GAEAN,EAAAqa,YAAA,cAAiCnX,EAAAE,KAU/BC,YAAYC,EAAWC,EAAWmX,GAChChX,MAAMJ,EAAGC,GACTI,KAAK+W,KAAOA,EACZ/W,KAAKgX,SAAU,EACfhX,KAAKiX,cAAe,EACpBjX,KAAKkB,SAAU,EACflB,KAAKuX,MAAO,EACZvX,KAAKqR,EAAI,EACTrR,KAAK0R,EAAI,EACT1R,KAAKolB,KAAO,ubCrBhB,MAAAsP,EAAA/3B,EAAA,IACA+X,EAAA/X,EAAA,IACA4X,EAAA5X,EAAA,IAEA6X,EAAA7X,EAAA,GAIA,IAAag4B,EAAb,cAAwCD,EAAA5hB,WACtCpT,OAAO2B,GACL,GAAIrB,KAAKe,SAASI,OAAS,EAGzB,OAAO,EAGT,GAAIE,aAAiBqT,EAAA/D,WAAY,CAC/B,MAAMikB,EAAavzB,EACbuP,EAAiBgkB,EAAWhkB,eAC5BkB,EAAe8iB,EAAW9jB,WAAWpT,IAAI,GAI/C,OAHAsC,KAAKuB,IAAI,IAAIgT,EAAA1C,mBAAmB7R,KAAKa,KAAKg0B,QAASjkB,EAAgBkB,KAG5D,EAGT,OAAIzQ,aAAiBmT,EAAApF,eACf/N,EAAMkO,WAKRvP,KAAKuB,IAAI,IAAIiT,EAAApF,aAAapP,KAAKa,KAAKg0B,QAASxzB,EAAMiO,QAAQ,KACpD,MAIPjO,aAAiBkT,EAAA1C,oBAAuBxQ,aAAiBmT,EAAApF,cAAgB/N,EAAMkO,YA7B1EolB,EAAkBj0B,EAAA,CAH/B/D,EAAA,GAECmC,aAAa,uBACD61B,GAAAt4B,EAAAs4B,kKCRbG,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IAEAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KAEAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KAGAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,IACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,KACAm4B,EAAAn4B,EAAA,mFCzDAN,EAAA+P,iBAAA,MAGE1M,cACEM,KAAK+0B,SAAW,GAGlBr1B,KAAKs1B,GAEH,OADAh1B,KAAK+0B,SAASnmB,KAAKomB,GACZh1B,KAGTN,UACE,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAK+0B,SAAS5zB,OAAQtE,IACxCmD,KAAK+0B,SAASl4B,sFCbpB,MAAAo4B,EAAAt4B,EAAA,IAEMu4B,EAAiB,EAEvB74B,EAAA84B,aAAA,cAAkCF,EAAAhhB,GAGhCvU,YAAYmQ,EAAculB,GACxBr1B,MAAM8P,GACN7P,KAAKo1B,WAAaA,EAGpB11B,OACE,MAAM21B,EAAUr1B,KAAK6P,MACfmB,EAASqkB,EAAQhpB,KAAK2E,OAC5B,GAAKA,EAIL,GAAIqkB,EAAQC,WAAWtkB,GAAU,IAE/BqkB,EAAQE,WAAWvkB,EAAOrR,EAAGqR,EAAOpR,QAE/B,GAAIoR,EAAO2M,GAAK,EAAG,CAExB,MAAMkB,EAAS7e,KAAKo1B,WAAap1B,KAAKo1B,WAAWC,EAASrkB,GAAUkkB,EACpEG,EAAQG,OAAOxkB,EAAQ6N,qFC1B7B,MAAAoW,EAAAt4B,EAAA,IAEAN,EAAAo5B,gBAAA,cAAqCR,EAAAhhB,GAInCvU,YAAYmQ,GACV9P,MAAM8P,GACN7P,KAAK01B,SAAW,GAChB11B,KAAK21B,MAAQ9lB,EAAM0gB,GAGrB7wB,OACE,GAAIM,KAAK01B,SAAW,EAAG,CAGrB,MAAMvI,EAAMntB,KAAK6P,MAAMxD,KAAK8gB,IAC5BntB,KAAK6P,MAAMsF,KAAKgY,EAAI4G,WAAW,EAAG,GAAI5G,EAAI4G,WAAW,EAAG,IACxD/zB,KAAK01B,gBAEL11B,KAAK6P,MAAM0gB,GAAKvwB,KAAK21B,uFCtB3B,MAAArpB,EAAA3P,EAAA,IAGAojB,EAAApjB,EAAA,GAEAN,EAAAu5B,gBAAA,cAAqC7V,EAAA/T,UAGnCtM,YAAYm2B,GACV91B,MAAM81B,GAAU,GAChB71B,KAAK61B,SAAWA,EAGlBn2B,KAAK2M,GACH,MAAMiG,EAAMjG,EAAKypB,aACjB,IAAKxjB,EACH,OAEF,MAAM3S,EAAIK,KAAKiM,UAAYjM,KAAK61B,SAC1B9Y,EAAQ9M,KAAK6H,IAAI,EAAG7H,KAAK8H,IAAI,IAAM,IAAQpY,EAAK,IAChD4V,EAAQjJ,EAAAG,QAAQ,EAAG,EAAG,EAAGsQ,GAC/B1Q,EAAK+B,IAAIkC,UAAU,EAAG,EAAGgC,EAAI3S,EAAG2S,EAAI1S,EAAG0S,EAAIzS,MAAOyS,EAAIxS,OAAQyV,EAAOlJ,EAAK+B,IAAI0G,KAAKjV,MAAOwM,EAAK+B,IAAI0G,KAAKhV,yFCrB5G,MAAAwM,EAAA3P,EAAA,IAGAojB,EAAApjB,EAAA,GAEAN,EAAA05B,iBAAA,cAAsChW,EAAA/T,UAGpCtM,YAAYm2B,GACV91B,MAAM81B,GAAU,GAChB71B,KAAK61B,SAAWA,EAGlBn2B,KAAK2M,GACH,MAAMiG,EAAMjG,EAAKypB,aACjB,IAAKxjB,EACH,OAEF,MAAM3S,EAAI,EAAMK,KAAKiM,UAAYjM,KAAK61B,SAChC9Y,EAAQ9M,KAAK6H,IAAI,EAAG7H,KAAK8H,IAAI,IAAM,IAAQpY,EAAK,IAChD4V,EAAQjJ,EAAAG,QAAQ,EAAG,EAAG,EAAGsQ,GAC/B1Q,EAAK+B,IAAIkC,UAAU,EAAG,EAAGgC,EAAI3S,EAAG2S,EAAI1S,EAAG0S,EAAIzS,MAAOyS,EAAIxS,OAAQyV,EAAOlJ,EAAK+B,IAAI0G,KAAKjV,MAAOwM,EAAK+B,IAAI0G,KAAKhV,yFCjB5G,MAAAigB,EAAApjB,EAAA,GAEAN,EAAA25B,oBAAA,cAAyCjW,EAAA/T,UAMvCtM,YAAY+P,EAAgBwmB,EAAgBC,EAAgBL,GAC1D91B,MAAM81B,GAAU,GAChB71B,KAAKyP,OAASA,EACdzP,KAAKi2B,SAAWA,EAChBj2B,KAAKk2B,SAAWA,EAChBl2B,KAAK61B,SAAWA,EAGlBn2B,SACEK,MAAMmgB,SACNlgB,KAAKi2B,SAAS10B,IAAIvB,KAAKk2B,UAGzBx2B,KAAK2M,GACH,MAAM1M,EAAIK,KAAKi2B,SAASt2B,EAAI0M,EAAK0H,SAASpU,EACpCC,EAAII,KAAKi2B,SAASr2B,EAAIyM,EAAK0H,SAASnU,EAC1CI,KAAKyP,OAAOtB,KAAK9B,EAAK+B,IAAKzO,EAAGC,oFC1BlC,MAAMu2B,EAAkB,GAClBC,EAAgB,IAEtB,MAAsBC,EASpB32B,UAAU2oB,GACR,OAAOA,GAAY8N,GAAmB9N,GAAY+N,EAOpD12B,eAAemgB,GACb,IAAIyW,EAAM,EACV,IAAK,IAAIz5B,EAAI,EAAGA,EAAIgjB,EAAI1e,OAAQtE,IAC9By5B,GAAOt2B,KAAKyoB,SAAS5I,EAAIyI,WAAWzrB,IAEtC,OAAOy5B,GAtBXj6B,EAAAg6B,OA0BAh6B,EAAAk6B,eAAA,cAAoCF,EAGlC32B,YAAY82B,GACVz2B,QACAC,KAAKw2B,UAAYA,EAGnB92B,UAAU2oB,GACR,OAAQA,EAAW8N,GAAmBn2B,KAAKw2B,UAAU32B,MAGvDH,WACE,OAAOM,KAAKw2B,UAAU32B,MAGxBH,YACE,OAAOM,KAAKw2B,UAAU12B,SAI1B,MAAa22B,UAAyBJ,EAKpC32B,YAAYI,EAAgB42B,GAC1B32B,QACAC,KAAKF,OAASA,EACdE,KAAK02B,OAASA,EACd12B,KAAK22B,QAAU,CAAC,GAEhB,IAAIrjB,EAAS,EACb,IAAK,IAAIzW,EAAI,EAAGA,EAAImD,KAAK02B,OAAOv1B,OAAQtE,IACtCyW,GAAUtT,KAAK02B,OAAO75B,GACtBmD,KAAK22B,QAAQ/nB,KAAK0E,GAItB5T,UAAU2oB,GACR,OAAOroB,KAAK22B,QAAQtO,EAAW8N,GAGjCz2B,SAAS2oB,GACP,OAAOroB,KAAK02B,OAAOrO,EAAW8N,GAGhCz2B,YACE,OAAOM,KAAKF,QA3BhBzD,EAAAo6B,mBA+Bap6B,EAAAwlB,WAAa,IAAI4U,EAAiB,EAAG,CAChD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7F,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7F,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,mFCnF/F,MAAAG,EAAAj6B,EAAA,IAEAN,EAAAw6B,gBAAA,cAAqCD,EAAAvhB,QAGnC3V,eAAemT,GACb9S,MAAM,GAAI,GACVC,KAAK6S,SAAWA,EAGlBnT,KAAK0O,EAAUoH,GAEb,IAAK,IAAI3Y,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IACxCmD,KAAK6S,SAAShW,GAAGsR,KAAKC,EAAKoH,qbCfjC,MAAAf,EAAA9X,EAAA,GAEAm6B,EAAAn6B,EAAA,GACA+vB,EAAA/vB,EAAA,GAOA,IAAauwB,EAAb,cAAmC4J,EAAA9oB,OAGjCtO,cACEK,MAAM,IAAI0U,EAAAjV,KAAK,EAAG,EATR,IASkB,KAC5BQ,KAAK6S,SAAW,GAChB7S,KAAKkB,SAAU,EAGjBxB,OAAOC,EAAWC,GAChB,IAAKI,KAAKc,IACR,OAIF,MAAMsN,EAAMpO,KAAKc,IAAIsN,IACfwT,EAAOxT,EAAIwT,KACXmV,EAAanV,EAAKwG,YApBP,EAqBjBpoB,KAAKa,KAAKhB,MAAQ,GAClBG,KAAKa,KAAKf,OAAS,GAAaE,KAAK6S,SAAS1R,OAAS41B,EAEvD,IAAK,IAAIl6B,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IAAK,CAC7C,MAAMm6B,EAAMh3B,KAAK6S,SAAShW,GACpBgD,EAAQ,GAAa+hB,EAAKmG,eAAeiP,EAAI1hB,MACnDtV,KAAKa,KAAKhB,MAAQoQ,KAAK6H,IAAI9X,KAAKa,KAAKhB,MAAOA,GAG1CF,EAAIK,KAAKa,KAAKhB,OAASuO,EAAI0G,KAAKjV,MAClCG,KAAKa,KAAKlB,EAAIA,EAAIK,KAAKa,KAAKhB,MAAQ,EAEpCG,KAAKa,KAAKlB,EAAIA,EAAI,EAGhBC,EAAII,KAAKa,KAAKf,OAAS,EACzBE,KAAKa,KAAKjB,EAAIA,EAAI,EAElBI,KAAKa,KAAKjB,EAAIA,EAAII,KAAKa,KAAKf,OAAS,EAGnCE,KAAKa,KAAKlB,EAAI,IAChBK,KAAKa,KAAKlB,EAAI,GAGZK,KAAKa,KAAKjB,EAAI,IAChBI,KAAKa,KAAKjB,EAAI,GAGhBI,KAAKkB,SAAU,EAGjBxB,eACE,IAAKM,KAAKc,IACR,OAIFf,MAAMiC,eAEN,MAAM+0B,EAAa/2B,KAAKc,IAAIsN,IAAIwT,KAAKwG,YA7DpB,EA8DXzoB,EAAIK,KAAKa,KAAKlB,EA/DT,EAgEX,IAAIC,EAAII,KAAKa,KAAKjB,EAhEP,EAkEX,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IAAK,CAC7C,MAAMm6B,EAAMh3B,KAAK6S,SAAShW,GAC1BmD,KAAKc,IAAIsN,IAAIqH,WAAWuhB,EAAI1hB,KAAM3V,EAAGC,EAAGo3B,EAAIzhB,OAC5C3V,GAAKm3B,GAITr3B,cACE,QAAKM,KAAKc,MAINd,KAAKc,IAAIsN,IAAIE,MAAMC,cACrBvO,KAAKkB,SAAU,IAGV,KA9EEgsB,EAAaxsB,EAAA,CADzBgsB,EAAA5tB,aAAa,kBACDouB,GAAA7wB,EAAA6wB,gcCXb,MAAApf,EAAAnR,EAAA,GAEA4C,EAAA5C,EAAA,GAEAs6B,EAAAt6B,EAAA,IACAm6B,EAAAn6B,EAAA,GAGA+vB,EAAA/vB,EAAA,GAKA,IAAau6B,EAAb,cAAyCJ,EAAA9oB,OAOvCtO,YAAYmB,EAAY9B,GACtBgB,MAAMc,GACNb,KAAKjB,QAAUA,EACfiB,KAAKm3B,cAAgB,EACrBn3B,KAAKkO,SAAW,IAAI+oB,EAAAG,4BAGtB13B,eACE,IAAKM,KAAKc,IACR,OAGFf,MAAMiC,eACN,MAAMsR,EAAStT,KAAKa,KACdL,EAAQ,IAAIjB,EAAAE,KAAK6T,EAAO3T,EAxBnB,EAwB+B2T,EAAO1T,EAxBtC,GAyBX,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IAAK,CAC5C,MAAMw6B,EAASr3B,KAAKjB,QAAQlC,GACtBy6B,EAAWz6B,IAAMmD,KAAKm3B,cAC5Bn3B,KAAKkO,SAASqpB,WAAWv3B,KAAKc,IAAKN,EAAO62B,EAAQC,GAClD92B,EAAMZ,GAAKI,KAAKkO,SAASka,UAAUiP,EAAQC,IAI/C53B,cACE,IAAKM,KAAKc,IACR,OAAO,EAGT,MAAMsN,EAAMpO,KAAKc,IAAIsN,IAErB,IAAK,IAAIvR,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IACnCuR,EAAIC,aAAaP,EAAAzL,KAAK0C,KAAOlI,KAC/BmD,KAAKm3B,cAAgBt6B,EACjBmD,KAAKw3B,UACPx3B,KAAKw3B,SAASx3B,KAAKjB,QAAQlC,KAK7BuR,EAAIC,aAAaP,EAAAzL,KAAKM,WACpB3C,KAAKw3B,UACPx3B,KAAKw3B,SAASx3B,KAAKjB,QAAQiB,KAAKm3B,gBAIhC/oB,EAAIC,aAAaP,EAAAzL,KAAKY,YACpBjD,KAAKy3B,UACPz3B,KAAKy3B,WAILrpB,EAAIC,aAAaP,EAAAzL,KAAKmB,QACxBxD,KAAKm3B,gBAGH/oB,EAAIC,aAAaP,EAAAzL,KAAKqB,UACxB1D,KAAKm3B,gBAGHn3B,KAAKm3B,cAAgB,IACvBn3B,KAAKm3B,eAAiBn3B,KAAKjB,QAAQoC,QAGjCnB,KAAKm3B,eAAiBn3B,KAAKjB,QAAQoC,SACrCnB,KAAKm3B,eAAiBn3B,KAAKjB,QAAQoC,QAGrC,MAAMmN,EAAQF,EAAIE,MACZgF,EAAStT,KAAKa,KACpB,IAAIjB,EAAI0T,EAAO1T,EA/EJ,EAgFX,GAAsB,IAAlB0O,EAAM+F,SAAiB/F,EAAM3O,GAAK2T,EAAOrT,IAAMqO,EAAM3O,EAAI2T,EAAOnT,GAClE,IAAK,IAAItD,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IAAK,CAC5C,MAAMw6B,EAASr3B,KAAKjB,QAAQlC,GACtBy6B,EAAWz6B,IAAMmD,KAAKm3B,cACtBJ,EAAa/2B,KAAKkO,SAASka,UAAUiP,EAAQC,GAC7CI,EAAS93B,EACT+3B,EAAO/3B,EAAIm3B,EACbzoB,EAAM1O,GAAK83B,GAAUppB,EAAM1O,EAAI+3B,IAC7BL,EACEt3B,KAAKw3B,UACPx3B,KAAKw3B,SAASH,GAGhBr3B,KAAKm3B,cAAgBt6B,GAGzB+C,GAAKm3B,EAIT,OAAO,IAjGEG,EAAmBx2B,EAAA,CAD/BgsB,EAAA5tB,aAAa,wBACDo4B,GAAA76B,EAAA66B,scCbb,MAAAhoB,EAAAvS,EAAA,GASA,IAAay6B,EAAb,MACE13B,UAAU23B,EAAsBC,GAC9B,OAAO,GAGT53B,WAAWoB,EAAUN,EAAa62B,EAAsBC,GACtD,MAAM/hB,EAAQ+hB,EAAWpoB,EAAA3C,OAAOO,OAASoC,EAAA3C,OAAOG,MAChD5L,EAAIsN,IAAIqH,WAAW4hB,EAAOj6B,KAAMoD,EAAMb,EAAGa,EAAMZ,EAAG2V,KAPzC6hB,EAA2B12B,EAAA,CAHxC/D,EAAA,GAECmC,aAAa,gCACDs4B,GAAA/6B,EAAA+6B,8cCPb,MAAArpB,EAAApR,EAAA,GAIA,IAAai7B,EAAb,cAAgC7pB,EAAAnN,MAG9BlB,YAAYm4B,EAAe1lB,GACzBpS,MAAMoS,GACNnS,KAAK63B,QAAUA,EAGjBn4B,eACE,IAAKM,KAAKc,IACR,OAGF,MAAMwR,EAAMtS,KAAK63B,QACX5mB,EAAMjR,KAAKa,KACjBb,KAAKc,IAAIsN,IAAIkC,UAAUW,EAAItR,EAAGsR,EAAIrR,EAAG0S,EAAI3S,EAAG2S,EAAI1S,EAAGqR,EAAIpR,MAAOoR,EAAInR,UAfzD83B,EAAUl3B,EAAA,CAHvB/D,EAAA,GAECmC,aAAa,eACD84B,GAAAv7B,EAAAu7B,6bCJb,MAAA9pB,EAAAnR,EAAA,GAEA8X,EAAA9X,EAAA,GAGAm6B,EAAAn6B,EAAA,GACA+X,EAAA/X,EAAA,IACAm7B,EAAAn7B,EAAA,IACA+vB,EAAA/vB,EAAA,GAMA,IAAao7B,EAAb,cAAyCjB,EAAA9oB,OAKvCtO,YAAYmB,EAAYgS,EAAqBmlB,EAAkBC,GAC7Dl4B,MAAMc,GACNb,KAAK6S,SAAWA,EAChB7S,KAAKg4B,SAAWA,EAChBh4B,KAAKi4B,MAAQA,EACbj4B,KAAKiB,OAAQ,EAEbg3B,EAAMC,YAAY,CAACppB,MAAO,CAACqpB,EAAGpnB,IAAS/Q,KAAKo4B,QAAQrnB,GAAO/B,SAAU,CAACmpB,EAAGpnB,IAAS/Q,KAAKq4B,WAAWtnB,KAElG,IAAK,IAAIlU,EAAI,EAAGA,EAAIm7B,EAAUn7B,IAE5BmD,KAAKuB,IAAI,IAAIu2B,EAAAQ,wBAAwB,IAAI7jB,EAAAjV,KAAK,EAAG,EAAG,GAAI,IAAKy4B,EAAOnqB,EAAAzL,KAAK0C,KAAOlI,IAI5E6C,QAAQqR,GACd,MAAMwnB,EAAiBv4B,KAAKw4B,kBAAkBznB,GAC9C,GAAIwnB,EAEF,YADAA,EAAeznB,WAAWvP,IAAIwP,GAIhC,MAAM0nB,EAAWz4B,KAAK04B,kBAClBD,GACFA,EAASl3B,IAAI,IAAImT,EAAA/D,WAAW8nB,EAAS53B,KAAKg0B,QAAS70B,KAAKi4B,MAAOlnB,IAI3DrR,WAAWqR,GACjB,IAAK,IAAIlU,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM87B,EAAa34B,KAAKe,SAASrD,IAAIb,GAC/BkW,EAAS4lB,EAAW5lB,OACtBA,GAAUA,aAAkB2B,EAAA/D,YAC1BoC,EAAOjC,WAAWhP,SAASiP,KAC7BgC,EAAOjC,WAAWtP,OAAOuP,GACQ,IAA7BgC,EAAOjC,WAAW3P,QACpBw3B,EAAWn3B,OAAOuR,KAOpBrT,kBAAkBqR,GACxB,IAAK,IAAIlU,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MACMkW,EADa/S,KAAKe,SAASrD,IAAIb,GACXkW,OAC1B,GAAIA,GAAUA,aAAkB2B,EAAA/D,WAAY,CAC1C,MAAMioB,EAAW7lB,EAAOjC,WAAWpT,IAAI,GACvC,GAAIqT,EAAKmB,YAAY0mB,GACnB,OAAO7lB,IAOPrT,kBACN,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM87B,EAAa34B,KAAKe,SAASrD,IAAIb,GACrC,IAAK87B,EAAW5lB,OACd,OAAO4lB,GAMbj5B,eAGE,GAFAK,MAAMiC,gBAEDhC,KAAKc,MAAQd,KAAKc,IAAIoN,SAAS8E,eAClC,OAIF,MAAM6lB,EAAgB74B,KAAKa,KACrBi4B,EAAa94B,KAAKc,IAAIoN,SAAS8E,eACrC,IAAIrT,EAAIk5B,EAAcl5B,EAtFX,EAuFPC,EAAIi5B,EAAcj5B,EAvFX,EAyFX,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IAAK,CAC7C,MAAMm6B,EAAMh3B,KAAK6S,SAAShW,GAC1BmD,KAAKc,IAAIsN,IAAIqH,WAAWuhB,EAAI1hB,KAAM3V,EAAGC,EAAGo3B,EAAIzhB,OAC5C3V,GAAK,GAGP,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKg4B,SAAUn7B,IAAK,CACtC,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAChC6E,EAAMb,KAAKlB,EAAIA,EACf+B,EAAMb,KAAKjB,EAAIA,EACf8B,EAAMb,KAAKhB,MAAQi5B,EAAWj5B,MAC9B6B,EAAMb,KAAKf,OAASg5B,EAAWh5B,QAE/BH,GAAKm5B,EAAWj5B,MArGC,GAsGTg5B,EAAc14B,GAAK24B,EAAWj5B,MAvG7B,IAwGPF,EAAIk5B,EAAcl5B,EAxGX,EAyGPC,GAAKk5B,EAAWh5B,OAxGD,GA4GnBE,KAAKa,KAAKf,OAAUF,EA7GT,EA6GuBi5B,EAAcj5B,EAChDI,KAAK+B,iBA1GIg2B,EAAmBr3B,EAAA,CAD/BgsB,EAAA5tB,aAAa,wBACDi5B,GAAA17B,EAAA07B,scCXb,MAAArD,EAAA/3B,EAAA,IACA+X,EAAA/X,EAAA,IAKA,IAAa27B,EAAb,cAA6C5D,EAAA5hB,WAG3CpT,YAAYmB,EAAYo3B,EAAwB7lB,GAC9CrS,MAAMc,EAAMuR,GACZpS,KAAKi4B,MAAQA,EAGfv4B,OAAO2B,GACL,OAAOA,aAAiBqT,EAAA/D,aATf2nB,EAAuB53B,EAAA,CAHpC/D,EAAA,GAECmC,aAAa,4BACDw5B,GAAAj8B,EAAAi8B,0cCVb,MAAAppB,EAAAvS,EAAA,GACAi6B,EAAAj6B,EAAA,IAGAoR,EAAApR,EAAA,GACA+vB,EAAA/vB,EAAA,GACA4C,EAAA5C,EAAA,GAGA,IAAao8B,EAAb,cAAgChrB,EAAAnN,MAI9BlB,YAAYmB,EAAYm4B,GACtBj5B,MAAMc,GACNb,KAAK6S,SAAW,GAChB7S,KAAKg5B,SAAWA,GAAY,EAG9Bt5B,IAAImuB,EAA+BtY,GAC7BsY,aAAmB9f,EAAAnN,QAMnBitB,aAAmB+I,EAAAvhB,QACrBrV,KAAK6S,SAASjE,KAAKif,GAEnB7tB,KAAK6S,SAASjE,KAAK,IAAIgoB,EAAAvhB,QAAQwY,EAAStY,GAASrG,EAAA3C,OAAOG,QAGtD1M,KAAK6S,SAAS1R,OAASnB,KAAKg5B,UAC9Bh5B,KAAK6S,SAASpE,OAAO,EAAGzO,KAAK6S,SAAS1R,OAASnB,KAAKg5B,WAIxDt5B,eACE,IAAKM,KAAKc,IACR,OAGF,MAAM0U,EAAM,IAAIjW,EAAAE,KAAKO,KAAKa,KAAKlB,EAAGK,KAAKa,KAAKjB,GAE5C,GAAI4V,EAAI5V,EAAI,EAAG,CAEb,MAAMq5B,EAASj5B,KAAKc,IAAIsN,IAAI0G,KAAKhV,OAAS0V,EAAI5V,EAAII,KAAKa,KAAKf,OAC5D0V,EAAI5V,EAAIq5B,EAAgC,GAAvBj5B,KAAK6S,SAAS1R,OAGjC,IAAK,IAAItE,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IAAK,CACjCmD,KAAK6S,SAAShW,GACtBsR,KAAKnO,KAAKc,IAAIsN,IAAKoH,GACvBA,EAAI7V,EAAI,EACR6V,EAAI5V,GAAK,IAIbF,cACE,OAAO,IAlDEq5B,EAAUr4B,EAAA,CADtBgsB,EAAA5tB,aAAa,eACDi6B,GAAA18B,EAAA08B,6bCPb,MAAAhrB,EAAApR,EAAA,GAIA,IAAau8B,EAAb,cAAkCnrB,EAAAnN,MAGhClB,YAAYmB,EAAYgtB,GACtB9tB,MAAMc,GACNb,KAAK6tB,QAAUA,EAGjBnuB,eACE,IAAKM,KAAKc,IACR,OAGF,MAAMk2B,EAAMh3B,KAAK6tB,QACX5c,EAAMjR,KAAKa,KACjBb,KAAKc,IAAIsN,IAAIqH,WAAWuhB,EAAI1hB,KAAMrE,EAAItR,EAAGsR,EAAIrR,EAAGo3B,EAAIzhB,SAf3C2jB,EAAYx4B,EAAA,CAHzB/D,EAAA,GAECmC,aAAa,iBACDo6B,GAAA78B,EAAA68B,+bCPb,MAAAprB,EAAAnR,EAAA,GAEAm6B,EAAAn6B,EAAA,GAEA+vB,EAAA/vB,EAAA,GAMA,IAAaw8B,EAAb,cAAkCrC,EAAA9oB,OAIhCtO,YAAYmB,EAAY9B,EAAyBygB,GAC/Czf,MAAMc,GACNb,KAAKjB,QAAUA,EACfiB,KAAKwf,SAAWA,EAGlB9f,eACE,IAAKM,KAAKc,IACR,OAGFf,MAAMiC,eACN,MAAMsR,EAAStT,KAAKa,KACpB,IAAK,IAAIhE,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IAAK,CAC5C,MAAMgjB,EAAM5M,OAAOC,aAAa,GAAKrW,GAAK,MAAQmD,KAAKjB,QAAQlC,GAAGO,KAClE4C,KAAKc,IAAIsN,IAAIqH,WAAWoK,EAAKvM,EAAO3T,EAvB3B,EAuBuC2T,EAAO1T,EAvB9C,EACK,GAsBsD/C,IAIxE6C,cACE,IAAKM,KAAKc,IACR,OAAO,EAGT,IAAK,IAAIjE,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IACvC,GAAImD,KAAKc,IAAIsN,IAAIC,aAAaP,EAAAzL,KAAK0C,KAAOlI,GAGxC,OAFAmD,KAAKwf,SAASxf,KAAKjB,QAAQlC,IAC3BmD,KAAKo5B,SACE,EAIX,GAAIp5B,KAAKc,IAAIsN,IAAIC,aAAaP,EAAAzL,KAAKY,WAEjC,OADAjD,KAAKo5B,SACE,EAGT,MAAM9qB,EAAQtO,KAAKc,IAAIsN,IAAIE,MACrBgF,EAAStT,KAAKa,KACpB,GAAIyN,EAAMC,aAAeD,EAAM3O,GAAK2T,EAAOrT,IAAMqO,EAAM3O,EAAI2T,EAAOnT,GAAI,CACpE,GAAIH,KAAKiO,aAAeK,EAAM3O,GAAK2T,EAAOnT,GAAK,IAAMmO,EAAM1O,EAAI0T,EAAO1T,EAAI,GAExE,OADAI,KAAKo5B,SACE,EAGT,IAAK,IAAIv8B,EAAI,EAAGA,EAAImD,KAAKjB,QAAQoC,OAAQtE,IAAK,CAC5C,MAAM66B,EAASpkB,EAAO1T,EAtDf,EACK,GAqDuB/C,EAC7B86B,EAAOD,EAtDD,GAuDRppB,EAAM1O,GAAK83B,GAAUppB,EAAM1O,EAAI+3B,IACjC33B,KAAKwf,SAASxf,KAAKjB,QAAQlC,IAC3BmD,KAAKo5B,UAKX,OAAO,IA3DED,EAAYz4B,EAAA,CADxBgsB,EAAA5tB,aAAa,iBACDq6B,GAAA98B,EAAA88B,+bCRb,MAAArrB,EAAAnR,EAAA,GACA8X,EAAA9X,EAAA,GAGA4X,EAAA5X,EAAA,IACAoR,EAAApR,EAAA,GACA08B,EAAA18B,EAAA,IACA6X,EAAA7X,EAAA,GACA+vB,EAAA/vB,EAAA,GAKA,IAAa28B,EAAb,cAAiCvrB,EAAAnN,MAG/BlB,YAAYmB,EAAYmR,EAAeunB,GACrCx5B,MAAMc,GACNb,KAAKu5B,aAAsB/nB,IAAZ+nB,EAAwBA,EARnB,EAUpB,IAAK,IAAI18B,EAAI,EAAGA,EAAImV,EAAOnV,IAAK,CAC9B,MAAM87B,EAAa,IAAIU,EAAA1E,mBAAmB,IAAIlgB,EAAAjV,KAAK,EAAG,EAAG,GAAI,IAAKsO,EAAAzL,KAAK0B,KAAOlH,GAC9EmD,KAAKuB,IAAIo3B,IAIbj5B,UAAU4P,EAAgBkqB,GACxB,GAAIx5B,KAAKy5B,eAAenqB,GACtB,OAEF,MAAMoqB,EAAO15B,KAAK25B,cAAcH,GAC5BE,GACFA,EAAKn4B,IAAI,IAAIiT,EAAApF,aAAasqB,EAAK74B,KAAKg0B,QAASvlB,GAAQ,IAIzD5P,eAAe4P,GACb,IAAK,IAAIzS,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM68B,EAAO15B,KAAKe,SAASrD,IAAIb,GAC/B,GAAI68B,EAAK3mB,QAAU2mB,EAAK3mB,kBAAkByB,EAAApF,cAAgBsqB,EAAK3mB,OAAOzD,SAAWA,EAC/E,OAAO,EAGX,OAAO,EAGT5P,QAAQu4B,EAAwBlnB,EAAYyoB,GAC1C,GAAIx5B,KAAK45B,aAAa7oB,GACpB,OAEF,MAAM2oB,EAAO15B,KAAK25B,cAAcH,GAC5BE,GACFA,EAAKn4B,IAAI,IAAIgT,EAAA1C,mBAAmB6nB,EAAK74B,KAAKg0B,QAASoD,EAAOlnB,IAI9DrR,aAAaqR,GACX,IAAK,IAAIlU,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM68B,EAAO15B,KAAKe,SAASrD,IAAIb,GAC/B,GAAI68B,EAAK3mB,QAAU2mB,EAAK3mB,kBAAkBwB,EAAA1C,oBAAsBd,EAAKmB,YAAYwnB,EAAK3mB,OAAOjB,cAC3F,OAAO,EAGX,OAAO,EAGTpS,eACE,IAAKM,KAAKc,IACR,OAGF,MAAMg4B,EAAa94B,KAAKc,IAAIoN,SAAS8E,eACrC,GAAK8lB,EAAL,CAIA,IAAK,IAAIj8B,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAChC6E,EAAMb,KAAKlB,EAAIK,KAAKa,KAAKlB,EAAI9C,GAAKi8B,EAAWj5B,MApE3B,GAqElB6B,EAAMb,KAAKjB,EAAII,KAAKa,KAAKjB,EACzB8B,EAAMb,KAAKhB,MAAQi5B,EAAWj5B,MAC9B6B,EAAMb,KAAKf,OAASg5B,EAAWh5B,OAGjCE,KAAK+B,gBAGCrC,YAAY85B,GAClB,GAAIA,EAEF,IAAK,IAAI38B,EAAImD,KAAKe,SAASI,OAAS,EAAGtE,GAAK,EAAGA,IAAK,CAClD,MAAM68B,EAAO15B,KAAKe,SAASrD,IAAIb,GAC/B,IAAK68B,EAAK3mB,OACR,OAAO2mB,OAKX,IAAK,IAAI78B,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM68B,EAAO15B,KAAKe,SAASrD,IAAIb,GAC/B,IAAK68B,EAAK3mB,OACR,OAAO2mB,KAxFJJ,EAAW54B,EAAA,CADvBgsB,EAAA5tB,aAAa,gBACDw6B,GAAAj9B,EAAAi9B,8bCdb,MAAAxrB,EAAAnR,EAAA,GAEA8X,EAAA9X,EAAA,GAGA+3B,EAAA/3B,EAAA,IACAm6B,EAAAn6B,EAAA,GACA6X,EAAA7X,EAAA,GACA+vB,EAAA/vB,EAAA,GAMA,IAAak9B,EAAb,cAAmC/C,EAAA9oB,OAKjCtO,YAAYmB,EAAYgS,EAAqBmlB,EAAkBha,GAC7Dje,MAAMc,GACNb,KAAK6S,SAAWA,EAChB7S,KAAKg4B,SAAWA,EAChBh4B,KAAKge,QAAUA,EACfhe,KAAKiB,OAAQ,EAEb+c,EAAQka,YAAY,CAACppB,MAAO,CAACqpB,EAAG7oB,IAAWtP,KAAKo4B,QAAQ9oB,GAASN,SAAU,CAACmpB,EAAG7oB,IAAWtP,KAAKq4B,WAAW/oB,KAE1G,IAAK,IAAIzS,EAAI,EAAGA,EAAIm7B,EAAUn7B,IAE5BmD,KAAKuB,IAAI,IAAImzB,EAAA5hB,WAAW,IAAI2B,EAAAjV,KAAK,EAAG,EAAG,GAAI,IAAKsO,EAAAzL,KAAK0C,KAAOlI,IAIxD6C,QAAQ4P,GACd,MAAMmpB,EAAWz4B,KAAK04B,kBAClBD,GACFA,EAASl3B,IAAI,IAAIiT,EAAApF,aAAaqpB,EAAS53B,KAAKg0B,QAASvlB,IAIjD5P,WAAW4P,GACjB,IAAK,IAAIzS,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM87B,EAAa34B,KAAKe,SAASrD,IAAIb,GAC/BkW,EAAS4lB,EAAW5lB,OACtBA,GAAUA,aAAkByB,EAAApF,cAC1B2D,EAAOzD,SAAWA,GACpBqpB,EAAWn3B,OAAOuR,IAMlBrT,kBACN,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAKe,SAASI,OAAQtE,IAAK,CAC7C,MAAM87B,EAAa34B,KAAKe,SAASrD,IAAIb,GACrC,IAAK87B,EAAW5lB,OACd,OAAO4lB,GAMbj5B,eAGE,GAFAK,MAAMiC,gBAEDhC,KAAKc,MAAQd,KAAKc,IAAIoN,SAAS8E,eAClC,OAIF,MAAM6lB,EAAgB74B,KAAKa,KACrBi4B,EAAa94B,KAAKc,IAAIoN,SAAS8E,eACrC,IAAIrT,EAAIk5B,EAAcl5B,EA/DX,EAgEPC,EAAIi5B,EAAcj5B,EAhEX,EAkEX,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAK6S,SAAS1R,OAAQtE,IAAK,CAC7C,MAAMm6B,EAAMh3B,KAAK6S,SAAShW,GAC1BmD,KAAKc,IAAIsN,IAAIqH,WAAWuhB,EAAI1hB,KAAM3V,EAAGC,EAAGo3B,EAAIzhB,OAC5C3V,GAAK,GAGP,IAAK,IAAI/C,EAAI,EAAGA,EAAImD,KAAKg4B,SAAUn7B,IAAK,CACtC,MAAM6E,EAAQ1B,KAAKe,SAASrD,IAAIb,GAChC6E,EAAMb,KAAKlB,EAAIA,EACf+B,EAAMb,KAAKjB,EAAIA,EACf8B,EAAMb,KAAKhB,MAAQi5B,EAAWj5B,MAC9B6B,EAAMb,KAAKf,OAASg5B,EAAWh5B,QAE/BH,GAAKm5B,EAAWj5B,MA9EC,GA+ETg5B,EAAc14B,GAAK24B,EAAWj5B,MAhF7B,IAiFPF,EAAIk5B,EAAcl5B,EAjFX,EAkFPC,GAAKk5B,EAAWh5B,OAjFD,GAqFnBE,KAAKa,KAAKf,OAAUF,EAtFT,EAsFuBi5B,EAAcj5B,EAChDI,KAAK+B,iBAnFI83B,EAAan5B,EAAA,CADzBgsB,EAAA5tB,aAAa,kBACD+6B,GAAAx9B,EAAAw9B,gcCdb,MAAApc,EAAA9gB,EAAA,IAKA,IAAam9B,EAAb,cAA0Brc,EAAArK,OAYxB1T,YAAYa,GACV,OAAOP,KAAK5C,OAASmD,EAAMnD,KAG7BsC,OAAOsR,GAGL,OAFAA,EAAO+oB,OAAO/5B,MACdgR,EAAOukB,WAAWv1B,KAAKL,EAAGK,KAAKJ,IACxB,EAGTF,SAASs6B,IAETt6B,MAAMs6B,GACJ,OAAO,EAGTt6B,qBA5BWo6B,EAAIp5B,EAAA,CAHjB/D,EAAA,GAECmC,aAAa,SACDg7B,GAAAz9B,EAAAy9B,sFCNb,MAAAG,EAAAt9B,EAAA,IACA8jB,EAAA9jB,EAAA,IACAu9B,EAAAv9B,EAAA,IACAouB,EAAApuB,EAAA,IACAoR,EAAApR,EAAA,GACAkC,EAAAlC,EAAA,IAEAgwB,EAAAhwB,EAAA,IACAiwB,EAAAjwB,EAAA,IAEAN,EAAA89B,WAAA,MAAAz6B,cACWM,KAAAo6B,UAAiB,GAE1B16B,UAAU26B,GAER,MAAO,CACLl+B,KAFW6D,KAAKs6B,gBAAgBD,GAGhCE,KAAQv6B,KAAKo6B,WAIjB16B,gBAAgB26B,GACd,GAAIA,QACF,OAAOA,EAGT,MAAMG,SAAiBH,EACvB,GAAgB,YAAZG,GAAqC,WAAZA,GAAoC,WAAZA,EACnD,OAAOH,EAGT,IAAKA,EAAII,YACP,MAAM,IAAIhZ,MAAM,sCAGlB,GAAI4Y,aAAeH,EAAA3Y,KACjB8Y,aAAetP,EAAApW,KACf0lB,aAAetsB,EAAAnN,OACfy5B,aAAe5Z,EAAAiC,WACf2X,aAAe1N,EAAA7W,SACfukB,aAAezN,EAAAtT,iBACf+gB,aAAeK,SACf,OAGF,GAAIL,aAAepkB,MACjB,OAAOjW,KAAK26B,eAAeN,GAG7B,MAAMl7B,EAAWN,EAAAwhB,qBAAqBga,EAAII,aACpCp7B,EAAYF,EAASE,UACrBu7B,GAAWz7B,EAASG,UACpByzB,EAAc,GAEpB,GAAI1zB,GAAau7B,EAAS,CACxB,QAAuBppB,IAAnB6oB,EAAa,QACf,MAAO,CACLQ,YAAex7B,EACfy7B,QAAWT,EAAa,SAI5B,IAAIU,EAAW/6B,KAAKo6B,UAAU/6B,GACzB07B,IACHA,EAAW,GACX/6B,KAAKo6B,UAAU/6B,GAAa07B,GAE9BV,EAAa,QAAIU,EAAS55B,OAC1B45B,EAASnsB,KAAKmkB,GAGhB,MAAMiI,EAAaz9B,OAAO09B,oBAAoBZ,GAC9C,IAAIa,EAAgB,EAEpB,IAAK,IAAIr+B,EAAI,EAAGA,EAAIm+B,EAAW75B,OAAQtE,IAAK,CAC1C,MAAMuB,EAAM48B,EAAWn+B,GACjBiB,EAASu8B,EAAYj8B,GAE3B,GAAY,YAARA,EACF,SAGF,GAAIi8B,aAAeJ,EAAAnN,OACL,YAAR1uB,GAA6B,mBAARA,GAAoC,eAARA,GACnD,SAIJ,MAAM+8B,EAAkBn7B,KAAKs6B,gBAAgBx8B,QACrB0T,IAApB2pB,IAIJpI,EAAO30B,GAAO+8B,EACdD,KAGF,OAAsB,IAAlBA,EAKA77B,GAAau7B,EACR,CACLC,YAAex7B,EACfy7B,QAAWT,EAAa,SAGnBtH,OAXT,EAeMrzB,eAAe6R,GACrB,MAAMwhB,EAAS,GACf,IAAK,IAAIl2B,EAAI,EAAGA,EAAI0U,EAAEpQ,OAAQtE,IAC5Bk2B,EAAOnkB,KAAK5O,KAAKs6B,gBAAgB/oB,EAAE1U,KAErC,OAAOk2B,obC9GX,IAAaqI,EAAb,MAME17B,YAAYmQ,EAAcL,EAAkB6rB,GAC1Cr7B,KAAK6P,MAAQA,EACb7P,KAAKwP,QAAUA,EACfxP,KAAKq7B,KAAOA,GAAQ,EACpBr7B,KAAK4P,SAAW,EAGlBlQ,IAAIuV,GACF,QAAIjV,KAAK4P,SAAW,KAKpB5P,KAAK6P,MAAM8P,KAAK3f,KAAKwP,QAASyF,EAAQ,KACpCjV,KAAK4P,SAAW5P,KAAKwP,QAAQI,YAGxB,KAvBEwrB,EAAM16B,EAAA,CAHnB/D,EAAA,GAECmC,aAAa,WACDs8B,GAAA/+B,EAAA++B","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","import { createSerializeMetadata } from \"./serializemetadata\";\n\nexport interface SerializableOptions {\n  valueType?: boolean;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n\nexport function Serializable(name: string, options?: SerializableOptions) {\n  return function (ctor: Function) {\n    if (name === 'Actor') {\n      console.log('wtf actor serializable');\n    }\n\n    const metadata = createSerializeMetadata(ctor);\n    metadata.className = name;\n\n    if (options) {\n      metadata.valueType = !!options.valueType;\n    }\n  };\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import { Serializable } from \"./serializable\";\n\n@Serializable('Vec2', {valueType: true})\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Panel')\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('Dialog')\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\nimport { Serializable } from './serializable';\n\n@Serializable('ArrayList')\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('TalentButton')\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemButton')\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemShortcutButton')\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Button')\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ButtonSlot')\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import { Actor } from './actor';\nimport { Entity } from './entity';\nimport { Message } from './message';\nimport { Sprite } from './sprite';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity | TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\nimport { Serializable } from './serializable';\n\n@Serializable('Entity')\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileMap.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileMap.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\nimport { Serializable } from './serializable';\n\n@Serializable('GUI')\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n\n  draw(app: App, pos: Vec2) {\n    app.drawString(this.text, pos.x, pos.y, this.color, pos);\n  }\n}\n","import { TileMapCell } from \"./tilemapcell\";\nimport { Rect } from \"../rect\";\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return 1 + tileY * 64 + tileX;\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  // readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly tileSize: Rect;\n  readonly grid: TileMapCell[][];\n  // readonly layers: TileMapLayer[];\n  readonly layerImageData: Uint8Array[];\n  tileWidth: number;\n  tileHeight: number;\n  dirty: boolean;\n\n  // private readonly quadVertBuffer: WebGLBuffer;\n  // private readonly tilemapShader: WebGLShader;\n  // private readonly positionAttribute: number;\n  // private readonly textureAttribute: number;\n  // private readonly viewportSizeUniform: WebGLUniformLocation;\n  // private readonly viewOffsetUniform: WebGLUniformLocation;\n  // private readonly mapSizeUniform: WebGLUniformLocation;\n  // private readonly tileSizeUniform: WebGLUniformLocation;\n  // private readonly animFrameUniform: WebGLUniformLocation;\n  // private readonly tileSamplerUniform: WebGLUniformLocation;\n  // private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  originX: number;\n  originY: number;\n  visibleRect: Rect;\n  prevVisibleRect: Rect;\n\n  constructor(width: number, height: number, layerCount: number, tileSize: Rect) {\n    // this.gl = gl;\n    console.log('create tilemap', width, height);\n    this.width = width;\n    this.height = height;\n    this.tileSize = tileSize;\n    this.grid = new Array(height);\n    this.layerImageData = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      //this.layers[i] = new TileMapLayer(width, height);\n      this.layerImageData[i] = new Uint8Array(4 * width * height);\n    }\n\n    // const quadVerts = [\n    //   // x   y   u  v\n    //   -1, -1, 0, 1,\n    //   1, -1, 1, 1,\n    //   1, 1, 1, 0,\n    //   -1, -1, 0, 1,\n    //   1, 1, 1, 0,\n    //   -1, 1, 0, 0\n    // ];\n\n    // this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    // gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    // gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    // this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    // this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    // this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    // this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    // this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    // this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    // this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    // this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    // this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    // this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    // for (let i = 0; i < this.layers.length; i++) {\n    //   this.layers[i].initGl(gl);\n    // }\n  }\n\n  clear() {\n    // for (let i = 0; i < this.layers.length; i++) {\n    //   this.layers[i].clear();\n    // }\n\n    for (let i = 0; i < this.layerImageData.length; i++) {\n      const imageData = this.layerImageData[i];\n\n      let j = 0;\n      while (j < imageData.length) {\n        imageData[j++] = 255;\n        imageData[j++] = 255;\n        imageData[j++] = 0;\n        imageData[j++] = 0;\n      }\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    // const layer = this.layers[layerIndex];\n    const imageData = this.layerImageData[layerIndex];\n    const ti = 4 * (y * this.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    imageData[ti + 0] = tx;\n    imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(tx: number, ty: number, layerIndex: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return false;\n    }\n\n    // const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * this.width + tx);\n    return this.layerImageData[layerIndex][ti + 2] !== 0;\n  }\n\n  setAnimated(tx: number, ty: number, layerIndex: number, animated: boolean) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return;\n    }\n\n    // const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * this.width + tx);\n    this.layerImageData[layerIndex][ti + 2] = animated ? 1 : 0;\n  }\n\n  // draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n  //   const gl = this.gl;\n\n  //   gl.enable(gl.BLEND);\n  //   gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n  //   gl.useProgram(this.tilemapShader);\n\n  //   gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n  //   gl.enableVertexAttribArray(this.positionAttribute);\n  //   gl.enableVertexAttribArray(this.textureAttribute);\n  //   gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n  //   gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n  //   gl.uniform2f(this.viewOffsetUniform, x, y);\n  //   gl.uniform2f(this.viewportSizeUniform, width, height);\n  //   gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n  //   gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n  //   gl.activeTexture(gl.TEXTURE0);\n  //   gl.uniform1i(this.spriteSamplerUniform, 0);\n\n  //   gl.activeTexture(gl.TEXTURE1);\n  //   gl.uniform1i(this.tileSamplerUniform, 1);\n\n  //   const minX = Math.min(this.visibleRect.x1, this.prevVisibleRect.x1);\n  //   const minY = Math.min(this.visibleRect.y1, this.prevVisibleRect.y1);\n  //   const maxX = Math.max(this.visibleRect.x2, this.prevVisibleRect.x2);\n  //   const maxY = Math.max(this.visibleRect.y2, this.prevVisibleRect.y2);\n\n  //   // Draw each layer of the map\n  //   for (let i = 0; i < this.layers.length; i++) {\n  //     const layer = this.layers[i];\n  //     gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n  //     gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n\n  //     if (this.dirty) {\n  //       for (let y = minY; y < maxY; y++) {\n  //         for (let x = minX; x < maxX; x++) {\n  //           const alpha = this.isVisible(x, y) ? 255 : this.isSeen(x, y) ? 144 : 0;\n  //           layer.setAlpha(x, y, alpha);\n  //         }\n  //       }\n  //       layer.updateGl(gl);\n  //     }\n\n  //     gl.drawArrays(gl.TRIANGLES, 0, 6);\n  //   }\n  //   this.dirty = false;\n  // }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n      y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n        processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n        x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n      x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n        processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n        y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { TileMapCell } from \"./tilemapcell\";\nimport { Rect } from \"../rect\";\nimport { initShaderProgram } from \"../glutils\";\nimport { TileMap } from \"./tilemap\";\n\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n  'attribute vec2 position;' +\n  'attribute vec2 texture;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 viewOffset;' +\n  'uniform vec2 viewportSize;' +\n  'uniform vec2 tileSize;' +\n  'uniform vec2 mapSize;' +\n\n  'void main(void) {' +\n  '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n  '   texCoord = pixelCoord / mapSize / tileSize;' +\n  '   gl_Position = vec4(position, 0.0, 1.0);' +\n  '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 tileSize;' +\n  'uniform float animFrame;' +\n  'uniform sampler2D tiles;' +\n  'uniform sampler2D sprites;' +\n\n  'void main(void) {' +\n  '   vec4 tile = texture2D(tiles, texCoord);' +\n  '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n  '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n  '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n  '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n  '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n  '   if (gl_FragColor.a == 0.0) discard;' +\n  '   gl_FragColor.a *= tile.a;' +\n  '}';\n\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMapRenderer {\n  readonly gl: WebGLRenderingContext;\n  readonly tileMap: TileMap;\n  //   readonly width: number;\n  //   readonly height: number;\n  //   readonly grid: TileMapCell[][];\n  //   readonly layers: TileMapLayer[];\n  //   tileWidth: number;\n  //   tileHeight: number;\n  //   dirty: boolean;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  private readonly layerTextures: WebGLTexture[];\n\n  //   // Field-of-view state\n  //   private originX: number;\n  //   private originY: number;\n  //   private visibleRect: Rect;\n  //   private prevVisibleRect: Rect;\n\n  constructor(gl: WebGLRenderingContext, tileMap: TileMap) {\n    this.gl = gl;\n    this.tileMap = tileMap;\n    // this.width = width;\n    // this.height = height;\n    // this.grid = new Array(height);\n    // this.layers = new Array(layerCount);\n    // this.tileWidth = 16;\n    // this.tileHeight = 16;\n    // this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    // this.originX = 0;\n    // this.originY = 0;\n    // this.visibleRect = new Rect(0, 0, width, height);\n    // this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    // for (let y = 0; y < height; y++) {\n    //   this.grid[y] = new Array(width);\n    //   for (let x = 0; x < width; x++) {\n    //     this.grid[y][x] = new TileMapCell(x, y, 0);\n    //   }\n    // }\n\n    // for (let i = 0; i < layerCount; i++) {\n    //   this.layers[i] = new TileMapLayer(width, height);\n    // }\n\n    const quadVerts = [\n      // x   y   u  v\n      -1, -1, 0, 1,\n      1, -1, 1, 1,\n      1, 1, 1, 0,\n      -1, -1, 0, 1,\n      1, 1, 1, 0,\n      -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    // for (let i = 0; i < this.layers.length; i++) {\n    //     this.layers[i].initGl(gl);\n    // }\n\n    this.layerTextures = new Array(tileMap.layerImageData.length);\n\n    for (let i = 0; i < tileMap.layerImageData.length; i++) {\n      const texture = gl.createTexture() as WebGLTexture;\n      const imageData = tileMap.layerImageData[i];\n\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, tileMap.width, tileMap.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      // MUST be filtered with NEAREST or tile lookup fails\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      this.layerTextures[i] = texture;\n    }\n  }\n\n  // clear() {\n  //   for (let i = 0; i < this.layers.length; i++) {\n  //     this.layers[i].clear();\n  //   }\n  // }\n\n  // setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n  //   if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n  //     return;\n  //   }\n\n  //   if (layerIndex === 0) {\n  //     this.grid[y][x].tile = tile;\n  //     this.grid[y][x].blocked = !!blocked;\n  //     this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n  //   }\n\n  //   const layer = this.layers[layerIndex];\n  //   const ti = 4 * (y * layer.width + x);\n  //   const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n  //   const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n  //   layer.imageData[ti + 0] = tx;\n  //   layer.imageData[ti + 1] = ty;\n  // }\n\n  // getCell(tx: number, ty: number) {\n  //   if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n  //     return null;\n  //   }\n  //   return this.grid[ty][tx];\n  // }\n\n  // getTile(tx: number, ty: number) {\n  //   const cell = this.getCell(tx, ty);\n  //   return cell ? cell.tile : 0;\n  // }\n\n  // isBlocked(tx: number, ty: number) {\n  //   const cell = this.getCell(tx, ty);\n  //   return !cell || cell.blocked;\n  // }\n\n  // isVisible(x: number, y: number) {\n  //   if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n  //     return false;\n  //   }\n  //   return this.grid[y][x].visible;\n  // }\n\n  // isSeen(tx: number, ty: number) {\n  //   const cell = this.getCell(tx, ty);\n  //   return cell && cell.seen;\n  // }\n\n  // setSeen(tx: number, ty: number, seen: boolean) {\n  //   const cell = this.getCell(tx, ty);\n  //   if (cell) {\n  //     cell.seen = seen;\n  //   }\n  // }\n\n  // isAnimated(tx: number, ty: number, layerIndex: number) {\n  //   if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n  //     return false;\n  //   }\n\n  //   const layer = this.layers[layerIndex];\n  //   const ti = 4 * (ty * layer.width + tx);\n  //   return layer.imageData[ti + 2] !== 0;\n  // }\n\n  // setAnimated(tx: number, ty: number, layerIndex: number, animated: boolean) {\n  //   if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n  //     return;\n  //   }\n\n  //   const layer = this.layers[layerIndex];\n  //   const ti = 4 * (ty * layer.width + tx);\n  //   layer.imageData[ti + 2] = animated ? 1 : 0;\n  // }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n    const tileMap = this.tileMap;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, tileMap.tileWidth, tileMap.tileHeight);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(tileMap.visibleRect.x1, tileMap.prevVisibleRect.x1);\n    const minY = Math.min(tileMap.visibleRect.y1, tileMap.prevVisibleRect.y1);\n    const maxX = Math.max(tileMap.visibleRect.x2, tileMap.prevVisibleRect.x2);\n    const maxY = Math.max(tileMap.visibleRect.y2, tileMap.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < tileMap.layerImageData.length; i++) {\n      // const layer = this.layers[i];\n      const texture = this.layerTextures[i];\n      // gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.uniform2f(this.mapSizeUniform, tileMap.width, tileMap.height);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      if (tileMap.dirty) {\n        const imageData = tileMap.layerImageData[i];\n\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = tileMap.isVisible(x, y) ? 255 : tileMap.isSeen(x, y) ? 144 : 0;\n            // layer.setAlpha(x, y, alpha);\n            imageData[4 * (y * tileMap.width + x) + 3] = alpha;\n          }\n        }\n        // layer.updateGl(gl);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, tileMap.width, tileMap.height, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    tileMap.dirty = false;\n  }\n\n  // resetFov() {\n  //   for (let y = 0; y < this.height; y++) {\n  //     for (let x = 0; x < this.width; x++) {\n  //       this.grid[y][x].seen = false;\n  //       this.grid[y][x].visible = false;\n  //     }\n  //   }\n  // }\n\n  // computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n  //   this.originX = originX;\n  //   this.originY = originY;\n  //   this.prevVisibleRect.copy(this.visibleRect);\n\n  //   const dx = radius;\n  //   const dy = vradius || radius;\n  //   this.visibleRect.x = Math.max(0, originX - dx);\n  //   this.visibleRect.y = Math.max(0, originY - dy);\n  //   this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n  //   this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n  //   for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n  //     for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n  //       this.grid[y][x].visible = false;\n  //     }\n  //   }\n\n  //   this.grid[originY][originX].visible = true;\n\n  //   this.computeOctantY(1, 1);\n  //   this.computeOctantX(1, 1);\n  //   this.computeOctantY(1, -1);\n  //   this.computeOctantX(1, -1);\n  //   this.computeOctantY(-1, 1);\n  //   this.computeOctantX(-1, 1);\n  //   this.computeOctantY(-1, -1);\n  //   this.computeOctantX(-1, -1);\n  //   this.dirty = true;\n  // }\n\n  // /**\n  //  * Compute the FOV in an octant adjacent to the Y axis\n  //  */\n  // private computeOctantY(deltaX: number, deltaY: number) {\n  //   const startSlopes: number[] = [];\n  //   const endSlopes: number[] = [];\n  //   let iteration = 1;\n  //   let totalObstacles = 0;\n  //   let obstaclesInLastLine = 0;\n  //   let minSlope = 0;\n  //   let x;\n  //   let y;\n  //   let halfSlope;\n  //   let processedCell;\n  //   let visible;\n  //   let extended;\n  //   let centreSlope;\n  //   let startSlope;\n  //   let endSlope;\n  //   let previousEndSlope;\n\n  //   for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n  //     y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n  //     halfSlope = 0.5 / iteration;\n  //     previousEndSlope = -1;\n  //     for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n  //       processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n  //       x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n  //       visible = true;\n  //       extended = false;\n  //       centreSlope = processedCell / iteration;\n  //       startSlope = previousEndSlope;\n  //       endSlope = centreSlope + halfSlope;\n\n  //       if (obstaclesInLastLine > 0) {\n  //         if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n  //           !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n  //           visible = false;\n  //         } else {\n  //           for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n  //             if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n  //               if (!this.grid[y][x].blockedSight) {\n  //                 if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n  //                   visible = false;\n  //                   break;\n  //                 }\n  //               } else {\n  //                 if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n  //                   visible = false;\n  //                   break;\n  //                 } else {\n  //                   startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n  //                   endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n  //                   extended = true;\n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       if (visible) {\n  //         this.grid[y][x].visible = true;\n  //         this.grid[y][x].seen = true;\n  //         if (this.grid[y][x].blockedSight) {\n  //           if (minSlope >= startSlope) {\n  //             minSlope = endSlope;\n  //           } else if (!extended) {\n  //             startSlopes[totalObstacles] = startSlope;\n  //             endSlopes[totalObstacles++] = endSlope;\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n  // /**\n  //  * Compute the FOV in an octant adjacent to the X axis\n  //  */\n  // private computeOctantX(deltaX: number, deltaY: number) {\n  //   const startSlopes: number[] = [];\n  //   const endSlopes: number[] = [];\n  //   let iteration = 1;\n  //   let totalObstacles = 0;\n  //   let obstaclesInLastLine = 0;\n  //   let minSlope = 0;\n  //   let x;\n  //   let y;\n  //   let halfSlope;\n  //   let processedCell;\n  //   let visible;\n  //   let extended;\n  //   let centreSlope;\n  //   let startSlope;\n  //   let endSlope;\n  //   let previousEndSlope;\n\n  //   for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n  //     x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n  //     halfSlope = 0.5 / iteration;\n  //     previousEndSlope = -1;\n  //     for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n  //       processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n  //       y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n  //       visible = true;\n  //       extended = false;\n  //       centreSlope = processedCell / iteration;\n  //       startSlope = previousEndSlope;\n  //       endSlope = centreSlope + halfSlope;\n\n  //       if (obstaclesInLastLine > 0) {\n  //         if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n  //           !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n  //           visible = false;\n  //         } else {\n  //           for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n  //             if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n  //               if (!this.grid[y][x].blockedSight) {\n  //                 if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n  //                   visible = false;\n  //                   break;\n  //                 }\n  //               } else {\n  //                 if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n  //                   visible = false;\n  //                   break;\n  //                 } else {\n  //                   startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n  //                   endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n  //                   extended = true;\n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       if (visible) {\n  //         this.grid[y][x].visible = true;\n  //         this.grid[y][x].seen = true;\n  //         if (this.grid[y][x].blockedSight) {\n  //           if (minSlope >= startSlope) {\n  //             minSlope = endSlope;\n  //           } else if (!extended) {\n  //             startSlopes[totalObstacles] = startSlope;\n  //             endSlopes[totalObstacles++] = endSlope;\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n}\n","import { Ability, TargetType } from './ability';\nimport { AI } from './ai/ai';\nimport { BumpAnimation } from './animations/bumpanimation';\nimport { FloatingTextAnimation } from './animations/floatingtextanimation';\nimport { SlideAnimation } from './animations/slideanimation';\nimport { ArrayList } from './arraylist';\nimport { Color } from './color';\nimport { Colors } from './colors';\nimport { Entity } from './entity';\nimport { Game } from './game';\nimport { Item } from './item';\nimport { Sprite } from './sprite';\nimport { Talent } from './talent';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\n@Serializable('Actor')\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap && this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileMap.tileSize.width;\n    this.offset.y = -dy * this.game.tileMap.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileMap.tileSize.width / count;\n    const ySpeed = this.game.tileMap.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity | TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) { }\n  onDeath(attacker: Actor) { }\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nconst METADATA_KEY = '__wgltMetadata';\n\nexport function createSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = new SerializeMetadata();\n  ctor[METADATA_KEY] = metadata;\n  return metadata;\n}\n\nexport function getSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = ctor[METADATA_KEY];\n  return metadata || createSerializeMetadata(ctor);\n}\n\nexport class SerializeMetadata {\n  className: string = 'Object';\n  valueType: boolean = false;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x: number, y: number, color?: Color, out?: Vec2) {\n    this.renderSet.drawString(str, x, y, color, out);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\nimport { Vec2 } from './vec2';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color, out?: Vec2) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let x = x0;\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      if (i > 0) {\n        x = x0;\n        y += height;\n      }\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n    }\n    if (out) {\n      out.x = x;\n      out.y = y;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('DialogRenderer')\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapRenderer } from './tilemap/tilemaprenderer';\nimport { Message } from './message';\n\nconst DEFAULT_MAP_SIZE = new Rect(0, 0, 256, 256);\nconst DEFAULT_MAP_LAYERS = 1;\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n@Serializable('Game')\nexport class Game extends AppState {\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap: TileMap;\n  tileMapRenderer: TileMapRenderer;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n\n    const mapSize = options.mapSize || DEFAULT_MAP_SIZE;\n    const mapLayers = options.mapLayers || DEFAULT_MAP_LAYERS;\n    const tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.tileMap = new TileMap(mapSize.width, mapSize.height, mapLayers, tileSize);\n    this.tileMapRenderer = new TileMapRenderer(app.gl, this.tileMap);\n  }\n\n  log(message: string|Message, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(message, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMapRenderer.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileMap.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileMap.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && this.tileMap.isVisible(entity.x, entity.y)) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileMap.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileMap.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n      const target = this.tileMap.getCell(tx, ty);\n      if (target && target !== this.targetTile) {\n        this.targetTile = target;\n        this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n        this.pathIndex = 0;\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    const tileWidth = map.tileSize.width;\n    const tileHeight = map.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= this.viewport.width) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= this.viewport.height) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","\nimport { Vec2 } from './vec2';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell | null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\n@Serializable('Sprite')\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import { Vec2 } from \"../vec2\";\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell | null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\n@Serializable('ShortcutButtonSlot')\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './compoundmessage';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './serializable';\nexport * from './serialize';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap/tilemap';\nexport * from './tilemap/tilemapcell';\nexport * from './tilemap/tilemaprenderer';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\nimport { Message } from './message';\n\nexport class CompoundMessage extends Message {\n  readonly messages: Message[];\n\n  constructor(...messages: Message[]) {\n    super('', 0);\n    this.messages = messages;\n  }\n\n  draw(app: App, pos: Vec2) {\n    // app.drawString(this.text, pos.x, pos.y, this.color, pos);\n    for (let i = 0; i < this.messages.length; i++) {\n      this.messages[i].draw(app, pos);\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\n@Serializable('TooltipDialog')\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\n\n@Serializable('ComplexSelectDialog')\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\n@Serializable('DefaultSelectOptionRenderer')\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ImagePanel')\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('ItemContainerDialog')\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemContainerButtonSlot')\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\nimport { Vec2 } from '../vec2';\n\n@Serializable('MessageLog')\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(message: string|Message|Panel, color?: Color) {\n    if (message instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    if (message instanceof Message) {\n      this.messages.push(message);\n    } else {\n      this.messages.push(new Message(message, color || Colors.WHITE));\n    }\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const pos = new Vec2(this.rect.x, this.rect.y);\n\n    if (pos.y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + pos.y + this.rect.height;\n      pos.y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      msg.draw(this.gui.app, pos);\n      pos.x = 0;\n      pos.y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessagePanel')\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\n@Serializable('SelectDialog')\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_SPACING = 2;\n\n@Serializable('ShortcutBar')\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('TalentsDialog')\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport { Serializable } from './serializable';\n\n@Serializable('Item')\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","import { Game } from \"./game\";\nimport { RenderSet } from \"./renderset\";\nimport { App } from \"./app\";\nimport { GUI } from \"./gui\";\nimport { Panel } from \"./gui/panel\";\nimport { getSerializeMetadata } from \"./serializemetadata\";\nimport { Actor } from \"./actor\";\nimport { TileMap } from \"./tilemap/tilemap\";\nimport { TileMapRenderer } from \"./tilemap/tilemaprenderer\";\n\nexport class Serializer {\n  readonly typeLists: any = {};\n\n  serialize(obj: any): any {\n    const root = this.serializeObject(obj);\n    return {\n      'root': root,\n      'refs': this.typeLists\n    }\n  }\n\n  serializeObject(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    const objType = typeof obj;\n    if (objType === 'boolean' || objType === 'number' || objType === 'string') {\n      return obj;\n    }\n\n    if (!obj.constructor) {\n      throw new Error('Object does not have a constructor');\n    }\n\n    if (obj instanceof App ||\n      obj instanceof GUI ||\n      obj instanceof Panel ||\n      obj instanceof RenderSet ||\n      obj instanceof TileMap ||\n      obj instanceof TileMapRenderer ||\n      obj instanceof Function) {\n      return undefined;\n    }\n\n    if (obj instanceof Array) {\n      return this.serializeArray(obj);\n    }\n\n    const metadata = getSerializeMetadata(obj.constructor);\n    const className = metadata.className;\n    const refType = !metadata.valueType;\n    const result: any = {};\n\n    if (className && refType) {\n      if (obj['__index'] !== undefined) {\n        return {\n          '__className': className,\n          '__index': obj['__index']\n        }\n      }\n\n      let typeList = this.typeLists[className];\n      if (!typeList) {\n        typeList = [];\n        this.typeLists[className] = typeList;\n      }\n      obj['__index'] = typeList.length;\n      typeList.push(result);\n    }\n\n    const properties = Object.getOwnPropertyNames(obj);\n    let propertyCount = 0;\n\n    for (let i = 0; i < properties.length; i++) {\n      const key = properties[i];\n      const value = (obj as any)[key];\n\n      if (key === '__index') {\n        continue;\n      }\n\n      if (obj instanceof Game) {\n        if (key === 'tooltip' || key === 'tooltipElement' || key === 'messageLog') {\n          continue;\n        }\n      }\n\n      const serializedValue = this.serializeObject(value);\n      if (serializedValue === undefined) {\n        continue;\n      }\n\n      result[key] = serializedValue;\n      propertyCount++;\n    }\n\n    if (propertyCount === 0) {\n      // Ignore objects without any properties\n      return undefined;\n    }\n\n    if (className && refType) {\n      return {\n        '__className': className,\n        '__index': obj['__index']\n      };\n    } else {\n      return result;\n    }\n  }\n\n  private serializeArray(a: Array<any>) {\n    const result = [];\n    for (let i = 0; i < a.length; i++) {\n      result.push(this.serializeObject(a[i]));\n    }\n    return result;\n  }\n}\n\n","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap/tilemapcell';\nimport { Serializable } from './serializable';\n\n@Serializable('Talent')\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n"],"sourceRoot":""}