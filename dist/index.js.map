{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","Effect","countdown","blocking","game","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Panel","gui","rect","modal","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Input","down","downCount","upCount","AI","entity","activatedCount","panel_1","Dialog","title","renderer","draw","app","panels","index","indexOf","splice","input_1","KEY_COUNT","Keyboard","el","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prevX","prevY","startX","startY","dx","dy","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","length","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","Math","floor","actualHeight","update","hypot","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","src","gui_1","AppState","GUI","handleInput","dialogrenderer_1","DialogRenderer","panel","push","drawContents","baseRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","drawImage","undefined","g","b","a","fromHsv","h","v","f","q","effect_1","DURATION","BumpEffect","target","offsetX","offsetY","colors_1","FloatingTextEffect","str","pixelX","pixelY","color","frame","viewport","min","drawCenteredString","SlideEffect","count","tileSize","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","prev","reverse","computePath","map","dest","maxDist","grid","abs","clearDijkstra","sourceCell","u","alt","blocked","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","RNG","seed","nextInt","start","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Message","text","__export","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","mouse","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","round","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","offset","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","bumpeffect_1","floatingtexteffect_1","slideeffect_1","xarray_1","Entity","sprite","blocks","health","maxHealth","actionPoints","inventory","XArray","canPickup","canAttack","destX","destY","tileMap","isBlocked","xSpeed","ySpeed","effects","targetX","targetY","distance","move","entities","onBump","onAttack","takeDamage","damage","toString","onDamage","onDeath","item","onPickup","onUse","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","turnCount","currEntity","player","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","isTargeting","targetSprite","isVisible","blockingCount","targetCallback","callback","cancelTargeting","isKeyDown","scrollSpeed","scrollDx","scrollDy","isKeyPressed","ScrollEffect","isClicked","endTargeting","targetEntity","getEnemyAt","targetTile","path","attack","getCell","nextStep","right","up","wait","tryMoveOrAttack","ai","recomputeFov","sort","computeFov","ai_1","BasicMonster","monster","distanceTo","moveToward","rng_1","ConfusedMonster","rng","numTurns","oldAi","ProjectileEffect","position","velocity","duration","add","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","point","option","selected","drawOption","onSelect","onCancel","lineHeight","endY","ImagePanel","srcRect","destRect","dst","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","String","fromCharCode","close","tilemapVS","tilemapFS","TileMapCell","tile","visible","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {App} from '../app';\nimport {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","import {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {GUI} from '../gui';\nimport {Rect} from '../rect';\n\nexport abstract class Panel {\n  readonly gui: GUI;\n  readonly rect: Rect;\n  readonly modal: boolean;\n\n  constructor(gui: GUI, rect: Rect, modal?: boolean) {\n    this.gui = gui;\n    this.rect = rect;\n    this.modal = !!modal;\n  }\n\n  drawContents(): void {}\n\n  handleInput(): boolean {\n    return false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Entity} from '../entity';\n\nexport abstract class AI {\n  readonly entity: Entity;\n  activatedCount: number;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","import {GUI} from '../gui';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n\n  constructor(gui: GUI, rect: Rect, title: string) {\n    super(gui, rect, true);\n    this.title = title;\n  }\n\n  drawContents() {\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    const panels = this.gui.panels;\n    const index = panels.indexOf(this);\n    if (index >= 0) {\n      panels.splice(index, 1);\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  private prevX: number;\n  private prevY: number;\n  startX: number;\n  startY: number;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prevX = 0;\n    this.prevY = 0;\n    this.startX = 0;\n    this.startY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n      if (!this.down) {\n        this.down = true;\n        this.prevX = this.x;\n        this.prevY = this.y;\n        this.startX = this.x;\n        this.startY = this.y;\n        this.dx = 0;\n        this.dy = 0;\n      }\n    } else {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.startX = this.x;\n      this.startY = this.y;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prevX;\n    this.dy = this.y - this.prevY;\n    this.prevX = this.x;\n    this.prevY = this.y;\n  }\n\n  isClicked() {\n    return this.upCount === 1 && Math.hypot(this.x - this.startX, this.y - this.startY) < 16;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\n\nexport class GUI {\n  readonly app: App;\n  readonly panels: Panel[];\n  readonly renderer: DialogRenderer;\n\n  constructor(app: App) {\n    this.app = app;\n    this.panels = [];\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n  }\n\n  add(panel: Panel) {\n    this.panels.push(panel);\n  }\n\n  handleInput(): boolean {\n    for (let i = this.panels.length - 1; i >= 0; i--) {\n      const panel = this.panels[i];\n      if (panel.handleInput && panel.handleInput()) {\n        return true;\n      }\n      if (panel.modal) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  draw() {\n    for (let i = 0; i < this.panels.length; i++) {\n      this.panels[i].drawContents();\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n\n  constructor(baseRect: Rect) {\n    this.baseRect = baseRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n  }\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offsetX += this.dx;\n      this.entity.offsetY += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offsetX -= this.dx;\n      this.entity.offsetY -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offsetX += this.dx;\n      this.entity.offsetY += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offsetX / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offsetY / this.entity.game.tileSize.height;\n      this.entity.offsetX = 0;\n      this.entity.offsetY = 0;\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite {\n  private static globalAnimIndex = 0;\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './gui';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './input';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './tilemap';\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 180.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a > 0.5) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport {XArray} from './xarray';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  offsetX: number;\n  offsetY: number;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  health: number;\n  maxHealth: number;\n  actionPoints: number;\n  inventory: XArray<Entity>;\n  ai?: AI;\n  canPickup: boolean;\n  canAttack: boolean;\n  onBump?: Function;\n  onAttack?: Function;\n  onDamage?: Function;\n  onDeath?: Function;\n  onPickup?: Function;\n  onUse?: Function;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.actionPoints = 1;\n    this.inventory = new XArray<Entity>();\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offsetX;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offsetY;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.tileMap && this.game.tileMap.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.actionPoints--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    for (let i = 0; i < this.game.entities.length; i++) {\n      const other = this.game.entities[i];\n      if (this !== other && other.x === destX && other.y === destY) {\n        if (this.onBump) {\n          if (this.onBump(other)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return this.move(dx, dy);\n  }\n\n  attack(target: Entity) {\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(this, target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.actionPoints--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeDamage(damage: number) {\n    this.health -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.onDamage) {\n      this.onDamage(this);\n    }\n\n    if (this.health <= 0) {\n      this.health = 0;\n      if (this.onDeath) {\n        this.onDeath(this);\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Entity) {\n    if (item.onPickup) {\n      item.onPickup(this, item);\n    }\n    // item.container = this.player.inventory;\n    this.inventory.push(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use() {\n    if (!this.onUse) {\n      return false;\n    }\n    this.onUse(this);\n    return true;\n  }\n\n  distanceTo(other: Entity) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n}\n","\nexport class XArray<T> extends Array<T> {\n  remove(el: T) {\n    const index = this.indexOf(el);\n    if (index >= 0) {\n      this.splice(index, 1);\n    }\n  }\n}","import {App} from './app';\nimport {AppState} from './appstate';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Entity;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Entity;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity.actionPoints > 0) {\n        if (currEntity === this.player) {\n          this.handlePlayerInput();\n          break;\n        } else {\n          this.doAi(currEntity);\n        }\n      }\n      if (!this.blocked && currEntity.actionPoints <= 0) {\n        // Turn is over\n        currEntity.actionPoints = 0;\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    if (this.player) {\n      const horizontalMargin = (this.app.size.width * 0.25) | 0;\n      const verticalMargin = (this.app.size.height * 0.25) | 0;\n\n      if (this.player.pixelX - this.viewport.x < horizontalMargin) {\n        this.viewport.x = this.player.pixelX - horizontalMargin;\n      }\n\n      if (this.viewport.x + this.viewport.width - (this.player.pixelX + this.tileSize.width) < horizontalMargin) {\n        this.viewport.x = this.player.pixelX + this.tileSize.width + horizontalMargin - this.viewport.width;\n      }\n\n      if (this.player.pixelY - this.viewport.y < verticalMargin) {\n        this.viewport.y = this.player.pixelY - verticalMargin;\n      }\n\n      if (this.viewport.y + this.viewport.height - (this.player.pixelY + this.tileSize.height) < verticalMargin) {\n        this.viewport.y = this.player.pixelY + this.tileSize.height + verticalMargin - this.viewport.height;\n      }\n\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n\n    if (this.app.mouse.down) {\n      this.viewport.x -= this.app.mouse.dx;\n      this.viewport.y -= this.app.mouse.dy;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetCallback;\n  }\n\n  startTargeting(callback: Function) {\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.targetCallback) {\n      this.targetCallback(this.cursor.x, this.cursor.y);\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.app.mouse.dx !== 0 || this.app.mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + this.app.mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + this.app.mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      const scrollSpeed = 2;\n      const scrollDx = this.tileSize.width / scrollSpeed;\n      const scrollDy = this.tileSize.height / scrollSpeed;\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollSpeed));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollSpeed));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollSpeed));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollSpeed));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (this.app.mouse.isClicked()) {\n      const tx = ((this.viewport.x + this.app.mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + this.app.mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.player.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.player.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.player.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.player.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.actionPoints = 0;\n    }\n  }\n\n  private doAi(entity: Entity) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.actionPoints = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        this.entities[i].actionPoints = 1;\n      }\n    }\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!other.canAttack || other.health <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.entity;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.health > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = entity.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.entity.move(this.rng.nextRange(-1, 1), this.rng.nextRange(-1, 1));\n      this.numTurns--;\n    } else {\n      this.entity.ai = this.oldAi;\n      // addMessage('The ' + this.owner.name + ' is no longer confused!',\n      // wglt.Colors.LIGHT_RED);\n    }\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {GUI} from '../gui';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(gui: GUI, rect: Rect, title: string, options: SelectOption[]) {\n    super(gui, rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {GUI} from '../gui';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(gui: GUI, srcRect: Rect, destRect: Rect) {\n    super(gui, destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(gui: GUI, rect: Rect, maxItems?: number) {\n    super(gui, rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string, color?: Color) {\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {GUI} from '../gui';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(gui: GUI, rect: Rect, message: Message) {\n    super(gui, rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {GUI} from '../gui';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(gui: GUI, rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(gui, rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}