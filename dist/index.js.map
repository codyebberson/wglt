{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/effects/fadeineffect.ts","webpack://wglt/./src/effects/fadeouteffect.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/gui/talentshortcutbutton.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","Effect","countdown","blocking","game","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","point","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","panel_1","Button","destRect","sprite","shortcutKey","onClick","src","dst","offsetX","offsetY","draw","app","mouse","start","startDragging","isKeyPressed","isClicked","click","down","Dialog","title","closeButton","renderer","g","b","a","undefined","fromHsv","h","v","f","q","ButtonSlot","button","buttonSlotRect","drawImage","drawRightString","String","fromCharCode","button_1","ItemButton","containerItems","initialItem","stackItems","item","player","use","drawString","toString","TargetType","Entity","blocks","offset","pixelX","tileSize","pixelY","Math","hypot","viewport","bumper","elements","index","el","push","listeners","onAdd","indexOf","splice","onRemove","listener","AI","actor","activatedCount","Input","downCount","upCount","ItemShortcutButton","shortcutItem","getItem","count","countItems","TalentButton","talent","ability","cast","ability_1","colors_1","bumpeffect_1","floatingtexteffect_1","slideeffect_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","dx","dy","destX","destY","isBlocked","xSpeed","ySpeed","effects","SlideEffect","blocked","targetX","targetY","distance","move","round","target","onAttack","takeDamage","BumpEffect","heal","min","FloatingTextEffect","damage","onDeath","entities","onPickup","onUse","callback","targetType","SELF","startTargeting","attacker","effect_1","DURATION","entity","update","str","color","frame","floor","drawCenteredString","RNG","seed","state","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","abs","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","u","alt","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","__export","ai_1","BasicMonster","monster","distanceTo","moveToward","attack","rng_1","ConfusedMonster","rng","numTurns","oldAi","ai","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","FadeInEffect","duration","FadeOutEffect","ProjectileEffect","position","velocity","actor_1","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","messageLog","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","onDone","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getEnemyAt","TILE","getCell","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","targetTile","path","nextStep","right","up","wait","tryMoveOrAttack","onBump","recomputeFov","sort","computeFov","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","itembutton_1","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","buttonslot_1","ImagePanel","srcRect","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","talentbutton_1","talentshortcutbutton_1","ShortcutButtonSlot","itemButton","TalentShortcutButton","TalentsDialog","Item","user","Talent","rank","cooldown","tilemapVS","tilemapFS","TileMapCell","tile","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n  onDone?: Function;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly stackItems: XArray<Item>;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new XArray<Item>();\n    this.stackItems.add(initialItem);\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawString(this.stackItems.length.toString(), dst.x2 - 7, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  activatedCount: number;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n\n  constructor(rect: Rect, talent: Talent) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n  }\n\n  click() {\n    this.talent.actor.cast(this.talent.ability);\n  }\n}","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {XArray} from './xarray';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: XArray<Item>;\n  talents: XArray<Talent>;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new XArray<Item>();\n    this.talents = new XArray<Talent>();\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.ap--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  attack(target: Actor) {\n    if (target === this) {\n      return;\n    }\n\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.ap--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.game.effects.push(\n        new FloatingTextEffect(heal.toString(), this.pixelX + 8, this.pixelY - 4, Colors.LIGHT_GREEN));\n  }\n\n  takeDamage(damage: number) {\n    this.hp -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, callback?: Function) {\n    if (ability.targetType === TargetType.SELF) {\n      if (ability.cast(this)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  onAttack(attacker: Actor, damage: number) {}\n  onDeath() {}\n}","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/fadeineffect';\nexport * from './effects/fadeouteffect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Actor} from '../actor';\nimport {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.actor.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeInEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, 0, 32, 16, 16, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeOutEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, 0, 32, 16, 16, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Actor;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        const effect = this.effects[i];\n        if (effect.onDone) {\n          effect.onDone();\n        }\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            this.handlePlayerInput();\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (!this.blocked && currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getEnemyAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.ap = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Actor) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity instanceof Actor && entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor) {\n          entity.ap = entity.maxAp;\n        }\n      }\n    }\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!(other instanceof Actor)) {\n        continue;\n      }\n      if (other.hp <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, title: string, capacity: number, items: XArray<Item>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.items = items;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, items: XArray<Item>) {\n    super(rect);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport {TalentShortcutButton} from './talentshortcutbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      this.add(new TalentShortcutButton(this.rect.clone(), panel.talent));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof ItemShortcutButton || panel instanceof TalentShortcutButton) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentShortcutButton extends Button {\n  readonly talent: Talent;\n\n  constructor(rect: Rect, talent: Talent) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n  }\n\n  click() {\n    this.talent.actor.cast(this.talent.ability);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly capacity: number;\n  readonly talents: XArray<Talent>;\n\n  constructor(rect: Rect, title: string, capacity: number, talents: XArray<Talent>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.talents = talents;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24)));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\n\nexport class Item extends Entity {\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  cast(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    if (!this.ability.cast(this.actor, target)) {\n      // Failed to cast\n      return false;\n    }\n\n    this.cooldown = this.ability.cooldown;\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}