{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","point","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","Effect","countdown","blocking","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","panel_1","Dialog","title","closeButton","renderer","draw","app","button_1","ItemButton","Button","containerItems","initialItem","sprite","stackItems","item","player","use","dst","drawString","toString","Entity","blocks","offset","canPickup","canAttack","pixelX","tileSize","pixelY","Math","hypot","viewport","bumper","elements","index","el","push","listeners","onAdd","indexOf","splice","onRemove","listener","AI","actor","activatedCount","Input","down","downCount","upCount","destRect","shortcutKey","onClick","src","offsetX","offsetY","mouse","start","startDragging","isKeyPressed","isClicked","click","ButtonSlot","button","undefined","buttonSlotRect","drawImage","String","fromCharCode","TargetType","colors_1","bumpeffect_1","floatingtexteffect_1","slideeffect_1","entity_1","Actor","health","maxHealth","actionPoints","inventory","dx","dy","destX","destY","isBlocked","xSpeed","ySpeed","effects","SlideEffect","blocked","targetX","targetY","distance","move","round","target","onAttack","takeDamage","BumpEffect","damage","FloatingTextEffect","onDeath","entities","onPickup","onUse","attacker","g","b","a","fromHsv","h","v","f","q","effect_1","DURATION","entity","update","str","color","frame","min","floor","drawCenteredString","count","RNG","seed","state","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","abs","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","u","alt","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","ItemShortcutButton","shortcutItem","getItem","countItems","Message","text","__export","ai_1","BasicMonster","monster","distanceTo","moveToward","attack","rng_1","ConfusedMonster","rng","numTurns","oldAi","ai","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","ProjectileEffect","position","velocity","duration","ability_1","actor_1","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","messageLog","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetAbility","ability","callback","targetCallback","targetType","ENTITY","getEnemyAt","TILE","getCell","cast","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","targetTile","path","nextStep","right","up","wait","tryMoveOrAttack","onBump","recomputeFov","sort","computeFov","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","itembutton_1","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","buttonslot_1","ImagePanel","srcRect","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","itemshortcutbutton_1","ShortcutButtonSlot","itemButton","Item","user","tilemapVS","tilemapFS","TileMapCell","tile","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {App} from '../app';\nimport {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly stackItems: XArray<Item>;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new XArray<Item>();\n    this.stackItems.add(initialItem);\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawString(this.stackItems.length.toString(), dst.x2 - 7, dst.y2 - 10);\n    }\n  }\n}","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  canPickup: boolean;\n  canAttack: boolean;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  activatedCount: number;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse) && this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawString(String.fromCharCode(this.shortcutKey), dst.x2 - 7, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Entity} from './entity';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n\n  cast(caster: Entity, target?: Entity|TileMapCell): boolean;\n}\n","\nimport {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {XArray} from './xarray';\n\nexport class Actor extends Entity {\n  health: number;\n  maxHealth: number;\n  actionPoints: number;\n  inventory: XArray<Entity>;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    // this.game = game;\n    // this.offset = new Vec2(0, 0);\n    // this.name = name;\n    // this.sprite = sprite;\n    // this.blocks = blocks;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.actionPoints = 1;\n    this.inventory = new XArray<Entity>();\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.actionPoints--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  attack(target: Actor) {\n    if (target === this) {\n      return;\n    }\n\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.actionPoints--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeDamage(damage: number) {\n    this.health -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.health <= 0) {\n      this.health = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n\n  onAttack(attacker: Entity, damage: number) {}\n  onDeath() {}\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n      if (!this.down) {\n        this.down = true;\n        this.prev.x = this.x;\n        this.prev.y = this.y;\n        this.start.x = this.x;\n        this.start.y = this.y;\n        this.dx = 0;\n        this.dy = 0;\n        this.dragDistance = 0;\n      }\n    } else {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  // readonly originalButton: Button;\n\n  readonly containerItems: XArray<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    // this.originalButton = originalButton;\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n  }\n\n  // drawContents() {\n  //   const tempX = this.originalButton.rect.x;\n  //   const tempY = this.originalButton.rect.y;\n\n  //   this.originalButton.rect.x = this.rect.x;\n  //   this.originalButton.rect.y = this.rect.y;\n  //   this.originalButton.drawContents();\n  //   this.originalButton.rect.x = tempX;\n  //   this.originalButton.rect.y = tempY;\n  // }\n\n  // click() {\n  //   this.originalButton.click();\n  // }\n\n  click() {\n    // if (this.stackItems.length > 0) {\n    //   const item = this.stackItems.get(0);\n    //   const player = item.game.player;\n    //   if (player) {\n    //     player.use(item);\n    //   }\n    // }\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    // if (this.stackItems.length > 1) {\n    const dst = this.rect;\n    const count = this.countItems();\n    this.gui.app.drawString(count.toString(), dst.x2 - 7, dst.y2 - 10);\n    // }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './gui/shortcutbuttonslot';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './tilemap';\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.health > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Actor} from '../actor';\nimport {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.actor.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a > 0.5) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Actor;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.actionPoints > 0) {\n          if (currEntity === this.player) {\n            this.handlePlayerInput();\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (!this.blocked && currEntity.actionPoints <= 0) {\n          // Turn is over\n          currEntity.actionPoints = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getEnemyAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.actionPoints = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Actor) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.actionPoints = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity instanceof Actor && entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor) {\n          entity.actionPoints = 1;\n        }\n      }\n    }\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!(other instanceof Actor)) {\n        continue;\n      }\n      if (!other.canAttack || other.health <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, title: string, capacity: number, items: XArray<Item>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.items = items;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      this.add(new ItemContainerButtonSlot(new Rect(i * 24, 0, 24, 24), items));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, items: XArray<Item>) {\n    super(rect);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {Button} from './button';\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n    }\n\n    // if (!(panel instanceof Button)) {\n    //   // Not a button\n    //   return false;\n    // }\n\n    // this.add(new ItemShortcutButton(this.rect.clone(), panel as Button));\n\n    // Even though the operation was successful,\n    // return false because we don't want to move the original button\n    return false;\n  }\n}\n","import {Entity} from './entity';\n\nexport class Item extends Entity {\n  onPickup(user: Entity) {}\n\n  onUse(user: Entity): boolean {\n    return false;\n  }\n}","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}