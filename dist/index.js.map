{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/serializable.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/serializemetadata.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/tilemap.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/serialize.ts","webpack://wglt/./src/talent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializemetadata_1","Serializable","options","ctor","console","log","metadata","createSerializeMetadata","className","valueType","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","__decorate","delta","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","Entity","blocks","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","seen","j","dx","dy","slideCount","destX","destY","isBlocked","tileMap","offset","tileSize","xSpeed","ySpeed","animations","SlideAnimation","blocked","move","targetX","targetY","abs","target","damage","onAttack","takeDamage","BumpAnimation","heal","min","addFloatingText","attacker","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextAnimation","zIndex","pixelX","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","rect_1","itembutton_1","GUI","DialogRenderer","rootPanel","size","dragOffset","updateDragging","onDrop","removeAll","animation_1","DURATION","entity","update","floor","METADATA_KEY","SerializeMetadata","getSerializeMetadata","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","canvas","Error","gl","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","focus","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","Keyboard","Mouse","addEventListener","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","state","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","dw","dh","drawString","keyCode","getKey","isKeyArrayPressed","keys","input_1","KEY_COUNT","Array","e","setKey","stopPropagation","preventDefault","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","getBoundingClientRect","terminalAspectRatio","rectAspectRatio","actualWidth","excess","actualHeight","mwe","deltaY","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","url","program","initShaderProgram","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","createTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","Uint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","charCode","charCodeAt","isInRange","getOffset","getWidth","optColor","optDw","optDh","loaded","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","UNSIGNED_BYTE","primitiveType","TRIANGLES","drawArrays","loadShader","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","texture","internalFormat","RGBA","srcFormat","srcType","pixel","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dx1","dy1","dx2","dy2","sx","sy","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","serializable_1","Game","viewportFocus","turnIndex","cursor","TooltipDialog","rng","RNG","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","text","messageLog","animation","Sprite","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","animFrame","globalAnimIndex","isTargeting","targetSprite","z","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","getCell","cancelTargeting","ai","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","computePath","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","map","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","minX","minY","maxX","maxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","dest","maxDist","grid","clearDijkstra","sourceCell","alt","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Sprite_1","loop","ticksPerFrame","colorOverride","animIndex","animDelay","Message","buttonslot_1","ShortcutButtonSlot","itemButton","clone","tilemapVS","tilemapFS","getTileId","tileX","tileY","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","dirty","originX","originY","visibleRect","prevVisibleRect","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","animated","uniform1f","uniform1i","TEXTURE1","uniform2fv","isSeen","setAlpha","updateGl","radius","vradius","copy","computeOctantY","computeOctantX","deltaX","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx","__export","handlers","handler","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","FadeInAnimation","duration","blackoutRect","FadeOutAnimation","ProjectileAnimation","position","velocity","START_CHAR_CODE","END_CHAR_CODE","Font","sum","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","dialog_1","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","message_1","MessageLog","maxItems","MessagePanel","message","SelectDialog","close","shortcutbuttonslot_1","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","game_1","tilemap_1","app_1","Serializer","typeLists","obj","serializeObject","refs","objType","constructor","Function","serializeArray","refType","__className","__index","typeList","properties","getOwnPropertyNames","propertyCount","serializedValue","Talent","rank"],"mappings":"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83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IAEA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KAEA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KAGA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,IACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,KACA83B,EAAA93B,EAAA,mFCtDAN,EAAA+P,iBAAA,MAGE1M,cACEM,KAAK00B,SAAW,GAGlBh1B,KAAKi1B,GAEH,OADA30B,KAAK00B,SAAS9lB,KAAK+lB,GACZ30B,KAGTN,UACE,IAAK,IAAI7C,EAAI,EAAGA,EAAImD,KAAK00B,SAASzzB,OAAQpE,IA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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","import { createSerializeMetadata } from \"./serializemetadata\";\n\nexport interface SerializableOptions {\n  valueType?: boolean;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n\nexport function Serializable(name: string, options?: SerializableOptions) {\n  return function (ctor: Function) {\n    if (name === 'Actor') {\n      console.log('wtf actor serializable');\n    }\n\n    const metadata = createSerializeMetadata(ctor);\n    metadata.className = name;\n\n    if (options) {\n      metadata.valueType = !!options.valueType;\n    }\n  };\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Panel')\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","import { Serializable } from \"./serializable\";\n\n@Serializable('Vec2', {valueType: true})\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('Dialog')\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\nimport { Serializable } from './serializable';\n\n@Serializable('ArrayList')\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('TalentButton')\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemButton')\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemShortcutButton')\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Button')\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ButtonSlot')\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {BumpAnimation} from './animations/bumpanimation';\nimport {FloatingTextAnimation} from './animations/floatingtextanimation';\nimport {SlideAnimation} from './animations/slideanimation';\nimport {ArrayList} from './arraylist';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {TileMapCell} from './tilemap';\nimport { Serializable } from './serializable';\n\n@Serializable('Actor')\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap && this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity|TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath(attacker: Actor) {}\n}","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\nimport { Serializable } from './serializable';\n\n@Serializable('Entity')\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\nimport { Serializable } from './serializable';\n\n@Serializable('GUI')\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nconst METADATA_KEY = '__wgltMetadata';\n\nexport function createSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = new SerializeMetadata();\n  ctor[METADATA_KEY] = metadata;\n  return metadata;\n}\n\nexport function getSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = ctor[METADATA_KEY];\n  return metadata || createSerializeMetadata(ctor);\n}\n\nexport class SerializeMetadata {\n  className: string = 'Object';\n  valueType: boolean = false;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('DialogRenderer')\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n@Serializable('Game')\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMap.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y))) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    if (!map) {\n      return;\n    }\n\n    const tileWidth = this.tileSize.width;\n    const tileHeight = this.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= this.viewport.width) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= this.viewport.height) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player || !this.tileMap) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","import {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\n@Serializable('Sprite')\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\n@Serializable('ShortcutButtonSlot')\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\nimport { Rect } from './rect';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform float animFrame;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   if (gl_FragColor.a == 0.0) discard;' +\n    '   gl_FragColor.a *= tile.a;' +\n    '}';\n\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return 1 + tileY * 64 + tileX;\n}\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 255;\n      this.imageData[i++] = 0;\n      this.imageData[i++] = 0;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n  dirty: boolean;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private visibleRect: Rect;\n  private prevVisibleRect: Rect;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n     // x   y   u  v\n       -1, -1,  0, 1,\n        1, -1,  1, 1,\n        1,  1,  1, 0,\n       -1, -1,  0, 1,\n        1,  1,  1, 0,\n       -1,  1,  0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(tx: number, ty: number, layerIndex: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return false;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    return layer.imageData[ti + 2] !== 0;\n  }\n\n  setAnimated(tx: number, ty: number, layerIndex: number, animated: boolean) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (ty * layer.width + tx);\n    layer.imageData[ti + 2] = animated ? 1 : 0;\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(this.visibleRect.x1, this.prevVisibleRect.x1);\n    const minY = Math.min(this.visibleRect.y1, this.prevVisibleRect.y1);\n    const maxX = Math.max(this.visibleRect.x2, this.prevVisibleRect.x2);\n    const maxY = Math.max(this.visibleRect.y2, this.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n\n      if (this.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = this.isVisible(x, y) ? 255 : this.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        layer.updateGl(gl);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    this.dirty = false;\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './serializable';\nexport * from './serialize';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\n@Serializable('TooltipDialog')\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\n\n@Serializable('ComplexSelectDialog')\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\n@Serializable('DefaultSelectOptionRenderer')\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ImagePanel')\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('ItemContainerDialog')\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemContainerButtonSlot')\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessageLog')\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessagePanel')\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\n@Serializable('SelectDialog')\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_SPACING = 2;\n\n@Serializable('ShortcutBar')\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('TalentsDialog')\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport { Serializable } from './serializable';\n\n@Serializable('Item')\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","import { Game } from \"./game\";\nimport { RenderSet } from \"./renderset\";\nimport { TileMap } from \"./tilemap\";\nimport { App } from \"./app\";\nimport { GUI } from \"./gui\";\nimport { Message } from \"./message\";\nimport { Panel } from \"./gui/panel\";\nimport { getSerializeMetadata } from \"./serializemetadata\";\nimport { Actor } from \"./actor\";\n\n// export const GLOBAL_CHECK: any[] = [];\n// let DUP_COUNT = 0;\n\nexport class Serializer {\n  readonly typeLists: any = {};\n\n  serialize(obj: any): any {\n    const root = this.serializeObject(obj);\n    return {\n      'root': root,\n      'refs': this.typeLists\n    }\n  }\n\n  serializeObject(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    const objType = typeof obj;\n    if (objType === 'boolean' || objType === 'number' || objType === 'string') {\n      return obj;\n    }\n\n    if (obj instanceof Actor) {\n      console.log('wtf actor');\n    }\n\n    if (!obj.constructor) {\n      console.log('no constructor', obj);\n      throw new Error('Object does not have a constructor');\n    }\n\n    if (obj instanceof App ||\n      obj instanceof GUI ||\n      obj instanceof Panel ||\n      obj instanceof RenderSet ||\n      obj instanceof TileMap ||\n      obj instanceof Function) {\n      return undefined;\n    }\n\n    if (obj instanceof Array) {\n      return this.serializeArray(obj);\n    }\n\n    const metadata = getSerializeMetadata(obj.constructor);\n    const className = metadata.className;\n    const refType = !metadata.valueType;\n    const result: any = {};\n\n    if (className && refType) {\n      if (obj['__index'] !== undefined) {\n        return {\n          '__className': className,\n          '__index': obj['__index']\n        }\n      }\n\n      let typeList = this.typeLists[className];\n      if (!typeList) {\n        typeList = [];\n        this.typeLists[className] = typeList;\n      }\n      obj['__index'] = typeList.length;\n      typeList.push(result);\n    }\n\n    // if (!(obj instanceof Message) && GLOBAL_CHECK.indexOf(obj) >= 0) {\n    //   console.log('DUP!', obj);\n    //   DUP_COUNT++;\n    //   if (DUP_COUNT > 10) {\n    //     throw new Error('DUP!');\n    //   }\n    // }\n    // GLOBAL_CHECK.push(obj);\n\n    const properties = Object.getOwnPropertyNames(obj);\n    let propertyCount = 0;\n\n    for (let i = 0; i < properties.length; i++) {\n      const key = properties[i];\n      const value = (obj as any)[key];\n\n      if (key === '__index') {\n        continue;\n      }\n\n      if (obj instanceof Game) {\n        if (key === 'tooltip' || key === 'tooltipElement' || key === 'messageLog') {\n          continue;\n        }\n      }\n\n      const serializedValue = this.serializeObject(value);\n      if (serializedValue === undefined) {\n        continue;\n      }\n\n      result[key] = serializedValue;\n      propertyCount++;\n    }\n\n    if (propertyCount === 0) {\n      // Ignore objects without any properties\n      return undefined;\n    }\n\n    if (className && refType) {\n      return {\n        '__className': className,\n        '__index': obj['__index']\n      };\n    } else {\n      return result;\n    }\n  }\n\n  private serializeArray(a: Array<any>) {\n    const result = [];\n    for (let i = 0; i < a.length; i++) {\n      result.push(this.serializeObject(a[i]));\n    }\n    return result;\n  }\n}\n\n","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\nimport { Serializable } from './serializable';\n\n@Serializable('Talent')\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n"],"sourceRoot":""}