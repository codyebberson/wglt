{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/effects/fadeineffect.ts","webpack://wglt/./src/effects/fadeouteffect.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Effect","countdown","blocking","game","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","panel_1","Dialog","closeButton","renderer","draw","app","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","containerItems","shortcutItem","item","getItem","player","dst","count","countItems","drawRightString","destRect","shortcutKey","onClick","src","offsetX","offsetY","mouse","start","startDragging","isKeyPressed","isClicked","click","down","messages","ButtonSlot","button","buttonSlotRect","String","fromCharCode","ItemButton","initialItem","stackItems","TargetType","Entity","blocks","offset","zIndex","pixelX","tileSize","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","AI","Input","downCount","upCount","ability_1","bumpeffect_1","floatingtexteffect_1","slideeffect_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","activatedCount","seen","j","dx","dy","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","effects","SlideEffect","blocked","move","targetX","targetY","abs","target","damage","onAttack","takeDamage","BumpEffect","heal","min","addFloatingText","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextEffect","effect_1","DURATION","entity","update","floor","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","Mouse","prev","dragDistance","longPress","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","buttonslot_1","itembutton_1","ShortcutButtonSlot","itemButton","clone","__export","ai_1","DEFAULT_DAMAGE","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","ai","rng","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","FadeInEffect","duration","blackoutRect","FadeOutEffect","ProjectileEffect","position","velocity","actor_1","appstate_1","tooltipdialog_1","keys_1","path_1","rng_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","Game","viewportFocus","turnIndex","cursor","TooltipDialog","pathIndex","viewDistance","messageLog","updateGlobalAnimations","updateTooltip","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","effect","isDone","onDone","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","focusLeftX","ceil","focusTopY","tileMap","isTargeting","targetSprite","z","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","getCell","cancelTargeting","isKeyDown","endTargeting","targetTile","path","nextStep","stopAutoWalk","right","up","wait","tryMoveOrAttack","onBump","minX","minY","maxX","maxY","pathTile","endTurn","recomputeFov","recalculateViewportFocus","startTurn","computeFov","dialog_1","WIDTH","MARGIN","LINE_PADDING","lineHeight","msg","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","containerRect","buttonRect","ImagePanel","srcRect","message_1","MessageLog","maxItems","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","shortcutbuttonslot_1","DEFAULT_SPACING","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","user","Talent","rank","tilemapVS","tilemapFS","TileMapCell","tile","blockedSight","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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AAO,EAGT,GAAIE,aAAiBigB,EAAAvP,WAAY,CAC/B,MAAMyP,EAAangB,EACb8O,EAAiBqR,EAAWrR,eAC5BC,EAAeoR,EAAWvP,WAAW5T,IAAI,GAI/C,OAHA4B,KAAKsB,IAAI,IAAIob,EAAAzM,mBAAmBjQ,KAAKY,KAAK4gB,QAAStR,EAAgBC,KAG5D,EAGT,OAAI/O,aAAiBub,EAAAzO,eACf9M,EAAMiN,WAKRrO,KAAKsB,IAAI,IAAIqb,EAAAzO,aAAalO,KAAKY,KAAK4gB,QAASpgB,EAAMgN,QAAQ,KACpD,MAIPhN,aAAiBsb,EAAAzM,oBAAuB7O,aAAiBub,EAAAzO,cAAgB9M,EAAMiN,yJCnCvFoT,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KAEAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KAGAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,IACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KACAokB,EAAApkB,EAAA,KAC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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    tooltip.visible = false;\n  }\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n  onDone?: Function;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly stackItems: XArray<Item>;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new XArray<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() {}\n\n  endTurn() {}\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {TileMapCell} from './tilemap';\nimport {XArray} from './xarray';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: XArray<Item>;\n  talents: XArray<Talent>;\n  activatedCount: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new XArray<Item>();\n    this.talents = new XArray<Talent>();\n    this.activatedCount = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.ap--;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    // TODO: Enforce distance check?\n\n    this.onAttack(target, damage);\n    target.takeDamage(damage);\n    this.ap--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(damage: number) {\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity|TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.effects.push(new FloatingTextEffect(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath() {}\n}","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(40, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/fadeineffect';\nexport * from './effects/fadeouteffect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nconst DEFAULT_DAMAGE = 1;\n\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.0) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeInEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeOutEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Effect} from './effects/effect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Key, Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n// Arrow keys, numpad, vi, WASD, or ZQSD\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K, Keys.VK_W, Keys.VK_Z];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H, Keys.VK_A, Keys.VK_Q];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J, Keys.VK_S];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L, Keys.VK_D];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  viewDistance: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.viewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        const effect = this.effects[i];\n        if (effect.onDone) {\n          effect.onDone();\n        }\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            this.handlePlayerInput();\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (!this.blocked && currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width;\n    this.viewport.height = this.app.size.height;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = 0.1 * focusLeftX - 0.1 * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = 0.1 * focusTopY - 0.1 * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity.zIndex === z && (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y))) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.viewportFocus.y -= 2 * this.tileSize.height;\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.viewportFocus.x -= 2 * this.tileSize.width;\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.viewportFocus.x += 2 * this.tileSize.width;\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.viewportFocus.y += 2 * this.tileSize.height;\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.isKeyPressed(UP_KEYS)) {\n        this.cursor.y--;\n      }\n      if (this.isKeyPressed(LEFT_KEYS)) {\n        this.cursor.x--;\n      }\n      if (this.isKeyPressed(RIGHT_KEYS)) {\n        this.cursor.x++;\n      }\n      if (this.isKeyPressed(DOWN_KEYS)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    const down = this.isKeyPressed(DOWN_KEYS) || (nextStep && nextStep.y > this.player.y);\n    const left = this.isKeyPressed(LEFT_KEYS) || (nextStep && nextStep.x < this.player.x);\n    const right = this.isKeyPressed(RIGHT_KEYS) || (nextStep && nextStep.x > this.player.x);\n    const up = this.isKeyPressed(UP_KEYS) || (nextStep && nextStep.y < this.player.y);\n    const wait = this.isKeyPressed(WAIT_KEYS);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.ap = 0;\n    }\n  }\n\n  private isKeyPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.app.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        this.stopAutoWalk();\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Find the bounds of desired area\n    let minX = player.pixelX;\n    let minY = player.pixelY;\n    let maxX = minX + player.sprite.width;\n    let maxY = minY + player.sprite.height;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * this.tileSize.width);\n        minY = Math.min(minY, pathTile.y * this.tileSize.height);\n        maxX = Math.max(maxX, (pathTile.x + 1) * this.tileSize.width);\n        maxY = Math.max(maxY, (pathTile.y + 1) * this.tileSize.height);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor && this.tileMap && this.tileMap.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.pixelX);\n          minY = Math.min(minY, entity.pixelY);\n          maxX = Math.max(maxX, entity.pixelX + entity.sprite.width);\n          maxY = Math.max(maxY, entity.pixelY + entity.sprite.height);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n    this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n  }\n\n  private doAi(entity: Actor) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    const currEntity = this.entities[this.turnIndex];\n    currEntity.endTurn();\n\n    if (this.player && this.player === currEntity) {\n      this.recomputeFov();\n      this.recalculateViewportFocus();\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    const nextEntity = this.entities[this.turnIndex];\n    nextEntity.startTurn();\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, this.viewDistance);\n\n      // Determine which entities are activated\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity === this.player) {\n          continue;\n        }\n        if (entity instanceof Actor) {\n          if (this.tileMap.isVisible(entity.x, entity.y)) {\n            if (!entity.seen) {\n              // Spotted a new entity, stop auto walking\n              entity.seen = true;\n              this.player.addFloatingText('!', Colors.WHITE);\n              this.stopAutoWalk();\n\n              this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n              this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n            }\n            entity.activatedCount++;\n          } else {\n            entity.activatedCount = -1;\n          }\n        }\n      }\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Dialog} from './dialog';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n    // this.modal = true;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: XArray<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, items: XArray<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\nimport {XArray} from '../xarray';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\n\nconst DEFAULT_SPACING = 2;\n\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: XArray<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && slot.button.shortcutItem.name === item.name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: XArray<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: XArray<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\n\nexport class Item extends Entity {\n  readonly tooltipMessages?: Message[];\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   if (gl_FragColor.a == 0.0) discard;' +\n    '   gl_FragColor.a *= tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean, blockedSight?: boolean) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    if (layerIndex === 0) {\n      this.grid[y][x].tile = tile;\n      this.grid[y][x].blocked = !!blocked;\n      this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : !!blocked;\n    }\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}