{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/entitybutton.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","xarray_1","Panel","rect","modal","gui","children","XArray","length","setGui","panel","parent","push","remove","newParent","add","point","child","dragElement","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","Effect","countdown","blocking","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Input","down","downCount","upCount","AI","entity","activatedCount","panel_1","Button","srcRect","destRect","shortcutKey","onClick","src","dst","offsetX","offsetY","app","drawImage","mouse","start","isDragging","startDragging","isKeyPressed","isClicked","click","Dialog","title","closeButton","renderer","draw","input_1","KEY_COUNT","Keyboard","el","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","dx","dy","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","Math","floor","actualHeight","update","abs","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","DialogRenderer","rootPanel","dragOffset","updateDragging","target","tryDrop","move","undefined","dropTarget","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","h","sx","sy","index","indexOf","splice","g","b","a","fromHsv","v","f","q","effect_1","DURATION","BumpEffect","colors_1","FloatingTextEffect","str","pixelX","pixelY","color","frame","viewport","min","drawCenteredString","SlideEffect","count","tileSize","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","u","alt","blocked","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Message","text","__export","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","round","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","offset","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","bumpeffect_1","floatingtexteffect_1","slideeffect_1","Entity","sprite","blocks","health","maxHealth","actionPoints","inventory","canPickup","canAttack","destX","destY","isBlocked","xSpeed","ySpeed","effects","targetX","targetY","distance","hypot","onAttack","takeDamage","damage","toString","onDamage","onDeath","entities","item","onPickup","onUse","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","turnCount","currEntity","player","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetCallback","callback","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","getEnemyAt","targetTile","path","attack","getCell","nextStep","right","up","wait","tryMoveOrAttack","onBump","ai","recomputeFov","sort","computeFov","ai_1","BasicMonster","monster","distanceTo","moveToward","rng_1","ConfusedMonster","rng","numTurns","oldAi","ProjectileEffect","position","velocity","duration","button_1","ButtonSlot","buttonSlotRect","String","fromCharCode","button","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","EntityButton","use","ImagePanel","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","tilemapVS","tilemapFS","TileMapCell","tile","visible","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly modal: boolean;\n  readonly children: XArray<Panel>;\n  parent?: Panel;\n\n  constructor(rect: Rect, modal?: boolean) {\n    this.gui = null;\n    this.rect = rect;\n    this.modal = !!modal;\n    this.children = new XArray();\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.push(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (this.gui && child === this.gui.dragElement) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {App} from '../app';\nimport {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Entity} from '../entity';\n\nexport abstract class AI {\n  readonly entity: Entity;\n  activatedCount: number;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly srcRect: Rect;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(srcRect: Rect, destRect: Rect, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.srcRect = srcRect;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    this.gui.app.drawImage(dst.x + offsetX, dst.y + offsetY, src.x, src.y, src.width, src.height);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse) && this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect, true);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n      if (!this.down) {\n        this.down = true;\n        this.prev.x = this.x;\n        this.prev.y = this.y;\n        this.start.x = this.x;\n        this.start.y = this.y;\n        this.dx = 0;\n        this.dy = 0;\n        this.dragDistance = 0;\n      }\n    } else {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n  onDrop?: Function;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && this.tryDrop(dragElement, target)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n\n  private tryDrop(dragElement: Panel, dropTarget: Panel) {\n    if (dropTarget === this.rootPanel) {\n      // Cannot drop on root panel\n      return false;\n    }\n\n    if (this.onDrop) {\n      return this.onDrop(dragElement, dropTarget);\n    }\n\n    // Block drag and drop by default\n    return false;\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","\nexport class XArray<T> extends Array<T> {\n  remove(el: T) {\n    const index = this.indexOf(el);\n    if (index >= 0) {\n      this.splice(index, 1);\n    }\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offsetX += this.dx;\n      this.entity.offsetY += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offsetX -= this.dx;\n      this.entity.offsetY -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offsetX += this.dx;\n      this.entity.offsetY += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offsetX / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offsetY / this.entity.game.tileSize.height;\n      this.entity.offsetX = 0;\n      this.entity.offsetY = 0;\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/entitybutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './input';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './tilemap';\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 180.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a > 0.5) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport {XArray} from './xarray';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  offsetX: number;\n  offsetY: number;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  health: number;\n  maxHealth: number;\n  actionPoints: number;\n  inventory: XArray<Entity>;\n  ai?: AI;\n  canPickup: boolean;\n  canAttack: boolean;\n  onBump?: Function;\n  onAttack?: Function;\n  onDamage?: Function;\n  onDeath?: Function;\n  onPickup?: Function;\n  onUse?: Function;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.actionPoints = 1;\n    this.inventory = new XArray<Entity>();\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offsetX;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offsetY;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.actionPoints--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  attack(target: Entity) {\n    if (target === this) {\n      return;\n    }\n\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(this, target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.actionPoints--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeDamage(damage: number) {\n    this.health -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.onDamage) {\n      this.onDamage(this);\n    }\n\n    if (this.health <= 0) {\n      this.health = 0;\n      if (this.onDeath) {\n        this.onDeath(this);\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Entity) {\n    if (item.onPickup) {\n      item.onPickup(this, item);\n    }\n    // item.container = this.player.inventory;\n    this.inventory.push(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use() {\n    if (!this.onUse) {\n      return false;\n    }\n    this.onUse(this);\n    return true;\n  }\n\n  distanceTo(other: Entity) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n}\n","import {App} from './app';\nimport {AppState} from './appstate';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Entity;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Entity;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity.actionPoints > 0) {\n        if (currEntity === this.player) {\n          this.handlePlayerInput();\n          break;\n        } else {\n          this.doAi(currEntity);\n        }\n      }\n      if (!this.blocked && currEntity.actionPoints <= 0) {\n        // Turn is over\n        currEntity.actionPoints = 0;\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetCallback;\n  }\n\n  startTargeting(callback: Function) {\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.targetCallback) {\n      this.targetCallback(this.cursor.x, this.cursor.y);\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.actionPoints = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          if (player.onBump(other)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Entity) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.actionPoints = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        this.entities[i].actionPoints = 1;\n      }\n    }\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!other.canAttack || other.health <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.entity;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.health > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = entity.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.entity.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.entity.ai = this.oldAi;\n    }\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(destRect: Rect, shortcutKey?: Key) {\n    super(destRect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    this.drawChildren();\n\n    if (this.shortcutKey) {\n      this.gui.app.drawString(String.fromCharCode(this.shortcutKey), dst.x + 17, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    const child = this.children.length > 0 ? this.children[0] : null;\n    if (child && child instanceof Button) {\n      const button = child as Button;\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class EntityButton extends Button {\n  readonly entity: Entity;\n\n  constructor(destRect: Rect, entity: Entity) {\n    super(entity.sprite, destRect);\n    this.entity = entity;\n  }\n\n  click() {\n    this.entity.use();\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}