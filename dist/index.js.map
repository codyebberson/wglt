{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/serializable.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/tilemap/tilemap.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/tilemap/tilemaprenderer.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/serializemetadata.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/tilemap/tilemapcell.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/compoundmessage.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/tilemap/tilemaplayer.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/serialize.ts","webpack://wglt/./src/talent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializemetadata_1","Serializable","options","ctor","metadata","createSerializeMetadata","className","valueType","vec2_1","Rect","Vec2","[object Object]","x","y","width","height","super","this","x1","y1","x2","y2","left","top","other","point","delta","__decorate","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","BLUE","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","colors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","v","drawImage","cx","cy","drawCenteredString","toString","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","g","b","a","undefined","fromHsv","h","f","q","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","tilemapcell_1","rect_1","tilemaplayer_1","getTileId","tileX","tileY","TileMap","layerCount","tileSize","depth","grid","Array","layers","dirty","originX","originY","visibleRect","prevVisibleRect","TileMapCell","TileMapLayer","z","clear","isOutOfRange","getTile","tile","setTile","blocked","blockedSight","cell","getCell","seen","isAnimated","animated","setAnimated","radius","vradius","copy","dx","dy","max","min","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","floor","idx","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","Entity","blocks","offset","zIndex","pixelX","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","itembutton_1","GUI","DialogRenderer","rootPanel","size","dragOffset","updateDragging","target","onDrop","move","removeAll","Message","text","color","pos","drawString","glutils_1","tilemapVS","tilemapFS","TileMapRenderer","gl","tileMap","quadVertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","tilemapShader","initShaderProgram","positionAttribute","getAttribLocation","textureAttribute","viewportSizeUniform","getUniformLocation","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","layerTextures","texture","createTexture","imageData","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","animFrame","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1f","activeTexture","TEXTURE0","uniform1i","TEXTURE1","minX","minY","maxX","maxY","layer","alpha","isVisible","isSeen","setAlpha","texSubImage2D","drawArrays","TRIANGLES","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","j","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","animations","SlideAnimation","targetX","targetY","abs","damage","onAttack","takeDamage","BumpAnimation","heal","addFloatingText","attacker","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","FloatingTextAnimation","animation_1","DURATION","entity","update","METADATA_KEY","SerializeMetadata","getSerializeMetadata","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","canvas","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","style","outline","tabIndex","focus","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","Keyboard","Mouse","addEventListener","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","state","flush","requestAnimationFrame","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","dw","dh","out","keyCode","getKey","isKeyArrayPressed","keys","input_1","KEY_COUNT","e","setKey","stopPropagation","preventDefault","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","getBoundingClientRect","terminalAspectRatio","rectAspectRatio","actualWidth","excess","actualHeight","mwe","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","url","program","viewportSizeLocation","positionLocation","texcoordLocation","colorLocation","positionBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","texcoordArray","colorUint8Array","Uint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","charCode","charCodeAt","isInRange","getOffset","getWidth","optColor","optDw","optDh","loaded","tx","ty","tx2","ty2","setUint32","DYNAMIC_DRAW","normalize","stride","primitiveType","loadShader","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","internalFormat","srcFormat","srcType","pixel","image","Image","onload","generateMipmap","gui_1","AppState","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dx1","dy1","dx2","dy2","sx","sy","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","serializable_1","tilemap_1","tilemaprenderer_1","DEFAULT_MAP_SIZE","Game","viewportFocus","focusMargins","turnIndex","cursor","TooltipDialog","rng","RNG","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","mapSize","mapLayers","tileMapRenderer","message","messageLog","animation","Sprite","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","globalAnimIndex","isTargeting","targetSprite","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","cancelTargeting","ai","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","computePath","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","map","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","buildPath","result","curr","reverse","dest","maxDist","clearDijkstra","sourceCell","alt","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Sprite_1","loop","ticksPerFrame","colorOverride","animIndex","animDelay","buttonslot_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","FadeInAnimation","duration","blackoutRect","FadeOutAnimation","ProjectileAnimation","position","velocity","START_CHAR_CODE","END_CHAR_CODE","Font","sum","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","message_1","CompoundMessage","dialog_1","lineHeight","msg","getIndex","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","ImagePanel","srcRect","itemcontainerbuttonslot_1","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","MessageLog","maxItems","bottom","MessagePanel","SelectDialog","close","shortcutbuttonslot_1","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","game_1","app_1","Serializer","typeLists","obj","serializeObject","refs","objType","constructor","Function","serializeArray","refType","__className","__index","typeList","properties","getOwnPropertyNames","propertyCount","serializedValue","Talent","rank"],"mappings":"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B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IAEA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KAEA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KAGA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,IACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,KACA04B,EAAA14B,EAAA,mFCzDAN,EAAA6P,iBAAA,MAGE1M,cACEM,KAAKw1B,SAAW,GAGlB91B,KAAK+1B,GAEH,OADAz1B,KAAKw1B,SAAS5mB,KAAK6mB,GACZz1B,KAGTN,UACE,IAAK,IAAI3C,EAAI,EAAGA,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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","import { createSerializeMetadata } from \"./serializemetadata\";\n\nexport interface SerializableOptions {\n  valueType?: boolean;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n\nexport function Serializable(name: string, options?: SerializableOptions) {\n  return function (ctor: Function) {\n    const metadata = createSerializeMetadata(ctor);\n    metadata.className = name;\n\n    if (options) {\n      metadata.valueType = !!options.valueType;\n    }\n  };\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import { Serializable } from \"./serializable\";\n\n@Serializable('Vec2', {valueType: true})\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Panel')\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly BLUE = fromRgb(0x00, 0x00, 0xff);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('Dialog')\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\nimport { Serializable } from './serializable';\n\n@Serializable('ArrayList')\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('TalentButton')\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemButton')\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemShortcutButton')\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Button')\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import { TileMapCell } from \"./tilemapcell\";\nimport { Rect } from \"../rect\";\nimport { TileMapLayer } from \"./tilemaplayer\";\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return tileY * 64 + tileX;\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly width: number;\n  readonly height: number;\n  readonly depth: number;\n  readonly tileSize: Rect;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  dirty: boolean;\n\n  // Field-of-view state\n  originX: number;\n  originY: number;\n  visibleRect: Rect;\n  prevVisibleRect: Rect;\n\n  constructor(width: number, height: number, layerCount: number, tileSize: Rect) {\n    this.width = width;\n    this.height = height;\n    this.depth = layerCount;\n    this.tileSize = tileSize;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n  }\n\n  isOutOfRange(x: number, y: number, z: number) {\n    return x < 0 || x >= this.width ||\n        y < 0 || y >= this.height ||\n        z < 0 || z >= this.depth;\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  getTile(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return 0;\n    }\n    return this.layers[z].getTile(x, y);\n  }\n\n  setTile(x: number, y: number, z: number, tile: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setTile(x, y, tile);\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return true;\n    }\n    return this.grid[y][x].blocked;\n  }\n\n  setBlocked(x: number, y: number, blocked: boolean, blockedSight?: boolean) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return;\n    }\n    this.grid[y][x].blocked = blocked;\n    this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : blocked;\n  }\n\n  getCell(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return null;\n    }\n    return this.grid[y][x];\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(x: number, y: number) {\n    const cell = this.getCell(x, y);\n    return cell && cell.seen;\n  }\n\n  setSeen(x: number, y: number, seen: boolean) {\n    const cell = this.getCell(x, y);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return false;\n    }\n    return this.layers[z].isAnimated(x, y);\n  }\n\n  setAnimated(x: number, y: number, z: number, animated: boolean) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setAnimated(x, y, animated);\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n      y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n        processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n        x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n      x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n        processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n        y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ButtonSlot')\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import { Actor } from './actor';\nimport { Entity } from './entity';\nimport { Message } from './message';\nimport { Sprite } from './sprite';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity | TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\nimport { Serializable } from './serializable';\n\n@Serializable('Entity')\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\nimport { Serializable } from './serializable';\n\n@Serializable('GUI')\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n\n  draw(app: App, pos: Vec2) {\n    app.drawString(this.text, pos.x, pos.y, this.color, pos);\n  }\n}\n","\nimport { initShaderProgram } from \"../glutils\";\nimport { TileMap } from \"./tilemap\";\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n  'attribute vec2 position;' +\n  'attribute vec2 texture;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 viewOffset;' +\n  'uniform vec2 viewportSize;' +\n  'uniform vec2 tileSize;' +\n  'uniform vec2 mapSize;' +\n\n  'void main(void) {' +\n  '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n  '   texCoord = pixelCoord / mapSize / tileSize;' +\n  '   gl_Position = vec4(position, 0.0, 1.0);' +\n  '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 tileSize;' +\n  'uniform float animFrame;' +\n  'uniform sampler2D tiles;' +\n  'uniform sampler2D sprites;' +\n\n  'void main(void) {' +\n  '   vec4 tile = texture2D(tiles, texCoord);' +\n  '   if(tile.x == 0.0 && tile.y == 0.0) { discard; }' +\n  '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n  '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n  '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n  '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n  '   if (gl_FragColor.a == 0.0) discard;' +\n  '   gl_FragColor.a *= tile.a;' +\n  '}';\n\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMapRenderer {\n  readonly gl: WebGLRenderingContext;\n  readonly tileMap: TileMap;\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n  private readonly layerTextures: WebGLTexture[];\n\n  constructor(gl: WebGLRenderingContext, tileMap: TileMap) {\n    this.gl = gl;\n    this.tileMap = tileMap;\n\n    const quadVerts = [\n      // x   y   u  v\n      -1, -1, 0, 1,\n      1, -1, 1, 1,\n      1, 1, 1, 0,\n      -1, -1, 0, 1,\n      1, 1, 1, 0,\n      -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    this.layerTextures = new Array(tileMap.depth);\n\n    for (let i = 0; i < tileMap.depth; i++) {\n      const texture = gl.createTexture() as WebGLTexture;\n      const imageData = tileMap.layers[i].imageData;\n\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, tileMap.width, tileMap.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      // MUST be filtered with NEAREST or tile lookup fails\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      this.layerTextures[i] = texture;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n    const tileMap = this.tileMap;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, tileMap.tileSize.width, tileMap.tileSize.height);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(tileMap.visibleRect.x1, tileMap.prevVisibleRect.x1);\n    const minY = Math.min(tileMap.visibleRect.y1, tileMap.prevVisibleRect.y1);\n    const maxX = Math.max(tileMap.visibleRect.x2, tileMap.prevVisibleRect.x2);\n    const maxY = Math.max(tileMap.visibleRect.y2, tileMap.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < tileMap.depth; i++) {\n      const layer = tileMap.layers[i];\n      const texture = this.layerTextures[i];\n      gl.uniform2f(this.mapSizeUniform, tileMap.width, tileMap.height);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      if (tileMap.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = tileMap.isVisible(x, y) ? 255 : tileMap.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, layer.width, layer.height, gl.RGBA, gl.UNSIGNED_BYTE, layer.imageData);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    tileMap.dirty = false;\n  }\n}\n","import { Ability, TargetType } from './ability';\nimport { AI } from './ai/ai';\nimport { BumpAnimation } from './animations/bumpanimation';\nimport { FloatingTextAnimation } from './animations/floatingtextanimation';\nimport { SlideAnimation } from './animations/slideanimation';\nimport { ArrayList } from './arraylist';\nimport { Color } from './color';\nimport { Colors } from './colors';\nimport { Entity } from './entity';\nimport { Game } from './game';\nimport { Item } from './item';\nimport { Sprite } from './sprite';\nimport { Talent } from './talent';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\n@Serializable('Actor')\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity | TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) { }\n  onDeath(attacker: Actor) { }\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nconst METADATA_KEY = '__wgltMetadata';\n\nexport function createSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = new SerializeMetadata();\n  ctor[METADATA_KEY] = metadata;\n  return metadata;\n}\n\nexport function getSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = ctor[METADATA_KEY];\n  return metadata || createSerializeMetadata(ctor);\n}\n\nexport class SerializeMetadata {\n  className: string = 'Object';\n  valueType: boolean = false;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7, Keys.VK_Y];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9, Keys.VK_U];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1, Keys.VK_B];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3, Keys.VK_N];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x: number, y: number, color?: Color, out?: Vec2) {\n    this.renderSet.drawString(str, x, y, color, out);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\nimport { Vec2 } from './vec2';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color, out?: Vec2) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let x = x0;\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      if (i > 0) {\n        x = x0;\n        y += height;\n      }\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n    }\n    if (out) {\n      out.x = x;\n      out.y = y;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('DialogRenderer')\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapRenderer } from './tilemap/tilemaprenderer';\nimport { Message } from './message';\n\nconst DEFAULT_MAP_SIZE = new Rect(0, 0, 256, 256);\nconst DEFAULT_MAP_LAYERS = 1;\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n@Serializable('Game')\nexport class Game extends AppState {\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly focusMargins: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap: TileMap;\n  tileMapRenderer: TileMapRenderer;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.focusMargins = options.focusMargins || new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n\n    const mapSize = options.mapSize || DEFAULT_MAP_SIZE;\n    const mapLayers = options.mapLayers || DEFAULT_MAP_LAYERS;\n    const tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.tileMap = new TileMap(mapSize.width, mapSize.height, mapLayers, tileSize);\n    this.tileMapRenderer = new TileMapRenderer(app.gl, this.tileMap);\n  }\n\n  get tileSize() {\n    return this.tileMap.tileSize;\n  }\n\n  log(message: string|Message, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(message, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMapRenderer.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileMap.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileMap.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && this.tileMap.isVisible(entity.x, entity.y)) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileMap.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileMap.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n      const target = this.tileMap.getCell(tx, ty);\n      if (target && target !== this.targetTile) {\n        this.targetTile = target;\n        this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n        this.pathIndex = 0;\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    const tileWidth = map.tileSize.width;\n    const tileHeight = map.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= (this.viewport.width - 2 * this.focusMargins.x)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= (this.viewport.height - 2 * this.focusMargins.y)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', Colors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","\nimport { Vec2 } from './vec2';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell | null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  setSeed(seed: number) {\n    this.state = seed;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\n@Serializable('Sprite')\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import { Vec2 } from \"../vec2\";\n\nexport class TileMapCell extends Vec2 {\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell | null;\n\n  constructor(x: number, y: number) {\n    super(x, y);\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\n@Serializable('ShortcutButtonSlot')\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './colors';\nexport * from './compoundmessage';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './serializable';\nexport * from './serialize';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap/tilemap';\nexport * from './tilemap/tilemapcell';\nexport * from './tilemap/tilemaprenderer';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_DAMAGE = 1;\n\n@Serializable('BasicMonster')\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\n@Serializable('ConfusedMonster')\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\nimport { Message } from './message';\n\nexport class CompoundMessage extends Message {\n  readonly messages: Message[];\n\n  constructor(...messages: Message[]) {\n    super('', 0);\n    this.messages = messages;\n  }\n\n  draw(app: App, pos: Vec2) {\n    // app.drawString(this.text, pos.x, pos.y, this.color, pos);\n    for (let i = 0; i < this.messages.length; i++) {\n      this.messages[i].draw(app, pos);\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\n@Serializable('TooltipDialog')\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const x = this.rect.x + MARGIN;\n    let y = this.rect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import { getTileId } from \"./tilemap\";\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 0;\n    }\n  }\n\n  getIndex(x: number, y: number) {\n    return 4 * (y * this.width + x);\n  }\n\n  setTile(x: number, y: number, tile: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index] = (tile % 64) | 0;\n    this.imageData[index + 1] = (tile / 64) | 0;\n  }\n\n  getTile(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return getTileId(this.imageData[index], this.imageData[index + 1]);\n  }\n\n  isAnimated(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return !!this.imageData[index + 2];\n  }\n\n  setAnimated(x: number, y: number, animated: boolean) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 2] = animated ? 1 : 0;\n  }\n\n  getAlpha(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return this.imageData[index + 3];\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 3] = alpha;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\n\n@Serializable('ComplexSelectDialog')\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\n@Serializable('DefaultSelectOptionRenderer')\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ImagePanel')\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('ItemContainerDialog')\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items, Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemContainerButtonSlot')\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, items: ArrayList<Item>, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\nimport { Vec2 } from '../vec2';\n\n@Serializable('MessageLog')\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(message: string|Message|Panel, color?: Color) {\n    if (message instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    if (message instanceof Message) {\n      this.messages.push(message);\n    } else {\n      this.messages.push(new Message(message, color || Colors.WHITE));\n    }\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const pos = new Vec2(this.rect.x, this.rect.y);\n\n    if (pos.y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + pos.y + this.rect.height;\n      pos.y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      msg.draw(this.gui.app, pos);\n      pos.x = 0;\n      pos.y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessagePanel')\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\n@Serializable('SelectDialog')\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_SPACING = 2;\n\n@Serializable('ShortcutBar')\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('TalentsDialog')\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport { Serializable } from './serializable';\n\n@Serializable('Item')\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","import { Game } from \"./game\";\nimport { RenderSet } from \"./renderset\";\nimport { App } from \"./app\";\nimport { GUI } from \"./gui\";\nimport { Panel } from \"./gui/panel\";\nimport { getSerializeMetadata } from \"./serializemetadata\";\nimport { Actor } from \"./actor\";\nimport { TileMap } from \"./tilemap/tilemap\";\nimport { TileMapRenderer } from \"./tilemap/tilemaprenderer\";\n\nexport class Serializer {\n  readonly typeLists: any = {};\n\n  serialize(obj: any): any {\n    const root = this.serializeObject(obj);\n    return {\n      'root': root,\n      'refs': this.typeLists\n    }\n  }\n\n  serializeObject(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    const objType = typeof obj;\n    if (objType === 'boolean' || objType === 'number' || objType === 'string') {\n      return obj;\n    }\n\n    if (!obj.constructor) {\n      throw new Error('Object does not have a constructor');\n    }\n\n    if (obj instanceof App ||\n      obj instanceof GUI ||\n      obj instanceof Panel ||\n      obj instanceof RenderSet ||\n      obj instanceof TileMap ||\n      obj instanceof TileMapRenderer ||\n      obj instanceof Function) {\n      return undefined;\n    }\n\n    if (obj instanceof Array) {\n      return this.serializeArray(obj);\n    }\n\n    const metadata = getSerializeMetadata(obj.constructor);\n    const className = metadata.className;\n    const refType = !metadata.valueType;\n    const result: any = {};\n\n    if (className && refType) {\n      if (obj['__index'] !== undefined) {\n        return {\n          '__className': className,\n          '__index': obj['__index']\n        }\n      }\n\n      let typeList = this.typeLists[className];\n      if (!typeList) {\n        typeList = [];\n        this.typeLists[className] = typeList;\n      }\n      obj['__index'] = typeList.length;\n      typeList.push(result);\n    }\n\n    const properties = Object.getOwnPropertyNames(obj);\n    let propertyCount = 0;\n\n    for (let i = 0; i < properties.length; i++) {\n      const key = properties[i];\n      const value = (obj as any)[key];\n\n      if (key === '__index') {\n        continue;\n      }\n\n      if (obj instanceof Game) {\n        if (key === 'tooltip' || key === 'tooltipElement' || key === 'messageLog') {\n          continue;\n        }\n      }\n\n      const serializedValue = this.serializeObject(value);\n      if (serializedValue === undefined) {\n        continue;\n      }\n\n      result[key] = serializedValue;\n      propertyCount++;\n    }\n\n    if (propertyCount === 0) {\n      // Ignore objects without any properties\n      return undefined;\n    }\n\n    if (className && refType) {\n      return {\n        '__className': className,\n        '__index': obj['__index']\n      };\n    } else {\n      return result;\n    }\n  }\n\n  private serializeArray(a: Array<any>) {\n    const result = [];\n    for (let i = 0; i < a.length; i++) {\n      result.push(this.serializeObject(a[i]));\n    }\n    return result;\n  }\n}\n","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap/tilemapcell';\nimport { Serializable } from './serializable';\n\n@Serializable('Talent')\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n"],"sourceRoot":""}