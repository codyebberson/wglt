{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/entitybutton.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/entitycontainerdialog.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","point","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","Effect","countdown","blocking","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","panel_1","Dialog","title","closeButton","renderer","draw","app","Input","down","downCount","upCount","AI","entity","activatedCount","input_1","KEY_COUNT","Keyboard","el","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","start","dx","dy","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","Math","floor","actualHeight","update","abs","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","src","gui_1","AppState","GUI","dialogrenderer_1","DialogRenderer","rootPanel","dragOffset","updateDragging","mouse","target","tryDrop","move","undefined","dropTarget","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","drawImage","w","h","sx","sy","elements","index","push","listeners","onAdd","indexOf","splice","onRemove","listener","g","b","a","fromHsv","v","f","q","effect_1","DURATION","BumpEffect","offset","colors_1","FloatingTextEffect","str","pixelX","pixelY","color","frame","viewport","min","drawCenteredString","SlideEffect","count","tileSize","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","u","alt","blocked","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Button","destRect","sprite","shortcutKey","onClick","dst","offsetX","offsetY","startDragging","isKeyPressed","isClicked","click","ButtonSlot","button","buttonSlotRect","drawString","String","fromCharCode","button_1","EntityButton","entities","use","toString","Message","text","__export","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","round","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","bumpeffect_1","floatingtexteffect_1","slideeffect_1","Entity","blocks","health","maxHealth","actionPoints","inventory","canPickup","canAttack","destX","destY","isBlocked","xSpeed","ySpeed","effects","targetX","targetY","distance","hypot","onAttack","takeDamage","damage","onDamage","onDeath","item","onPickup","onUse","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","messageLog","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","turnCount","currEntity","player","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetCallback","callback","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","getEnemyAt","targetTile","path","attack","getCell","nextStep","right","up","wait","tryMoveOrAttack","onBump","ai","recomputeFov","sort","computeFov","ai_1","BasicMonster","monster","distanceTo","moveToward","rng_1","ConfusedMonster","rng","numTurns","oldAi","ProjectileEffect","position","velocity","duration","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","buttonslot_1","entitybutton_1","BUTTON_SPACING","EntityContainerDialog","capacity","addListener","_","addItem","removeItem","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","ImagePanel","srcRect","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","tilemapVS","tilemapFS","TileMapCell","tile","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {App} from '../app';\nimport {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Entity} from '../entity';\n\nexport abstract class AI {\n  readonly entity: Entity;\n  activatedCount: number;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n      if (!this.down) {\n        this.down = true;\n        this.prev.x = this.x;\n        this.prev.y = this.y;\n        this.start.x = this.x;\n        this.start.y = this.y;\n        this.dx = 0;\n        this.dy = 0;\n        this.dragDistance = 0;\n      }\n    } else {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n  onDrop?: Function;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && this.tryDrop(dragElement, target)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n\n  private tryDrop(dragElement: Panel, dropTarget: Panel) {\n    if (dropTarget === this.rootPanel) {\n      // Cannot drop on root panel\n      return false;\n    }\n\n    if (this.onDrop) {\n      return this.onDrop(dragElement, dropTarget);\n    }\n\n    // Block drag and drop by default\n    return false;\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse) && this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(destRect: Rect, shortcutKey?: Key) {\n    super(destRect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawString(String.fromCharCode(this.shortcutKey), dst.x2 - 7, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Entity} from '../entity';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class EntityButton extends Button {\n  readonly entities: Entity[];\n\n  constructor(destRect: Rect, entity: Entity) {\n    super(destRect, entity.sprite);\n    this.entities = [entity];\n  }\n\n  click() {\n    if (this.entities.length > 0) {\n      this.entities[0].use();\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.entities.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawString(this.entities.length.toString(), dst.x2 - 7, dst.y2 - 10);\n    }\n  }\n}","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/entitybutton';\nexport * from './gui/entitycontainerdialog';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './input';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './tilemap';\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a > 0.5) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport {XArray} from './xarray';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  health: number;\n  maxHealth: number;\n  actionPoints: number;\n  inventory: XArray<Entity>;\n  ai?: AI;\n  canPickup: boolean;\n  canAttack: boolean;\n  onBump?: Function;\n  onAttack?: Function;\n  onDamage?: Function;\n  onDeath?: Function;\n  onPickup?: Function;\n  onUse?: Function;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.actionPoints = 1;\n    this.inventory = new XArray<Entity>();\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.actionPoints--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  attack(target: Entity) {\n    if (target === this) {\n      return;\n    }\n\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(this, target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.actionPoints--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeDamage(damage: number) {\n    this.health -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.onDamage) {\n      this.onDamage(this);\n    }\n\n    if (this.health <= 0) {\n      this.health = 0;\n      if (this.onDeath) {\n        this.onDeath(this);\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Entity) {\n    if (item.onPickup) {\n      item.onPickup(this, item);\n    }\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use() {\n    if (!this.onUse) {\n      return false;\n    }\n    this.onUse(this);\n    return true;\n  }\n\n  distanceTo(other: Entity) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n}\n","import {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Entity;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Entity;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity.actionPoints > 0) {\n        if (currEntity === this.player) {\n          this.handlePlayerInput();\n          break;\n        } else {\n          this.doAi(currEntity);\n        }\n      }\n      if (!this.blocked && currEntity.actionPoints <= 0) {\n        // Turn is over\n        currEntity.actionPoints = 0;\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetCallback;\n  }\n\n  startTargeting(callback: Function) {\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.targetCallback) {\n      this.targetCallback(this.cursor.x, this.cursor.y);\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.actionPoints = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          if (player.onBump(other)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Entity) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.actionPoints = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        this.entities[i].actionPoints = 1;\n      }\n    }\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!other.canAttack || other.health <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.entity;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.health > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = entity.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.entity.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.entity.ai = this.oldAi;\n    }\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {EntityButton} from './entitybutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class EntityContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly entities: XArray<Entity>;\n\n  constructor(rect: Rect, title: string, capacity: number, entities: XArray<Entity>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.entities = entities;\n\n    entities.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      this.add(new ButtonSlot(new Rect(i * 24, 0, 24, 24)));\n    }\n  }\n\n  private addItem(item: Entity) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.entities.push(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new EntityButton(freeSlot.rect.clone(), item));\n    }\n  }\n\n  private removeItem(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof EntityButton) {\n        const index = button.entities.indexOf(item);\n        if (index >= 0) {\n          button.entities.splice(index, 1);\n          if (button.entities.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof EntityButton) {\n        const existing = button.entities[0];\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}