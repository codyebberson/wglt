{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/effects/fadeineffect.ts","webpack://wglt/./src/effects/fadeouteffect.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/talent.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","Effect","countdown","blocking","game","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","point","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","GREEN","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","panel_1","Dialog","title","closeButton","renderer","draw","app","g","b","a","undefined","fromHsv","h","v","f","q","Button","destRect","sprite","shortcutKey","onClick","src","dst","offsetX","offsetY","mouse","start","startDragging","isKeyPressed","isClicked","click","down","ButtonSlot","button","buttonSlotRect","drawImage","drawRightString","String","fromCharCode","button_1","ItemButton","containerItems","initialItem","stackItems","item","player","use","toString","TargetType","Entity","blocks","offset","pixelX","tileSize","pixelY","Math","hypot","viewport","bumper","elements","index","el","push","listeners","onAdd","indexOf","splice","onRemove","listener","AI","actor","activatedCount","Input","downCount","upCount","ItemShortcutButton","shortcutItem","getItem","count","countItems","colors_1","TalentButton","talent","shortcut","ability","cooldown","cooldownSprite","percent","frame","round","frames","u","cx","cy","drawCenteredString","ability_1","bumpeffect_1","floatingtexteffect_1","slideeffect_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","dx","dy","destX","destY","isBlocked","xSpeed","ySpeed","effects","SlideEffect","blocked","targetX","targetY","abs","move","target","onAttack","takeDamage","BumpEffect","heal","min","addFloatingText","damage","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","color","FloatingTextEffect","effect_1","DURATION","entity","update","floor","RNG","seed","state","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","input_1","KEY_COUNT","Keyboard","keys","Array","addEventListener","e","setKey","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","actualHeight","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","gui_1","AppState","GUI","dialogrenderer_1","itemshortcutbutton_1","DialogRenderer","rootPanel","dragOffset","updateDragging","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","w","sx","sy","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","alt","DEFAULT_TICKS_PER_FRAME","Sprite","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","Message","text","__export","ai_1","BasicMonster","monster","distanceTo","moveToward","attack","rng_1","ConfusedMonster","rng","numTurns","oldAi","ai","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","drawString","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","FadeInEffect","duration","FadeOutEffect","ProjectileEffect","position","velocity","actor_1","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","messageLog","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","onDone","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetAbility","targetCallback","ENTITY","getEnemyAt","TILE","getCell","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","targetTile","path","distance","nextStep","right","up","wait","tryMoveOrAttack","onBump","recomputeFov","sort","computeFov","stopAutoWalk","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","itembutton_1","itemcontainerbuttonslot_1","BUTTON_SPACING","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","buttonslot_1","ImagePanel","srcRect","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","talentbutton_1","ShortcutButtonSlot","itemButton","TalentsDialog","Item","user","Talent","rank","tilemapVS","tilemapFS","TileMapCell","tile","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n  onDone?: Function;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly GREEN = fromRgb(0x00, 0xff, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly stackItems: XArray<Item>;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new XArray<Item>();\n    this.stackItems.add(initialItem);\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n\n  cast(caster: Actor, target?: Entity|TileMapCell): boolean;\n}\n","import {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  activatedCount: number;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {Button} from './button';\n\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: XArray<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: XArray<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (item.name === this.shortcutItem.name) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.containerItems.get(i).name === this.shortcutItem.name) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Colors} from '../colors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\n\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, Colors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, Colors.WHITE);\n      }\n    }\n  }\n}","import {Ability, TargetType} from './ability';\nimport {AI} from './ai/ai';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Entity} from './entity';\nimport {Game} from './game';\nimport {Item} from './item';\nimport {Sprite} from './sprite';\nimport {Talent} from './talent';\nimport {XArray} from './xarray';\n\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: XArray<Item>;\n  talents: XArray<Talent>;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new XArray<Item>();\n    this.talents = new XArray<Talent>();\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.ap--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor) {\n    if (target === this) {\n      return;\n    }\n\n    // TODO: Enforce distance check?\n\n    const damage = 10;\n    this.onAttack(target, damage);\n    target.takeDamage(damage);\n    this.ap--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), Colors.LIGHT_GREEN);\n  }\n\n  takeDamage(damage: number) {\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), Colors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, callback?: Function) {\n    if (ability.targetType === TargetType.SELF) {\n      if (ability.cast(this)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    const x = this.pixelX + (this.sprite.width / 2) | 0;\n    const y = this.pixelY - 4;\n    this.game.effects.push(new FloatingTextEffect(str, x, y, color));\n  }\n\n  onAttack(target: Actor, damage: number) {}\n  onDeath() {}\n}","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/fadeineffect';\nexport * from './effects/fadeouteffect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap';\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.0) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Actor} from '../actor';\nimport {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.actor.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeInEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, 0, 32, 16, 16, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FadeOutEffect extends Effect {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, 0, 32, 16, 16, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Colors} from './colors';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Actor;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        const effect = this.effects[i];\n        if (effect.onDone) {\n          effect.onDone();\n        }\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            this.handlePlayerInput();\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (!this.blocked && currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getEnemyAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.ap = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Actor) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor) {\n          entity.ap = entity.maxAp;\n          for (let j = 0; j < entity.talents.length; j++) {\n            const talent = entity.talents.get(j);\n            if (talent.cooldown > 0) {\n              talent.cooldown--;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!(other instanceof Actor)) {\n        continue;\n      }\n      if (other.hp <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n\n      // Determine which entities are activated\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities[i];\n        if (entity instanceof Actor && entity.ai) {\n          if (this.tileMap.isVisible(entity.x, entity.y)) {\n            if (entity.ai.activatedCount < 0) {\n              // Spotted a new entity, stop auto walking\n              this.player.addFloatingText('!', Colors.WHITE);\n              this.stopAutoWalk();\n            }\n            entity.ai.activatedCount++;\n          } else {\n            entity.ai.activatedCount = -1;\n          }\n        }\n      }\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class ItemContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, title: string, capacity: number, items: XArray<Item>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.items = items;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), items));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Item} from '../item';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\n\nexport class ItemContainerButtonSlot extends ButtonSlot {\n  readonly items: XArray<Item>;\n\n  constructor(rect: Rect, items: XArray<Item>) {\n    super(rect);\n    this.items = items;\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\n\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class TalentsDialog extends Dialog {\n  readonly capacity: number;\n  readonly talents: XArray<Talent>;\n\n  constructor(rect: Rect, title: string, capacity: number, talents: XArray<Talent>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.talents = talents;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24)));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\n\nexport class Item extends Entity {\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n}","import {Ability} from './ability';\nimport {Actor} from './actor';\n\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use() {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}