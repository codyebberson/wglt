{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/effects/effect.ts","webpack://wglt/./src/colors.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/xarray.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/effects/bumpeffect.ts","webpack://wglt/./src/effects/floatingtexteffect.ts","webpack://wglt/./src/effects/slideeffect.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/gui/entitybutton.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/effects/scrolleffect.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/effects/projectileeffect.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/entitycontainerdialog.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/tilemap.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","[object Object]","x","y","this","delta","xarray_1","Panel","rect","gui","children","XArray","modal","visible","length","setGui","panel","parent","add","remove","newParent","point","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","Effect","countdown","blocking","game","color_1","Colors","BLACK","fromRgb","WHITE","GRAY","LIGHT_GRAY","DARK_GRAY","YELLOW","BROWN","RED","LIGHT_RED","DARK_RED","LIGHT_GREEN","DARK_GREEN","LIGHT_CYAN","DARK_CYAN","LIGHT_BLUE","DARK_BLUE","LIGHT_MAGENTA","DARK_MAGENTA","ORANGE","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","panel_1","Dialog","title","closeButton","renderer","draw","app","Input","down","downCount","upCount","AI","entity","activatedCount","TargetType","input_1","KEY_COUNT","Keyboard","el","keys","Array","addEventListener","e","setKey","state","stopPropagation","preventDefault","keyCode","rect_1","Mouse","prev","start","dx","dy","dragDistance","canvas","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","touches","touch","updatePosition","clientX","clientY","type","focus","getBoundingClientRect","terminalAspectRatio","size","rectAspectRatio","actualWidth","excess","Math","floor","actualHeight","update","abs","loadShader","gl","source","shader","createShader","shaderSource","compileShader","ExtendedTexture","WebGLTexture","loaded","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","createTexture","url","texture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","src","gui_1","AppState","GUI","dialogrenderer_1","DialogRenderer","rootPanel","dragOffset","updateDragging","mouse","target","tryDrop","move","undefined","dropTarget","onDrop","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dw","dh","dx1","dy1","dx2","dy2","drawImage","w","h","sx","sy","elements","index","push","listeners","onAdd","indexOf","splice","onRemove","listener","g","b","a","fromHsv","v","f","q","effect_1","DURATION","BumpEffect","offset","colors_1","FloatingTextEffect","str","pixelX","pixelY","color","frame","viewport","min","drawCenteredString","SlideEffect","count","tileSize","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","cell","buildPath","result","curr","reverse","computePath","map","dest","maxDist","grid","clearDijkstra","sourceCell","u","alt","blocked","DEFAULT_TICKS_PER_FRAME","Sprite","frames","loop","ticksPerFrame","colorOverride","animIndex","animDelay","globalAnimIndex","RNG","seed","nextInt","end","rangeSize","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Button","destRect","sprite","shortcutKey","onClick","dst","offsetX","offsetY","startDragging","isKeyPressed","isClicked","click","ButtonSlot","button","buttonSlotRect","drawString","String","fromCharCode","button_1","EntityButton","entities","use","toString","Message","text","__export","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","App","options","Error","getContext","alpha","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","style","outline","tabIndex","renderSet","RenderSet","imageUrl","keyboard","handleResizeEvent","renderLoop","innerWidth","innerHeight","mobile","isMobile","minMajorAxis","minMinorAxis","max","round","navigator","userAgent","match","resetGl","flush","requestAnimationFrame","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","getKey","START_CHAR_CODE","END_CHAR_CODE","Font","charCode","sum","getWidth","charCodeAt","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","glutils_1","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","program","viewportSizeLocation","getUniformLocation","positionLocation","getAttribLocation","texcoordLocation","colorLocation","positionBuffer","createBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","Float32Array","texcoordArray","colorUint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","j","isInRange","getOffset","optColor","optDw","optDh","tx","ty","tx2","ty2","setUint32","useProgram","uniform2f","activeTexture","TEXTURE0","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","FLOAT","normalize","stride","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","bumpeffect_1","floatingtexteffect_1","slideeffect_1","Entity","blocks","health","maxHealth","actionPoints","inventory","canPickup","canAttack","destX","destY","isBlocked","xSpeed","ySpeed","effects","targetX","targetY","distance","hypot","onAttack","takeDamage","damage","onDeath","item","onPickup","onUse","bumper","attacker","user","ability_1","appstate_1","scrolleffect_1","keys_1","path_1","sprite_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","DEFAULT_VIEW_DISTANCE","Game","turnIndex","cursor","pathIndex","followPlayer","messageLog","updateGlobalAnimations","updateEffects","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawEffects","effect","isDone","turnCount","currEntity","player","handlePlayerInput","doAi","nextTurn","horizontalMargin","verticalMargin","tileMap","isTargeting","targetSprite","isVisible","blockingCount","targetAbility","ability","callback","targetCallback","targetType","ENTITY","getEnemyAt","TILE","getCell","cast","cancelTargeting","isKeyDown","scrollFrameCount","scrollDx","scrollDy","ScrollEffect","endTargeting","targetEntity","targetTile","path","attack","nextStep","right","up","wait","tryMoveOrAttack","onBump","ai","recomputeFov","sort","computeFov","ai_1","BasicMonster","monster","distanceTo","moveToward","rng_1","ConfusedMonster","rng","numTurns","oldAi","ProjectileEffect","position","velocity","duration","defaultselectoptionrenderer_1","dialog_1","MARGIN","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","lineHeight","startY","endY","buttonslot_1","entitybutton_1","BUTTON_SPACING","EntityContainerDialog","capacity","addListener","_","addItem","removeItem","existingButton","getExistingButton","freeSlot","getNextFreeSlot","clone","buttonSlot","containerRect","buttonRect","ImagePanel","srcRect","message_1","MessageLog","maxItems","messages","msg","MessagePanel","message","LINE_HEIGHT","SelectDialog","close","tilemapVS","tilemapFS","TileMapCell","tile","seen","TileMapLayer","imageData","dimensions","texSubImage2D","TileMap","layerCount","layers","tileWidth","tileHeight","originX","originY","minX","maxX","minY","maxY","quadVertBuffer","STATIC_DRAW","tilemapShader","positionAttribute","textureAttribute","viewportSizeUniform","viewOffsetUniform","mapSizeUniform","tileSizeUniform","tileSamplerUniform","spriteSamplerUniform","initGl","layerIndex","layer","ti","uniform1i","TEXTURE1","tx1","ty1","isSeen","setAlpha","uniform2fv","updateGl","radius","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","idx"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\nimport {XArray} from '../xarray';\n\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: XArray<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new XArray();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {App} from '../app';\nimport {Game} from '../game';\n\nexport abstract class Effect {\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from './color';\n\nexport class Colors {\n  static readonly BLACK = fromRgb(0, 0, 0);\n  static readonly WHITE = fromRgb(0xff, 0xff, 0xff);\n  static readonly GRAY = fromRgb(0x80, 0x80, 0x80);\n  static readonly LIGHT_GRAY = fromRgb(0xaa, 0xaa, 0xaa);\n  static readonly DARK_GRAY = fromRgb(0x55, 0x55, 0x55);\n  static readonly YELLOW = fromRgb(0xff, 0xff, 0x55);\n  static readonly BROWN = fromRgb(0xaa, 0x55, 0x00);\n  static readonly RED = fromRgb(0xff, 0x00, 0x00);\n  static readonly LIGHT_RED = fromRgb(0xff, 0x55, 0x55);\n  static readonly DARK_RED = fromRgb(0xaa, 0x00, 0x00);\n  static readonly LIGHT_GREEN = fromRgb(0x55, 0xff, 0x55);\n  static readonly DARK_GREEN = fromRgb(0x00, 0xaa, 0x00);\n  static readonly LIGHT_CYAN = fromRgb(0x55, 0xff, 0xff);\n  static readonly DARK_CYAN = fromRgb(0x00, 0xaa, 0xaa);\n  static readonly LIGHT_BLUE = fromRgb(0x55, 0x55, 0xff);\n  static readonly DARK_BLUE = fromRgb(0x00, 0x00, 0xaa);\n  static readonly LIGHT_MAGENTA = fromRgb(0xff, 0x55, 0xff);\n  static readonly DARK_MAGENTA = fromRgb(0xaa, 0x00, 0xaa);\n  static readonly ORANGE = fromRgb(0xff, 0x88, 0x00);\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class Dialog extends Panel {\n  readonly title: string;\n  closeButton: boolean;\n\n  constructor(rect: Rect, title: string) {\n    super(rect);\n    this.title = title;\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","import {Entity} from '../entity';\n\nexport abstract class AI {\n  readonly entity: Entity;\n  activatedCount: number;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n    this.activatedCount = -1;\n  }\n\n  abstract doAi(): void;\n}","import {Entity} from './entity';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n\n  cast(caster: Entity, target?: Entity|TileMapCell): boolean;\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport {App} from './app';\nimport {Input} from './input';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n      if (!this.down) {\n        this.down = true;\n        this.prev.x = this.x;\n        this.prev.y = this.y;\n        this.start.x = this.x;\n        this.start.y = this.y;\n        this.dx = 0;\n        this.dy = 0;\n        this.dragDistance = 0;\n      }\n    } else {\n      this.down = false;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect|DOMRect|Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < 4;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > 4;\n  }\n}","\nexport class ExtendedTexture extends WebGLTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n\n  constructor() {\n    super();\n    this.loaded = false;\n    this.width = 0;\n    this.height = 0;\n  }\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {Panel} from './gui/panel';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\n\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n  onDrop?: Function;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && this.tryDrop(dragElement, target)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n\n  private tryDrop(dragElement: Panel, dropTarget: Panel) {\n    if (dropTarget === this.rootPanel) {\n      // Cannot drop on root panel\n      return false;\n    }\n\n    if (this.onDrop) {\n      return this.onDrop(dragElement, dropTarget);\n    }\n\n    // Block drag and drop by default\n    return false;\n  }\n}\n","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\n\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {XArrayListener} from './xarraylistener';\n\nexport class XArray<T> {\n  private readonly elements: T[];\n  private listeners?: Array<XArrayListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: XArrayListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nconst DURATION = 12;\n\nexport class BumpEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","\nimport {App} from '../app';\nimport {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Game} from '../game';\n\nimport {Effect} from './effect';\n\nexport class FloatingTextEffect extends Effect {\n  readonly str: string;\n  readonly pixelX: number;\n  readonly pixelY: number;\n  readonly color: Color;\n\n  constructor(str: string, pixelX: number, pixelY: number, color?: Color) {\n    super(40, false);\n    this.str = str;\n    this.pixelX = pixelX;\n    this.pixelY = pixelY;\n    this.color = color || Colors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = 40 - this.countdown;\n    const x = this.pixelX - game.viewport.x;\n    const y = this.pixelY - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Effect} from './effect';\n\nexport class SlideEffect extends Effect {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.x += this.entity.offset.x / this.entity.game.tileSize.width;\n      this.entity.y += this.entity.offset.y / this.entity.game.tileSize.height;\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","import {Entity} from './entity';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\n// const dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\n// const dys = [-1, -1, -1, 0, 0, 1, 1, 1];\n// const costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\nconst dxs = [0, -1, 1, 0];\nconst dys = [-1, 0, 0, 1];\nconst costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && !map.grid[y][x].blocked) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell|null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","import {App} from './app';\nimport {Color} from './color';\nimport {Rect} from './rect';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\nexport class Sprite extends Rect {\n  private static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number, y: number, width: number, height: number, frames?: number, loop?: boolean, ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","\n/**\n * Random number generator.\n *\n * LCG\n * https://stackoverflow.com/a/424445/2051724\n */\nexport class RNG {\n  private readonly m: number;\n  private readonly a: number;\n  private readonly c: number;\n  private state: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    // LCG using GCC's constants\n    this.m = 0x80000000;  // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n    this.state = seed || 1;\n  }\n\n  private nextInt() {\n    this.state = (this.a * this.state + this.c) % this.m;\n    return this.state;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    // returns in range [0,1]\n    return this.nextInt() / (this.m - 1);\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    // returns in range [start, end): including start, excluding end\n    // can't modulu nextInt because of weak randomness in lower bits\n    const rangeSize = end - start;\n    const randomUnder1 = this.nextInt() / this.m;\n    return start + ((randomUnder1 * rangeSize) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: {[key: string]: number}) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\n\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse) && this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\n\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(destRect: Rect, shortcutKey?: Key) {\n    super(destRect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawString(String.fromCharCode(this.shortcutKey), dst.x2 - 7, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import {Entity} from '../entity';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\n\nexport class EntityButton extends Button {\n  readonly entities: Entity[];\n\n  constructor(destRect: Rect, entity: Entity) {\n    super(destRect, entity.sprite);\n    this.entities = [entity];\n  }\n\n  click() {\n    if (this.entities.length > 0) {\n      this.entities[0].use();\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.entities.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawString(this.entities.length.toString(), dst.x2 - 7, dst.y2 - 10);\n    }\n  }\n}","import {Color} from './color';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n","export * from './ability';\nexport * from './app';\nexport * from './appstate';\nexport * from './color';\nexport * from './colors';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './effects/bumpeffect';\nexport * from './effects/effect';\nexport * from './effects/floatingtexteffect';\nexport * from './effects/projectileeffect';\nexport * from './effects/slideeffect';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/entitybutton';\nexport * from './gui/entitycontainerdialog';\nexport * from './gui/imagepanel';\nexport * from './gui/panel';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/selectdialog';\nexport * from './input';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './path';\nexport * from './vec2';\nexport * from './rect';\nexport * from './rng';\nexport * from './sprite';\nexport * from './tilemap';\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   */\n  isMobile() {\n    return navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawString(str, x, y, color);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a > 0.5) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      let x = x0;\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n      y += height;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","import {AI} from './ai/ai';\nimport {Colors} from './colors';\nimport {BumpEffect} from './effects/bumpeffect';\nimport {FloatingTextEffect} from './effects/floatingtexteffect';\nimport {SlideEffect} from './effects/slideeffect';\nimport {Game} from './game';\nimport {SelectOption} from './gui/selectoption';\nimport {Sprite} from './sprite';\nimport {TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\nimport {XArray} from './xarray';\n\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  health: number;\n  maxHealth: number;\n  actionPoints: number;\n  inventory: XArray<Entity>;\n  ai?: AI;\n  canPickup: boolean;\n  canAttack: boolean;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.health = 100;\n    this.maxHealth = 100;\n    this.actionPoints = 1;\n    this.inventory = new XArray<Entity>();\n    this.canPickup = false;\n    this.canAttack = false;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  move(dx: number, dy: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    if (this.game.isBlocked(destX, destY)) {\n      return false;\n    }\n\n    const count = 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.effects.push(new SlideEffect(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    this.actionPoints--;\n    return true;\n  }\n\n  moveToward(targetX: number, targetY: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n    const distance = Math.hypot(dx, dy);\n    this.move(Math.round(dx / distance), Math.round(dy / distance));\n  }\n\n  attack(target: Entity) {\n    if (target === this) {\n      return;\n    }\n\n    const damage = 10;\n\n    if (this.onAttack) {\n      this.onAttack(target, damage);\n    }\n\n    target.takeDamage(damage);\n    this.actionPoints--;\n    this.game.effects.push(new BumpEffect(this, target));\n    this.game.blocked = true;\n  }\n\n  takeDamage(damage: number) {\n    this.health -= damage;\n\n    this.game.effects.push(new FloatingTextEffect(damage.toString(), this.pixelX + 8, this.pixelY - 4, Colors.RED));\n\n    if (this.health <= 0) {\n      this.health = 0;\n      if (this.onDeath) {\n        this.onDeath();\n      }\n\n      const index = this.game.entities.indexOf(this);\n      if (index >= 0) {\n        this.game.entities.splice(index, 1);\n      }\n    }\n  }\n\n  pickup(item: Entity) {\n    if (item.onPickup) {\n      item.onPickup(this);\n    }\n    this.inventory.add(item);\n    const index = this.game.entities.indexOf(item);\n    if (index >= 0) {\n      this.game.entities.splice(index, 1);\n    }\n  }\n\n  use() {\n    if (!this.onUse) {\n      return false;\n    }\n    this.onUse(this);\n    return true;\n  }\n\n  distanceTo(other: Entity|TileMapCell) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  sendToBack() {}\n\n  onBump(bumper: Entity) {}\n  onAttack(attacker: Entity, damage: number) {}\n  onDeath() {}\n  onPickup(user: Entity) {}\n  onUse(user: Entity) {}\n}\n","import {Ability, TargetType} from './ability';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Effect} from './effects/effect';\nimport {ScrollEffect} from './effects/scrolleffect';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {Sprite} from './sprite';\nimport {TileMap, TileMapCell} from './tilemap';\nimport {Vec2} from './vec2';\n\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\nexport class Game extends AppState {\n  readonly tileSize: Rect;\n  readonly viewport: Rect;\n  readonly effects: Effect[];\n  readonly entities: Entity[];\n  readonly cursor: Vec2;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  targetEntity?: Entity;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap?: TileMap;\n  player?: Entity;\n  followPlayer: boolean;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.effects = [];\n    this.entities = [];\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.pathIndex = 0;\n    this.followPlayer = true;\n  }\n\n  log(text: string, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(text, color);\n    }\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n\n    if (!this.gui.handleInput()) {\n      this.updateEffects();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n    this.drawTargeting();\n    this.drawEntities();\n    this.drawEffects();\n    this.gui.draw();\n  }\n\n  private updateEffects() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update effects\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (!effect.blocking || !this.blocked) {\n        effect.update();\n        if (effect.blocking) {\n          this.blocked = true;\n        }\n      }\n    }\n\n    // Remove completed effects\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      if (this.effects[i].isDone()) {\n        this.effects.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.turnIndex < 0 || this.turnIndex >= this.entities.length) {\n        // Turn index out of range\n        break;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities[this.turnIndex];\n      if (currEntity.actionPoints > 0) {\n        if (currEntity === this.player) {\n          this.handlePlayerInput();\n          break;\n        } else {\n          this.doAi(currEntity);\n        }\n      }\n      if (!this.blocked && currEntity.actionPoints <= 0) {\n        // Turn is over\n        currEntity.actionPoints = 0;\n        this.nextTurn();\n      }\n      if (this.blocked) {\n        // Waiting for animations\n        break;\n      }\n\n      turnCount++;\n    }\n  }\n\n  private updateViewport() {\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx;\n      this.viewport.y -= mouse.dy;\n      this.followPlayer = false;\n    } else if (this.player && this.followPlayer) {\n      const horizontalMargin = ((this.app.size.width - this.player.sprite.width) / 2) | 0;\n      const verticalMargin = ((this.app.size.height - this.player.sprite.height) / 2) | 0;\n      this.viewport.x = this.player.pixelX - horizontalMargin;\n      this.viewport.y = this.player.pixelY - verticalMargin;\n      this.viewport.width = this.app.size.width;\n      this.viewport.height = this.app.size.height;\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded && this.tileMap) {\n      this.tileMap.draw(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities[i];\n      if (!this.tileMap || this.tileMap.isVisible(entity.x, entity.y)) {\n        entity.draw();\n      }\n    }\n  }\n\n  private drawEffects() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      if (blockingCount === 0 || !effect.blocking) {\n        effect.draw(this);\n      }\n      if (effect.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getEnemyAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE && this.tileMap) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      this.followPlayer = false;\n\n      const scrollFrameCount = 4;\n      const scrollDx = 2 * this.tileSize.width / scrollFrameCount;\n      const scrollDy = 2 * this.tileSize.height / scrollFrameCount;\n\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, -scrollDy, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.effects.push(new ScrollEffect(this.viewport, -scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.effects.push(new ScrollEffect(this.viewport, scrollDx, 0, scrollFrameCount));\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.effects.push(new ScrollEffect(this.viewport, 0, scrollDy, scrollFrameCount));\n      }\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_UP)) {\n        this.cursor.y--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_LEFT)) {\n        this.cursor.x--;\n      }\n      if (this.app.isKeyPressed(Keys.VK_RIGHT)) {\n        this.cursor.x++;\n      }\n      if (this.app.isKeyPressed(Keys.VK_DOWN)) {\n        this.cursor.y++;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileSize.height) | 0;\n\n      this.targetEntity = this.getEnemyAt(tx, ty);\n      if (this.targetEntity) {\n        this.targetTile = undefined;\n        this.path = undefined;\n        if (this.player.distance(this.targetEntity.x, this.targetEntity.y) <= 1.0) {\n          this.player.attack(this.targetEntity);\n        }\n        return;\n      }\n\n      if (this.tileMap) {\n        const target = this.tileMap.getCell(tx, ty);\n        if (target && target !== this.targetTile) {\n          this.targetTile = target;\n          this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n          this.pathIndex = 0;\n        }\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (nextStep && this.getEnemyAt(nextStep.x, nextStep.y)) {\n        // Entity in the way.  Cancel the path.\n        nextStep = null;\n      }\n      if (!nextStep) {\n        this.targetTile = undefined;\n        this.path = undefined;\n      }\n    }\n\n    const down = this.app.isKeyPressed(Keys.VK_NUMPAD2) || this.app.isKeyPressed(Keys.VK_DOWN) ||\n        (nextStep && nextStep.y > this.player.y);\n\n    const left = this.app.isKeyPressed(Keys.VK_NUMPAD4) || this.app.isKeyPressed(Keys.VK_LEFT) ||\n        (nextStep && nextStep.x < this.player.x);\n\n    const right = this.app.isKeyPressed(Keys.VK_NUMPAD6) || this.app.isKeyPressed(Keys.VK_RIGHT) ||\n        (nextStep && nextStep.x > this.player.x);\n\n    const up = this.app.isKeyPressed(Keys.VK_NUMPAD8) || this.app.isKeyPressed(Keys.VK_UP) ||\n        (nextStep && nextStep.y < this.player.y);\n\n    const wait = this.app.isKeyPressed(Keys.VK_NUMPAD5);\n\n    if (up) {\n      this.tryMoveOrAttack(0, -1);\n    }\n    if (left) {\n      this.tryMoveOrAttack(-1, 0);\n    }\n    if (right) {\n      this.tryMoveOrAttack(1, 0);\n    }\n    if (down) {\n      this.tryMoveOrAttack(0, 1);\n    }\n    if (wait) {\n      this.player.actionPoints = 0;\n    }\n  }\n\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    // Start following the player again\n    this.followPlayer = true;\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (player.onBump) {\n          player.onBump(other);\n        }\n        return true;\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private doAi(entity: Entity) {\n    if (entity.ai) {\n      if (!this.tileMap || (this.tileMap.isVisible(entity.x, entity.y) && entity.ai.activatedCount > 0)) {\n        entity.ai.doAi();\n      }\n    }\n\n    entity.actionPoints = 0;\n  }\n\n  private nextTurn() {\n    if (this.player && this.entities[this.turnIndex] === this.player) {\n      // Player just finished turn\n\n      // Update FOV\n      if (this.player && this.tileMap) {\n        this.recomputeFov();\n\n        // Determine which entities are activated\n        for (let i = 0; i < this.entities.length; i++) {\n          const entity = this.entities[i];\n          if (entity.ai) {\n            if (this.tileMap.isVisible(entity.x, entity.y)) {\n              entity.ai.activatedCount++;\n            } else {\n              entity.ai.activatedCount = -1;\n            }\n          }\n        }\n      }\n\n      // Sort entities by distance from player\n      this.entities.sort((a, b) => {\n        if (!this.player) {\n          return 0;\n        }\n        const ad = Math.hypot(a.x - this.player.x, a.y - this.player.y);\n        const bd = Math.hypot(b.x - this.player.x, b.y - this.player.y);\n        return ad - bd;\n      });\n    }\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      // Reached the end of the entities list.  Start at beginning.\n      this.turnIndex = 0;\n      for (let i = 0; i < this.entities.length; i++) {\n        this.entities[i].actionPoints = 1;\n      }\n    }\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap && this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEnemyAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities[i];\n      if (!other.canAttack || other.health <= 0) {\n        // Dead, ignore\n        continue;\n      }\n      if (other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (this.player && this.tileMap) {\n      this.tileMap.computeFov(this.player.x, this.player.y, DEFAULT_VIEW_DISTANCE);\n    }\n  }\n}\n","import {Rect} from '../rect';\n\nimport {Effect} from './effect';\n\nexport class ScrollEffect extends Effect {\n  readonly viewport: Rect;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Rect, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.viewport = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.viewport.x += this.dx;\n      this.viewport.y += this.dy;\n    }\n  }\n}\n","import {AI} from './ai';\n\nexport class BasicMonster extends AI {\n  doAi() {\n    const monster = this.entity;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) >= 2) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.health > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      monster.attack(player);\n    }\n  }\n}\n","import {Entity} from '../entity';\nimport {RNG} from '../rng';\n\nimport {AI} from './ai';\n\nexport class ConfusedMonster extends AI {\n  readonly rng: RNG;\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.rng = new RNG();\n    this.numTurns = 10;\n    this.oldAi = entity.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      this.entity.move(this.rng.nextRange(-1, 2), this.rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.entity.ai = this.oldAi;\n    }\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Effect} from './effect';\n\nexport class ProjectileEffect extends Effect {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nconst MARGIN = 4;\n\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[]) {\n    super(rect, title);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {Colors} from '../colors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\n\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? Colors.YELLOW : Colors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Entity} from '../entity';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {XArray} from '../xarray';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {EntityButton} from './entitybutton';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\nexport class EntityContainerDialog extends Dialog {\n  readonly capacity: number;\n  readonly entities: XArray<Entity>;\n\n  constructor(rect: Rect, title: string, capacity: number, entities: XArray<Entity>) {\n    super(rect, title);\n    this.capacity = capacity;\n    this.entities = entities;\n\n    entities.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      this.add(new ButtonSlot(new Rect(i * 24, 0, 24, 24)));\n    }\n  }\n\n  private addItem(item: Entity) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.entities.push(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new EntityButton(freeSlot.rect.clone(), item));\n    }\n  }\n\n  private removeItem(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof EntityButton) {\n        const index = button.entities.indexOf(item);\n        if (index >= 0) {\n          button.entities.splice(index, 1);\n          if (button.entities.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Entity) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof EntityButton) {\n        const existing = button.entities[0];\n        if (existing.name === item.name) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.drawChildren();\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {Color} from '../color';\nimport {Colors} from '../colors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(text: string|Panel, color?: Color) {\n    if (text instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    this.messages.push(new Message(text, color || Colors.WHITE));\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const x = this.rect.x;\n    let y = this.rect.y;\n\n    if (y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + y + this.rect.height;\n      y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\n\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, title: string, options: SelectOption[], callback: Function) {\n    super(rect, title);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {initShaderProgram} from './glutils';\nimport {Vec2} from './vec2';\n\nconst TILE_SIZE = 16;\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n    'attribute vec2 position;' +\n    'attribute vec2 texture;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 viewOffset;' +\n    'uniform vec2 viewportSize;' +\n    'uniform vec2 tileSize;' +\n    'uniform vec2 mapSize;' +\n\n    'void main(void) {' +\n    '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n    '   texCoord = pixelCoord / mapSize / tileSize;' +\n    '   gl_Position = vec4(position, 0.0, 1.0);' +\n    '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n    'varying vec2 pixelCoord;' +\n    'varying vec2 texCoord;' +\n\n    'uniform vec2 tileSize;' +\n    'uniform sampler2D tiles;' +\n    'uniform sampler2D sprites;' +\n\n    'void main(void) {' +\n    '   vec4 tile = texture2D(tiles, texCoord);' +\n    '   if(tile.x == 1.0 && tile.y == 1.0) { discard; }' +\n    '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n    '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n    '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n    '   gl_FragColor.a = tile.a;' +\n    '}';\n\nexport class TileMapCell extends Vec2 {\n  tile: number;\n  blocked: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell|null;\n\n  constructor(x: number, y: number, tile: number) {\n    super(x, y);\n    this.tile = tile;\n    this.blocked = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n  readonly dimensions: Float32Array;\n  texture: WebGLTexture|null;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.dimensions = new Float32Array([width, height]);\n    this.texture = null;\n    this.clear();\n  }\n\n  clear() {\n    for (let i = 0; i < this.imageData.length; i++) {\n      this.imageData[i] = 255;\n    }\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    this.imageData[4 * (y * this.width + x) + 3] = alpha;\n  }\n\n  initGl(gl: WebGLRenderingContext) {\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n\n    // MUST be filtered with NEAREST or tile lookup fails\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  updateGl(gl: WebGLRenderingContext) {\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, this.imageData);\n  }\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly gl: WebGLRenderingContext;\n  readonly width: number;\n  readonly height: number;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  tileWidth: number;\n  tileHeight: number;\n\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n\n  // Field-of-view state\n  private originX: number;\n  private originY: number;\n  private minX: number;\n  private maxX: number;\n  private minY: number;\n  private maxY: number;\n\n  constructor(gl: WebGLRenderingContext, width: number, height: number, layerCount: number) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.tileWidth = 16;\n    this.tileHeight = 16;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.minX = 0;\n    this.maxX = width - 1;\n    this.minY = 0;\n    this.maxY = height - 1;\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y, 0);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n\n    const quadVerts = [\n      // x  y  u  v\n      -1, -1, 0, 1, 1, -1, 1, 1, 1,  1, 1, 0,\n\n      -1, -1, 0, 1, 1, 1,  1, 0, -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].initGl(gl);\n    }\n  }\n\n  setTile(layerIndex: number, x: number, y: number, tile: number, blocked?: boolean) {\n    this.grid[y][x].tile = tile;\n    this.grid[y][x].blocked = !!blocked;\n\n    const layer = this.layers[layerIndex];\n    const ti = 4 * (y * layer.width + x);\n    const tx = tile === 0 ? 255 : ((tile - 1) % 64) | 0;\n    const ty = tile === 0 ? 255 : ((tile - 1) / 64) | 0;\n    layer.imageData[ti + 0] = tx;\n    layer.imageData[ti + 1] = ty;\n  }\n\n  getCell(tx: number, ty: number) {\n    if (tx < 0 || tx >= this.width || ty < 0 || ty >= this.height) {\n      return null;\n    }\n    return this.grid[ty][tx];\n  }\n\n  getTile(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell ? cell.tile : 0;\n  }\n\n  isBlocked(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return !cell || cell.blocked;\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(tx: number, ty: number) {\n    const cell = this.getCell(tx, ty);\n    return cell && cell.seen;\n  }\n\n  setSeen(tx: number, ty: number, seen: boolean) {\n    const cell = this.getCell(tx, ty);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number) {\n    const gl = this.gl;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, this.tileWidth, this.tileHeight);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const tx1 = (x / this.tileWidth) | 0;\n    const ty1 = (y / this.tileHeight) | 0;\n    const tx2 = ((x + width) / this.tileWidth) | 0;\n    const ty2 = ((y + height) / this.tileHeight) | 0;\n\n    // Draw each layer of the map\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n\n      for (let ty = ty1; ty <= ty2; ty++) {\n        for (let tx = tx1; tx <= tx2; tx++) {\n          const alpha = this.isVisible(tx, ty) ? 255 : this.isSeen(tx, ty) ? 144 : 0;\n          layer.setAlpha(tx, ty, alpha);\n        }\n      }\n\n      gl.uniform2fv(this.mapSizeUniform, layer.dimensions);\n      gl.bindTexture(gl.TEXTURE_2D, layer.texture);\n      layer.updateGl(gl);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.minX = Math.max(0, originX - radius);\n    this.minY = Math.max(0, originY - radius);\n    this.maxX = Math.min(this.width - 1, originX + radius);\n    this.maxY = Math.min(this.height - 1, originY + radius);\n\n    for (let y = this.minY; y <= this.maxY; y++) {\n      for (let x = this.minX; x <= this.maxX; x++) {\n        this.grid[y][x].seen = this.grid[y][x].seen || this.grid[y][x].visible;\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.minY && y <= this.maxY;\n         y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n           processedCell <= iteration && x >= this.minX && x <= this.maxX;\n           x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.minX && x <= this.maxX;\n         x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n           processedCell <= iteration && y >= this.minY && y <= this.maxY;\n           y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blocked) &&\n              !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blocked)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blocked) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          if (this.grid[y][x].blocked) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}