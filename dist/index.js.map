{"version":3,"sources":["webpack://wglt/webpack/universalModuleDefinition","webpack://wglt/webpack/bootstrap","webpack://wglt/./src/serializable.ts","webpack://wglt/./src/vec2.ts","webpack://wglt/./src/rect.ts","webpack://wglt/./src/gui/panel.ts","webpack://wglt/./src/keys.ts","webpack://wglt/./src/animations/animation.ts","webpack://wglt/./src/palettes/standardcolors.ts","webpack://wglt/./src/color.ts","webpack://wglt/./src/gui/dialog.ts","webpack://wglt/./src/arraylist.ts","webpack://wglt/./src/gui/talentbutton.ts","webpack://wglt/./src/gui/itembutton.ts","webpack://wglt/./src/gui/itemshortcutbutton.ts","webpack://wglt/./src/gui/button.ts","webpack://wglt/./src/tilemap/tilemap.ts","webpack://wglt/./src/gui/buttonslot.ts","webpack://wglt/./src/ability.ts","webpack://wglt/./src/entity.ts","webpack://wglt/./src/ai/ai.ts","webpack://wglt/./src/input.ts","webpack://wglt/./src/gui.ts","webpack://wglt/./src/message.ts","webpack://wglt/./src/tilemap/tilemaprenderer.ts","webpack://wglt/./src/actor.ts","webpack://wglt/./src/animations/bumpanimation.ts","webpack://wglt/./src/animations/floatingtextanimation.ts","webpack://wglt/./src/animations/slideanimation.ts","webpack://wglt/./src/serializemetadata.ts","webpack://wglt/./src/app.ts","webpack://wglt/./src/keyboard.ts","webpack://wglt/./src/mouse.ts","webpack://wglt/./src/renderset.ts","webpack://wglt/./src/glutils.ts","webpack://wglt/./src/appstate.ts","webpack://wglt/./src/gui/dialogrenderer.ts","webpack://wglt/./src/game.ts","webpack://wglt/./src/path.ts","webpack://wglt/./src/rng.ts","webpack://wglt/./src/sprite.ts","webpack://wglt/./src/tilemap/tilemapcell.ts","webpack://wglt/./src/gui/shortcutbuttonslot.ts","webpack://wglt/./src/index.ts","webpack://wglt/./src/animations/animationpromise.ts","webpack://wglt/./src/ai/basicmonster.ts","webpack://wglt/./src/ai/confusedmonster.ts","webpack://wglt/./src/animations/fadeinanimation.ts","webpack://wglt/./src/animations/fadeoutanimation.ts","webpack://wglt/./src/animations/projectileanimation.ts","webpack://wglt/./src/font.ts","webpack://wglt/./src/compoundmessage.ts","webpack://wglt/./src/gui/tooltipdialog.ts","webpack://wglt/./src/tilemap/tilemaplayer.ts","webpack://wglt/./src/gui/complexselectdialog.ts","webpack://wglt/./src/gui/defaultselectoptionrenderer.ts","webpack://wglt/./src/gui/imagepanel.ts","webpack://wglt/./src/gui/itemcontainerdialog.ts","webpack://wglt/./src/gui/itemcontainerbuttonslot.ts","webpack://wglt/./src/gui/messagelog.ts","webpack://wglt/./src/gui/messagepanel.ts","webpack://wglt/./src/gui/selectdialog.ts","webpack://wglt/./src/gui/shortcutbar.ts","webpack://wglt/./src/gui/talentsdialog.ts","webpack://wglt/./src/item.ts","webpack://wglt/./src/palettes/cgacolors.ts","webpack://wglt/./src/palettes/pico8colors.ts","webpack://wglt/./src/serializer.ts","webpack://wglt/./src/talent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializemetadata_1","KNOWN_CLASSES","Serializable","options","ctor","metadata","createSerializeMetadata","className","valueType","Vec2","[object Object]","x","y","this","delta","__decorate","vec2_1","Rect","width","height","super","x1","y1","x2","y2","left","top","other","point","arraylist_1","Panel","rect","gui","children","ArrayList","modal","visible","length","setGui","panel","parent","add","remove","newParent","child","isDragging","childResult","getPanelAt","contains","drawChildren","drawContents","handleChildrenInput","handleInput","dragElement","tooltip","Keys","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","animationpromise_1","Animation","countdown","blocking","promise","AnimationPromise","game","color_1","StandardColors","fromRgb","g","b","a","undefined","fromHsv","h","v","f","q","keys_1","panel_1","Dialog","closeButton","renderer","draw","app","isKeyPressed","mouse","isClicked","elements","splice","index","el","push","listeners","onAdd","indexOf","onRemove","listener","standardcolors_1","button_1","TalentButton","Button","talent","shortcut","ability","sprite","tooltipMessages","use","cooldown","actor","cooldownSprite","percent","frame","Math","round","frames","u","drawImage","cx","cy","drawCenteredString","toString","BLACK","WHITE","ItemButton","containerItems","initialItem","stackItems","item","player","dst","drawRightString","onUpdateTooltip","updateTooltip","ItemShortcutButton","shortcutItem","getItem","count","countItems","isStackable","destRect","shortcutKey","onClick","src","offsetX","offsetY","start","startDragging","click","down","messages","tilemapcell_1","rect_1","tilemaplayer_1","getTileId","tileX","tileY","TileMap","layerCount","tileSize","depth","grid","Array","layers","dirty","originX","originY","visibleRect","prevVisibleRect","TileMapCell","TileMapLayer","z","clear","isOutOfRange","getTile","tile","setTile","blocked","blockedSight","cell","getCell","seen","isAnimated","animated","setAnimated","radius","vradius","copy","dx","dy","max","min","computeOctantY","computeOctantX","deltaX","deltaY","startSlopes","endSlopes","halfSlope","processedCell","extended","centreSlope","startSlope","endSlope","previousEndSlope","iteration","totalObstacles","obstaclesInLastLine","minSlope","floor","idx","ButtonSlot","button","buttonSlotRect","String","fromCharCode","TargetType","Entity","blocks","offset","zIndex","pixelX","pixelY","centerPixelX","centerPixelY","hypot","viewport","bumper","AI","alwaysActive","Input","downCount","upCount","dialogrenderer_1","itemshortcutbutton_1","talentbutton_1","itembutton_1","GUI","DialogRenderer","rootPanel","size","dragOffset","updateDragging","target","onDrop","move","removeAll","Message","text","color","pos","drawString","glutils_1","tilemapVS","tilemapFS","TileMapRenderer","gl","tileMap","quadVertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","tilemapShader","initShaderProgram","positionAttribute","getAttribLocation","textureAttribute","viewportSizeUniform","getUniformLocation","viewOffsetUniform","mapSizeUniform","tileSizeUniform","animFrameUniform","tileSamplerUniform","spriteSamplerUniform","layerTextures","texture","createTexture","imageData","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","animFrame","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1f","activeTexture","TEXTURE0","uniform1i","TEXTURE1","minX","minY","maxX","maxY","layer","alpha","isVisible","isSeen","setAlpha","texSubImage2D","drawArrays","TRIANGLES","ability_1","bumpanimation_1","floatingtextanimation_1","slideanimation_1","entity_1","Actor","hp","maxHp","ap","maxAp","inventory","talents","visibleDuration","j","slideCount","destX","destY","isBlocked","xSpeed","ySpeed","animations","SlideAnimation","targetX","targetY","abs","damage","onAttack","takeDamage","BumpAnimation","heal","addFloatingText","GREEN","attacker","RED","onDeath","entities","onPickup","onUse","callback","targetType","SELF","cast","startTargeting","str","FloatingTextAnimation","animation_1","DURATION","entity","update","METADATA_KEY","SerializeMetadata","getSerializeMetadata","font_1","keyboard_1","mouse_1","renderset_1","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_FILL_WINDOW","DEFAULT_SCALE_FACTOR","NORTHWEST_KEYS","NORTHEAST_KEYS","SOUTHWEST_KEYS","SOUTHEAST_KEYS","UP_KEYS","LEFT_KEYS","DOWN_KEYS","RIGHT_KEYS","WAIT_KEYS","App","canvas","Error","getContext","antialias","font","FONT_04B03","fillWindow","scaleFactor","center","disable","DEPTH_TEST","style","outline","tabIndex","focus","mobile","isMobile","renderSet","RenderSet","imageUrl","keyboard","Keyboard","Mouse","addEventListener","handleResizeEvent","renderLoop","innerWidth","innerHeight","minMajorAxis","minMinorAxis","navigator","userAgent","match","resetGl","state","flush","requestAnimationFrame","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positionArrayIndex","texcoordArrayIndex","colorArrayIndex","w","dw","dh","out","keyCode","getKey","isKeyArrayPressed","keys","input_1","KEY_COUNT","e","setKey","stopPropagation","preventDefault","MIN_DRAG_DISTANCE","LONG_PRESS_TICKS","prev","dragDistance","longPress","wheelDelta","lastWheelDelta","mouseEventHandler","handleEvent","touchEventHandler","handleTouchEvent","wheelEventHandler","handleMouseWheel","touches","touch","updatePosition","clientX","clientY","type","getBoundingClientRect","terminalAspectRatio","rectAspectRatio","actualWidth","excess","actualHeight","mwe","BUFFER_SIZE","spriteVertexShader","spriteFragmentShader","url","program","viewportSizeLocation","positionLocation","texcoordLocation","colorLocation","positionBuffer","texcoordBuffer","colorBuffer","spriteTexture","positionArray","texcoordArray","colorUint8Array","Uint8Array","colorDataView","DataView","buffer","getStringWidth","x0","y0","lines","split","getHeight","charCode","charCodeAt","isInRange","getOffset","getWidth","optColor","optDw","optDh","loaded","tx","ty","tx2","ty2","setUint32","DYNAMIC_DRAW","normalize","stride","primitiveType","loadShader","source","shader","createShader","shaderSource","compileShader","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","internalFormat","srcFormat","srcType","pixel","image","Image","onload","generateMipmap","gui_1","AppState","baseRect","closeButtonRect","dialog","sx0","sy0","sw","sh","sx1","sy1","sx2","sy2","dx0","dy0","dx1","dy1","dx2","dy2","sx","sy","actor_1","appstate_1","tooltipdialog_1","path_1","rng_1","sprite_1","serializable_1","tilemap_1","tilemaprenderer_1","DEFAULT_MAP_SIZE","Game","viewportFocus","focusMargins","turnIndex","cursor","TooltipDialog","rng","RNG","pathIndex","horizontalViewDistance","viewDistance","verticalViewDistance","zoom","mapSize","mapLayers","tileMapRenderer","message","messageLog","animation","Sprite","updateGlobalAnimations","updateZoom","updateAnimations","updateEntities","onUpdate","updateViewport","drawTileMap","drawTargeting","drawEntities","drawAnimations","tooltipElement","isLongPress","hoverPanel","vibrate","showAt","getCenter","isDone","resolve","turnCount","currEntity","handlePlayerInput","doAi","nextTurn","driftRate","focusLeftX","ceil","focusTopY","globalAnimIndex","isTargeting","targetSprite","blockingCount","targetAbility","targetCallback","ENTITY","getActorAt","TILE","cancelTargeting","ai","isKeyDown","isDownLeftKeyPressed","isDownKeyPressed","isDownRightKeyPressed","isLeftKeyPressed","isRightKeyPressed","isUpLeftKeyPressed","isUpKeyPressed","isUpRightKeyPressed","endTargeting","targetTile","path","computePath","nextStep","stopAutoWalk","tryMoveOrAttack","isWaitKeyPressed","onBump","map","tileWidth","tileHeight","visibleMinX","visibleMinY","visibleMaxX","visibleMaxY","pathTile","endTurn","recomputeFov","nextEntity","startTurn","recalculateViewportFocus","computeFov","dxs","dys","costs","getMinCell","bestCell","bestIndex","minDist","Infinity","buildPath","result","curr","reverse","dest","maxDist","clearDijkstra","sourceCell","alt","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","seed","mt","mti","setSeed","mag01","kk","nextInt","end","nextFloat","chances","total","reduce","roll","nextRange","runningTotal","chancesMap","values","chooseIndex","Sprite_1","loop","ticksPerFrame","colorOverride","animIndex","animDelay","buttonslot_1","ShortcutButtonSlot","itemButton","clone","__export","handlers","handler","ai_1","BasicMonster","damageFunc","monster","distanceTo","moveToward","attack","ConfusedMonster","numTurns","oldAi","FadeInAnimation","duration","blackoutRect","FadeOutAnimation","ProjectileAnimation","position","velocity","START_CHAR_CODE","END_CHAR_CODE","Font","sum","MonospacedFont","glyphSize","ProportionalFont","widths","offsets","message_1","CompoundMessage","dialog_1","lineHeight","msg","getIndex","defaultselectoptionrenderer_1","ComplexSelectDialog","selectedIndex","DefaultSelectOptionRenderer","option","selected","drawOption","onSelect","onCancel","startY","endY","YELLOW","ImagePanel","srcRect","itemcontainerbuttonslot_1","ItemContainerDialog","capacity","items","addListener","_","addItem","removeItem","ItemContainerButtonSlot","existingButton","getExistingButton","freeSlot","getNextFreeSlot","buttonSlot","existing","containerRect","buttonRect","MessageLog","maxItems","bottom","MessagePanel","SelectDialog","close","shortcutbuttonslot_1","ShortcutBar","spacing","rightToLeft","containsTalent","slot","getFreeSlot","containsItem","TalentsDialog","Item","pickup","user","CgaColors","Pico8Colors","game_1","app_1","Serializer","typeLists","obj","serializeObject","refs","objType","constructor","Function","serializeArray","refType","_c","_i","typeList","properties","getOwnPropertyNames","propertyCount","serializedValue","Talent","rank"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wglt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wglt\"] = factory();\n\telse\n\t\troot[\"wglt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","import { createSerializeMetadata, SerializeMetadata } from \"./serializemetadata\";\n\nexport const KNOWN_CLASSES: { [name: string]: SerializeMetadata } = {};\n\nexport interface SerializableOptions {\n  valueType?: boolean;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n}\n\nexport function Serializable(name: string, options?: SerializableOptions) {\n  return function (ctor: Function) {\n    const metadata = createSerializeMetadata(ctor);\n    metadata.className = name;\n\n    if (options) {\n      metadata.valueType = !!options.valueType;\n    }\n\n    KNOWN_CLASSES[name] = metadata;\n  };\n}\n","import { Serializable } from \"./serializable\";\n\n@Serializable('Vec2')\nexport class Vec2 {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(delta: Vec2) {\n    this.x += delta.x;\n    this.y += delta.y;\n  }\n}\n","import {Mouse} from './mouse';\nimport {Vec2} from './vec2';\n\nexport class Rect extends Vec2 {\n  width: number;\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    super(x, y);\n    this.width = width;\n    this.height = height;\n  }\n\n  get x1(): number {\n    return this.x;\n  }\n\n  get y1(): number {\n    return this.y;\n  }\n\n  get x2(): number {\n    return this.x + this.width;\n  }\n\n  get y2(): number {\n    return this.y + this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  copy(other: Rect) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  }\n\n  getCenter() {\n    return new Vec2(this.x + (this.width / 2) | 0, this.y + (this.height / 2) | 0);\n  }\n\n  intersects(other: Rect) {\n    return this.x <= other.x2 && this.x2 >= other.x && this.y <= other.y2 && this.y2 >= other.y;\n  }\n\n  contains(point: Vec2|Mouse) {\n    return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {GUI} from '../gui';\nimport {Mouse} from '../mouse';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Panel')\nexport class Panel {\n  gui: GUI|null;\n  readonly rect: Rect;\n  readonly children: ArrayList<Panel>;\n  modal: boolean;\n  visible: boolean;\n  parent?: Panel;\n\n  constructor(rect: Rect) {\n    this.gui = null;\n    this.rect = rect;\n    this.children = new ArrayList();\n    this.modal = false;\n    this.visible = true;\n  }\n\n  setGui(gui: GUI) {\n    if (this.gui) {\n      // Already set\n      return;\n    }\n    this.gui = gui;\n    for (let i = 0; i < this.children.length; i++) {\n      this.children.get(i).setGui(gui);\n    }\n  }\n\n  add(panel: Panel) {\n    panel.parent = this;\n    panel.setGui(this.gui as GUI);\n    this.children.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.children.remove(panel);\n  }\n\n  move(newParent: Panel) {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n    newParent.add(this);\n  }\n\n  getPanelAt(point: Mouse|Vec2): Panel|undefined {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.isDragging()) {\n        // Ignore dragging element\n        continue;\n      }\n      const childResult = child.getPanelAt(point);\n      if (childResult) {\n        return childResult;\n      }\n    }\n    if (this.rect.contains(point)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    this.drawChildren();\n  }\n\n  drawChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      child.drawContents();\n    }\n  }\n\n  handleInput(): boolean {\n    return this.handleChildrenInput();\n  }\n\n  handleChildrenInput() {\n    // for (let i = 0; i < this.children.length; i++) {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children.get(i);\n      if (!child.visible) {\n        // Ignore hidden elements\n        continue;\n      }\n      if (child.handleInput() || child.modal) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isDragging() {\n    return this.gui && this.gui.dragElement === this;\n  }\n\n  onDrop(panel: Panel) {\n    return false;\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    // By default, no visible tooltips\n    // Inheriting classes can override this method with tooltip details\n    tooltip.visible = false;\n  }\n}\n","\nexport type Key = number;\n\nexport class Keys {\n  static readonly VK_CANCEL: Key = 3;\n  static readonly VK_HELP: Key = 6;\n  static readonly VK_BACK_SPACE: Key = 8;\n  static readonly VK_TAB: Key = 9;\n  static readonly VK_CLEAR: Key = 12;\n  static readonly VK_ENTER: Key = 13;\n  static readonly VK_SHIFT: Key = 16;\n  static readonly VK_CONTROL: Key = 17;\n  static readonly VK_ALT: Key = 18;\n  static readonly VK_PAUSE: Key = 19;\n  static readonly VK_CAPS_LOCK: Key = 20;\n  static readonly VK_ESCAPE: Key = 27;\n  static readonly VK_SPACE: Key = 32;\n  static readonly VK_PAGE_UP: Key = 33;\n  static readonly VK_PAGE_DOWN: Key = 34;\n  static readonly VK_END: Key = 35;\n  static readonly VK_HOME: Key = 36;\n  static readonly VK_LEFT: Key = 37;\n  static readonly VK_UP: Key = 38;\n  static readonly VK_RIGHT: Key = 39;\n  static readonly VK_DOWN: Key = 40;\n  static readonly VK_PRINTSCREEN: Key = 44;\n  static readonly VK_INSERT: Key = 45;\n  static readonly VK_DELETE: Key = 46;\n  static readonly VK_0: Key = 48;\n  static readonly VK_1: Key = 49;\n  static readonly VK_2: Key = 50;\n  static readonly VK_3: Key = 51;\n  static readonly VK_4: Key = 52;\n  static readonly VK_5: Key = 53;\n  static readonly VK_6: Key = 54;\n  static readonly VK_7: Key = 55;\n  static readonly VK_8: Key = 56;\n  static readonly VK_9: Key = 57;\n  static readonly VK_COLON: Key = 58;\n  static readonly VK_SEMICOLON: Key = 59;\n  static readonly VK_LESS_THAN: Key = 60;\n  static readonly VK_EQUALS: Key = 61;\n  static readonly VK_GREATER_THAN: Key = 62;\n  static readonly VK_QUESTION_MARK: Key = 63;\n  static readonly VK_AT: Key = 64;\n  static readonly VK_A: Key = 65;\n  static readonly VK_B: Key = 66;\n  static readonly VK_C: Key = 67;\n  static readonly VK_D: Key = 68;\n  static readonly VK_E: Key = 69;\n  static readonly VK_F: Key = 70;\n  static readonly VK_G: Key = 71;\n  static readonly VK_H: Key = 72;\n  static readonly VK_I: Key = 73;\n  static readonly VK_J: Key = 74;\n  static readonly VK_K: Key = 75;\n  static readonly VK_L: Key = 76;\n  static readonly VK_M: Key = 77;\n  static readonly VK_N: Key = 78;\n  static readonly VK_O: Key = 79;\n  static readonly VK_P: Key = 80;\n  static readonly VK_Q: Key = 81;\n  static readonly VK_R: Key = 82;\n  static readonly VK_S: Key = 83;\n  static readonly VK_T: Key = 84;\n  static readonly VK_U: Key = 85;\n  static readonly VK_V: Key = 86;\n  static readonly VK_W: Key = 87;\n  static readonly VK_X: Key = 88;\n  static readonly VK_Y: Key = 89;\n  static readonly VK_Z: Key = 90;\n  static readonly VK_CONTEXT_MENU: Key = 93;\n  static readonly VK_NUMPAD0: Key = 96;\n  static readonly VK_NUMPAD1: Key = 97;\n  static readonly VK_NUMPAD2: Key = 98;\n  static readonly VK_NUMPAD3: Key = 99;\n  static readonly VK_NUMPAD4: Key = 100;\n  static readonly VK_NUMPAD5: Key = 101;\n  static readonly VK_NUMPAD6: Key = 102;\n  static readonly VK_NUMPAD7: Key = 103;\n  static readonly VK_NUMPAD8: Key = 104;\n  static readonly VK_NUMPAD9: Key = 105;\n  static readonly VK_MULTIPLY: Key = 106;\n  static readonly VK_ADD: Key = 107;\n  static readonly VK_SEPARATOR: Key = 108;\n  static readonly VK_SUBTRACT: Key = 109;\n  static readonly VK_DECIMAL: Key = 110;\n  static readonly VK_DIVIDE: Key = 111;\n  static readonly VK_F1: Key = 112;\n  static readonly VK_F2: Key = 113;\n  static readonly VK_F3: Key = 114;\n  static readonly VK_F4: Key = 115;\n  static readonly VK_F5: Key = 116;\n  static readonly VK_F6: Key = 117;\n  static readonly VK_F7: Key = 118;\n  static readonly VK_F8: Key = 119;\n  static readonly VK_F9: Key = 120;\n  static readonly VK_F10: Key = 121;\n  static readonly VK_F11: Key = 122;\n  static readonly VK_F12: Key = 123;\n  static readonly VK_F13: Key = 124;\n  static readonly VK_F14: Key = 125;\n  static readonly VK_F15: Key = 126;\n  static readonly VK_F16: Key = 127;\n  static readonly VK_F17: Key = 128;\n  static readonly VK_F18: Key = 129;\n  static readonly VK_F19: Key = 130;\n  static readonly VK_F20: Key = 131;\n  static readonly VK_F21: Key = 132;\n  static readonly VK_F22: Key = 133;\n  static readonly VK_F23: Key = 134;\n  static readonly VK_F24: Key = 135;\n  static readonly VK_NUM_LOCK: Key = 144;\n  static readonly VK_SCROLL_LOCK: Key = 145;\n  static readonly VK_CIRCUMFLEX: Key = 160;\n  static readonly VK_EXCLAMATION: Key = 161;\n  static readonly VK_DOUBLE_QUOTE: Key = 162;\n  static readonly VK_HASH: Key = 163;\n  static readonly VK_DOLLAR: Key = 164;\n  static readonly VK_PERCENT: Key = 165;\n  static readonly VK_AMPERSAND: Key = 166;\n  static readonly VK_UNDERSCORE: Key = 167;\n  static readonly VK_OPEN_PAREN: Key = 168;\n  static readonly VK_CLOSE_PAREN: Key = 169;\n  static readonly VK_ASTERISK: Key = 170;\n  static readonly VK_PLUS: Key = 171;\n  static readonly VK_PIPE: Key = 172;\n  static readonly VK_HYPHEN_MINUS: Key = 173;\n  static readonly VK_OPEN_CURLY_BRACKET: Key = 174;\n  static readonly VK_CLOSE_CURLY_BRACKET: Key = 175;\n  static readonly VK_TILDE: Key = 176;\n  static readonly VK_COMMA: Key = 188;\n  static readonly VK_PERIOD: Key = 190;\n  static readonly VK_SLASH: Key = 191;\n  static readonly VK_BACK_QUOTE: Key = 192;\n  static readonly VK_OPEN_BRACKET: Key = 219;\n  static readonly VK_BACK_SLASH: Key = 220;\n  static readonly VK_CLOSE_BRACKET: Key = 221;\n  static readonly VK_QUOTE: Key = 222;\n  static readonly VK_META: Key = 224;\n  static readonly VK_ALTGR: Key = 225;\n  static readonly VK_WIN: Key = 91;\n  static readonly VK_KANA: Key = 21;\n  static readonly VK_HANGUL: Key = 21;\n  static readonly VK_EISU: Key = 22;\n  static readonly VK_JUNJA: Key = 23;\n  static readonly VK_FINAL: Key = 24;\n  static readonly VK_HANJA: Key = 25;\n  static readonly VK_KANJI: Key = 25;\n  static readonly VK_CONVERT: Key = 28;\n  static readonly VK_NONCONVERT: Key = 29;\n  static readonly VK_ACCEPT: Key = 30;\n  static readonly VK_MODECHANGE: Key = 31;\n  static readonly VK_SELECT: Key = 41;\n  static readonly VK_PRINT: Key = 42;\n  static readonly VK_EXECUTE: Key = 43;\n  static readonly VK_SLEEP: Key = 95;\n}\n","import {Game} from '../game';\nimport {AnimationPromise} from './animationpromise';\n\nexport abstract class Animation {\n  readonly promise: AnimationPromise;\n  countdown: number;\n  blocking: boolean;\n\n  constructor(countdown: number, blocking: boolean) {\n    this.promise = new AnimationPromise();\n    this.countdown = countdown;\n    this.blocking = blocking;\n  }\n\n  isDone() {\n    return this.countdown <= 0;\n  }\n\n  update() {\n    this.countdown--;\n  }\n\n  draw(game: Game) {}\n}\n","\nimport {fromRgb} from '../color';\n\nexport enum StandardColors {\n  BLACK = fromRgb(0, 0, 0),\n  WHITE = fromRgb(0xFF, 0xFF, 0xFF),\n  GRAY = fromRgb(0x80, 0x80, 0x80),\n  YELLOW = fromRgb(0xFF, 0xFF, 0x00),\n  RED = fromRgb(0xFF, 0x00, 0x00),\n  GREEN = fromRgb(0x00, 0xFF, 0x00),\n  CYAN = fromRgb(0x00, 0xFF, 0xFF),\n  BLUE = fromRgb(0x00, 0x00, 0xFF),\n  PINK = fromRgb(0xFF, 0x00, 0xFF),\n  ORANGE = fromRgb(0xFF, 0x80, 0x00),\n}\n","\nexport type Color = number;\n\n/**\n * Creates a big-endian 32-bit RGBA color from red, green, and blue components.\n * @param r Red (0-255).\n * @param g Green (0-255).\n * @param b Blue (0-255).\n * @param a Optional alpha (0-255).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromRgb(r: number, g: number, b: number, a?: number): Color {\n  if (a === undefined) {\n    a = 255;\n  }\n  return ((r << 24) + (g << 16) + (b << 8) + a) as Color;\n}\n\n\n/**\n * Converts a color from HSV format to RGBA format.\n *\n * Based on: https://stackoverflow.com/a/17243070/2051724\n *\n * @param h Hue (0.0 - 1.0).\n * @param s Saturation (0.0 - 1.0).\n * @param v Value (0.0 - 1.0).\n * @param a Optional alpha (0.0 - 1.0).\n * @return A 32-bit unsigned integer color.\n */\nexport function fromHsv(h: number, s: number, v: number, a?: number): Color {\n  const i = (h * 6) | 0;\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r, g, b;\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n    default:\n      r = 0;\n      g = 0;\n      b = 0;\n  }\n  if (a === undefined) {\n    a = 1.0;\n  }\n  return fromRgb((r * 255) | 0, (g * 255) | 0, (b * 255) | 0, (a * 255) | 0);\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('Dialog')\nexport class Dialog extends Panel {\n  closeButton: boolean;\n\n  constructor(rect: Rect) {\n    super(rect);\n    this.closeButton = false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.renderer.draw(this.gui.app, this);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.visible = false;\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    if (mouse.isClicked() && !this.rect.contains(mouse)) {\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  close() {\n    if (!this.gui) {\n      return;\n    }\n    this.gui.remove(this);\n  }\n}\n","import {ArrayListListener} from './arraylistlistener';\nimport { Serializable } from './serializable';\n\n@Serializable('ArrayList')\nexport class ArrayList<T> {\n  private readonly elements: T[];\n  private listeners?: Array<ArrayListListener<T>>;\n\n  constructor() {\n    this.elements = [];\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  clear() {\n    this.elements.splice(0, this.elements.length);\n  }\n\n  get(index: number) {\n    return this.elements[index];\n  }\n\n  add(el: T) {\n    this.elements.push(el);\n    if (this.listeners) {\n      for (let i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].onAdd(this, el);\n      }\n    }\n  }\n\n  remove(el: T) {\n    const index = this.elements.indexOf(el);\n    if (index >= 0) {\n      this.elements.splice(index, 1);\n      if (this.listeners) {\n        for (let i = 0; i < this.listeners.length; i++) {\n          this.listeners[i].onRemove(this, el);\n        }\n      }\n    }\n  }\n\n  contains(el: T) {\n    return this.elements.indexOf(el) >= 0;\n  }\n\n  addListener(listener: ArrayListListener<T>) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(listener);\n  }\n}","import {StandardColors} from '../palettes/standardcolors';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('TalentButton')\nexport class TalentButton extends Button {\n  readonly talent: Talent;\n  readonly shortcut: boolean;\n\n  constructor(rect: Rect, talent: Talent, shortcut?: boolean) {\n    super(rect, talent.ability.sprite);\n    this.talent = talent;\n    this.shortcut = !!shortcut;\n    this.tooltipMessages = talent.ability.tooltipMessages;\n  }\n\n  click() {\n    this.talent.use();\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (this.talent.cooldown > 0) {\n      const game = this.talent.actor.game;\n      const cooldownSprite = game.cooldownSprite;\n      if (cooldownSprite) {\n        const percent = 1.0 - this.talent.cooldown / this.talent.ability.cooldown;\n        const frame = Math.round(percent * cooldownSprite.frames);\n        const u = cooldownSprite.x + frame * cooldownSprite.width;\n        const v = cooldownSprite.y;\n        const x = this.rect.x + ((this.rect.width - cooldownSprite.width) / 2) | 0;\n        const y = this.rect.y + ((this.rect.height - cooldownSprite.height) / 2) | 0;\n        game.app.drawImage(x, y, u, v, cooldownSprite.width, cooldownSprite.height);\n\n        const cx = this.rect.x + (this.rect.width / 2) | 0;\n        const cy = this.rect.y + (this.rect.height / 2) | 0;\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx + 1, cy - 2, StandardColors.BLACK);\n        game.app.drawCenteredString(this.talent.cooldown.toString(), cx, cy - 3, StandardColors.WHITE);\n      }\n    }\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { TooltipDialog } from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemButton')\nexport class ItemButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly stackItems: ArrayList<Item>;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, initialItem: Item) {\n    super(rect, initialItem.sprite);\n    this.containerItems = containerItems;\n    this.stackItems = new ArrayList<Item>();\n    this.stackItems.add(initialItem);\n    this.tooltipMessages = initialItem.tooltipMessages;\n  }\n\n  click() {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  removeAll() {\n    for (let i = this.stackItems.length - 1; i >= 0; i--) {\n      this.containerItems.remove(this.stackItems.get(i));\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (this.stackItems.length > 1) {\n      const dst = this.rect;\n      this.gui.app.drawRightString(this.stackItems.length.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.stackItems.length > 0) {\n      const item = this.stackItems.get(0);\n      item.onUpdateTooltip();\n      this.tooltipMessages = item.tooltipMessages;\n    }\n    super.updateTooltip(tooltip);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemShortcutButton')\nexport class ItemShortcutButton extends Button {\n  readonly containerItems: ArrayList<Item>;\n  readonly shortcutItem: Item;\n\n  constructor(rect: Rect, containerItems: ArrayList<Item>, shortcutItem: Item) {\n    super(rect, shortcutItem.sprite);\n    this.containerItems = containerItems;\n    this.shortcutItem = shortcutItem;\n    this.tooltipMessages = shortcutItem.tooltipMessages;\n  }\n\n  click() {\n    const item = this.getItem();\n    if (item) {\n      const player = item.game.player;\n      if (player) {\n        player.use(item);\n      }\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n\n    if (!this.isDragging()) {\n      const dst = this.rect;\n      const count = this.countItems();\n      this.gui.app.drawRightString(count.toString(), dst.x2 - 3, dst.y2 - 10);\n    }\n  }\n\n  private getItem() {\n    for (let i = 0; i < this.containerItems.length; i++) {\n      const item = this.containerItems.get(i);\n      if (this.shortcutItem.isStackable(item)) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private countItems() {\n    let count = 0;\n    for (let i = 0; i < this.containerItems.length; i++) {\n      if (this.shortcutItem.isStackable(this.containerItems.get(i))) {\n        count++;\n      }\n    }\n    return count;\n  }\n}","import {Key} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Sprite} from '../sprite';\n\nimport {Panel} from './panel';\nimport {TooltipDialog} from './tooltipdialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('Button')\nexport class Button extends Panel {\n  readonly sprite: Sprite;\n  shortcutKey?: Key;\n  onClick?: Function;\n  tooltipMessages?: Message[];\n\n  constructor(destRect: Rect, sprite: Sprite, shortcutKey?: Key, onClick?: Function) {\n    super(destRect);\n    this.sprite = sprite;\n    this.shortcutKey = shortcutKey;\n    this.onClick = onClick;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.sprite;\n    const dst = this.rect;\n    const offsetX = ((dst.width - src.width) / 2) | 0;\n    const offsetY = ((dst.height - src.height) / 2) | 0;\n    src.draw(this.gui.app, dst.x + offsetX, dst.y + offsetY);\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n\n    if (this.rect.contains(mouse.start) && mouse.isDragging()) {\n      this.gui.startDragging(this);\n      return true;\n    }\n\n    if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) || (this.rect.contains(mouse) && mouse.isClicked())) {\n      this.click();\n      return true;\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n\n  click() {\n    if (this.onClick) {\n      this.onClick();\n    }\n  }\n\n  updateTooltip(tooltip: TooltipDialog) {\n    if (this.tooltipMessages) {\n      tooltip.messages = this.tooltipMessages;\n      tooltip.visible = true;\n    } else {\n      tooltip.visible = false;\n    }\n  }\n}","import { TileMapCell } from \"./tilemapcell\";\nimport { Rect } from \"../rect\";\nimport { TileMapLayer } from \"./tilemaplayer\";\n\n/**\n * Returns the numeric tile ID for a given tile.\n * The underlying format is based on Tiled, an open source tilemap editor.\n * Tile 0 (zero) is a special null tile that is not rendered.\n * Tile 1 and beyond represent the tiles in left-to-right and then top-to-bottom order.\n * The arguments should be specified in tile coordinates, not pixel coordinates.\n * For example, if using 16 pixel x 16 pixel tiles, the tile at x=64, y=32 would be (4, 2).\n * @param tileX The x-coordinate of the tile in the sprite sheet.\n * @param tileY The y-coordinate of the tile in the sprite sheet.\n */\nexport function getTileId(tileX: number, tileY: number) {\n  return tileY * 64 + tileX;\n}\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMap {\n  readonly width: number;\n  readonly height: number;\n  readonly depth: number;\n  readonly tileSize: Rect;\n  readonly grid: TileMapCell[][];\n  readonly layers: TileMapLayer[];\n  dirty: boolean;\n\n  // Field-of-view state\n  originX: number;\n  originY: number;\n  visibleRect: Rect;\n  prevVisibleRect: Rect;\n\n  constructor(width: number, height: number, layerCount: number, tileSize: Rect) {\n    this.width = width;\n    this.height = height;\n    this.depth = layerCount;\n    this.tileSize = tileSize;\n    this.grid = new Array(height);\n    this.layers = new Array(layerCount);\n    this.dirty = true;\n\n    // Field-of-view state\n    // By default, everything is visible\n    this.originX = 0;\n    this.originY = 0;\n    this.visibleRect = new Rect(0, 0, width, height);\n    this.prevVisibleRect = new Rect(0, 0, width, height);\n\n    for (let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        this.grid[y][x] = new TileMapCell(x, y);\n      }\n    }\n\n    for (let i = 0; i < layerCount; i++) {\n      this.layers[i] = new TileMapLayer(width, height);\n    }\n  }\n\n  isOutOfRange(x: number, y: number, z: number) {\n    return x < 0 || x >= this.width ||\n        y < 0 || y >= this.height ||\n        z < 0 || z >= this.depth;\n  }\n\n  clear() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].clear();\n    }\n  }\n\n  getTile(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return 0;\n    }\n    return this.layers[z].getTile(x, y);\n  }\n\n  setTile(x: number, y: number, z: number, tile: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setTile(x, y, tile);\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return true;\n    }\n    return this.grid[y][x].blocked;\n  }\n\n  setBlocked(x: number, y: number, blocked: boolean, blockedSight?: boolean) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return;\n    }\n    this.grid[y][x].blocked = blocked;\n    this.grid[y][x].blockedSight = (blockedSight !== undefined) ? blockedSight : blocked;\n  }\n\n  getCell(x: number, y: number) {\n    if (this.isOutOfRange(x, y, 0)) {\n      return null;\n    }\n    return this.grid[y][x];\n  }\n\n  isVisible(x: number, y: number) {\n    if (x < this.visibleRect.x1 || x >= this.visibleRect.x2 || y < this.visibleRect.y1 || y >= this.visibleRect.y2) {\n      return false;\n    }\n    return this.grid[y][x].visible;\n  }\n\n  isSeen(x: number, y: number) {\n    const cell = this.getCell(x, y);\n    return cell && cell.seen;\n  }\n\n  setSeen(x: number, y: number, seen: boolean) {\n    const cell = this.getCell(x, y);\n    if (cell) {\n      cell.seen = seen;\n    }\n  }\n\n  isAnimated(x: number, y: number, z: number) {\n    if (this.isOutOfRange(x, y, z)) {\n      return false;\n    }\n    return this.layers[z].isAnimated(x, y);\n  }\n\n  setAnimated(x: number, y: number, z: number, animated: boolean) {\n    if (this.isOutOfRange(x, y, z)) {\n      return;\n    }\n    this.layers[z].setAnimated(x, y, animated);\n  }\n\n  resetFov() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].seen = false;\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  computeFov(originX: number, originY: number, radius: number, vradius?: number) {\n    this.originX = originX;\n    this.originY = originY;\n    this.prevVisibleRect.copy(this.visibleRect);\n\n    const dx = radius;\n    const dy = vradius || radius;\n    this.visibleRect.x = Math.max(0, originX - dx);\n    this.visibleRect.y = Math.max(0, originY - dy);\n    this.visibleRect.width = Math.min(this.width - 1, originX + dx) - this.visibleRect.x + 1;\n    this.visibleRect.height = Math.min(this.height - 1, originY + dy) - this.visibleRect.y + 1;\n\n    for (let y = this.visibleRect.y1; y < this.visibleRect.y2; y++) {\n      for (let x = this.visibleRect.x1; x < this.visibleRect.x2; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n\n    this.grid[originY][originX].visible = true;\n\n    this.computeOctantY(1, 1);\n    this.computeOctantX(1, 1);\n    this.computeOctantY(1, -1);\n    this.computeOctantX(1, -1);\n    this.computeOctantY(-1, 1);\n    this.computeOctantX(-1, 1);\n    this.computeOctantY(-1, -1);\n    this.computeOctantX(-1, -1);\n    this.dirty = true;\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the Y axis\n   */\n  private computeOctantY(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (y = this.originY + deltaY; y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n      y += deltaY, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), x = this.originX + (processedCell * deltaX);\n        processedCell <= iteration && x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n        x += deltaX, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y - deltaY][x].visible && !this.grid[y - deltaY][x].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Compute the FOV in an octant adjacent to the X axis\n   */\n  private computeOctantX(deltaX: number, deltaY: number) {\n    const startSlopes: number[] = [];\n    const endSlopes: number[] = [];\n    let iteration = 1;\n    let totalObstacles = 0;\n    let obstaclesInLastLine = 0;\n    let minSlope = 0;\n    let x;\n    let y;\n    let halfSlope;\n    let processedCell;\n    let visible;\n    let extended;\n    let centreSlope;\n    let startSlope;\n    let endSlope;\n    let previousEndSlope;\n\n    for (x = this.originX + deltaX; x >= this.visibleRect.x1 && x < this.visibleRect.x2;\n      x += deltaX, obstaclesInLastLine = totalObstacles, ++iteration) {\n      halfSlope = 0.5 / iteration;\n      previousEndSlope = -1;\n      for (processedCell = Math.floor(minSlope * iteration + 0.5), y = this.originY + (processedCell * deltaY);\n        processedCell <= iteration && y >= this.visibleRect.y1 && y < this.visibleRect.y2;\n        y += deltaY, ++processedCell, previousEndSlope = endSlope) {\n        visible = true;\n        extended = false;\n        centreSlope = processedCell / iteration;\n        startSlope = previousEndSlope;\n        endSlope = centreSlope + halfSlope;\n\n        if (obstaclesInLastLine > 0) {\n          if (!(this.grid[y][x - deltaX].visible && !this.grid[y][x - deltaX].blockedSight) &&\n            !(this.grid[y - deltaY][x - deltaX].visible && !this.grid[y - deltaY][x - deltaX].blockedSight)) {\n            visible = false;\n          } else {\n            for (let idx = 0; idx < obstaclesInLastLine && visible; ++idx) {\n              if (startSlope <= endSlopes[idx] && endSlope >= startSlopes[idx]) {\n                if (!this.grid[y][x].blockedSight) {\n                  if (centreSlope > startSlopes[idx] && centreSlope < endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  }\n                } else {\n                  if (startSlope >= startSlopes[idx] && endSlope <= endSlopes[idx]) {\n                    visible = false;\n                    break;\n                  } else {\n                    startSlopes[idx] = Math.min(startSlopes[idx], startSlope);\n                    endSlopes[idx] = Math.max(endSlopes[idx], endSlope);\n                    extended = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (visible) {\n          this.grid[y][x].visible = true;\n          this.grid[y][x].seen = true;\n          if (this.grid[y][x].blockedSight) {\n            if (minSlope >= startSlope) {\n              minSlope = endSlope;\n            } else if (!extended) {\n              startSlopes[totalObstacles] = startSlope;\n              endSlopes[totalObstacles++] = endSlope;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {Button} from './button';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ButtonSlot')\nexport class ButtonSlot extends Panel {\n  shortcutKey?: Key;\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect);\n    this.shortcutKey = shortcutKey;\n  }\n\n  get button() {\n    return this.children.length > 0 ? this.children.get(0) as Button : undefined;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const dst = this.rect;\n    const src = this.gui.renderer.buttonSlotRect;\n    if (src) {\n      this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n    }\n\n    const button = this.button;\n    if (button && !button.isDragging()) {\n      button.rect.x = this.rect.x;\n      button.rect.y = this.rect.y;\n      button.rect.width = this.rect.width;\n      button.rect.height = this.rect.height;\n      this.drawChildren();\n    }\n\n    if (this.shortcutKey) {\n      this.gui.app.drawRightString(String.fromCharCode(this.shortcutKey), dst.x2 - 3, dst.y + 3);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.handleChildrenInput()) {\n      return true;\n    }\n\n    const app = this.gui.app;\n    const mouse = app.mouse;\n    const button = this.button;\n    if (button) {\n      if ((this.shortcutKey && app.isKeyPressed(this.shortcutKey)) ||\n          (this.rect.contains(mouse) && mouse.isClicked())) {\n        button.click();\n        return true;\n      }\n    }\n\n    return mouse.down && this.rect.contains(mouse);\n  }\n}","import { Actor } from './actor';\nimport { Entity } from './entity';\nimport { Message } from './message';\nimport { Sprite } from './sprite';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nexport enum TargetType {\n  SELF,\n  ENTITY,\n  TILE\n}\n\nexport interface Ability {\n  readonly sprite: Sprite;\n  readonly name: string;\n  readonly targetType: TargetType;\n  readonly minRange: number;\n  readonly maxRange: number;\n  readonly cooldown: number;\n  readonly tooltipMessages: Message[];\n\n  cast(caster: Actor, target?: Entity | TileMapCell): boolean;\n}\n","import { Game } from './game';\nimport { SelectOption } from './gui/selectoption';\nimport { Sprite } from './sprite';\nimport { Vec2 } from './vec2';\nimport { Actor } from './actor';\nimport { Serializable } from './serializable';\n\n@Serializable('Entity')\nexport class Entity extends Vec2 implements SelectOption {\n  readonly game: Game;\n  readonly offset: Vec2;\n  name: string;\n  sprite: Sprite;\n  blocks: boolean;\n  zIndex: number;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(x, y);\n    this.game = game;\n    this.offset = new Vec2(0, 0);\n    this.name = name;\n    this.sprite = sprite;\n    this.blocks = blocks;\n    this.zIndex = 1;\n  }\n\n  get pixelX(): number {\n    return this.x * this.game.tileSize.width + this.offset.x;\n  }\n\n  get pixelY(): number {\n    return this.y * this.game.tileSize.height + this.offset.y;\n  }\n\n  get centerPixelX(): number {\n    return this.pixelX + (this.sprite.width / 2) | 0;\n  }\n\n  get centerPixelY(): number {\n    return this.pixelY + (this.sprite.height / 2) | 0;\n  }\n\n  distanceTo(other: Vec2) {\n    return Math.hypot(other.x - this.x, other.y - this.y);\n  }\n\n  distance(x: number, y: number) {\n    return Math.hypot(x - this.x, y - this.y);\n  }\n\n  draw() {\n    this.sprite.draw(this.game.app, this.pixelX - this.game.viewport.x, this.pixelY - this.game.viewport.y);\n  }\n\n  startTurn() { }\n\n  endTurn() { }\n\n  sendToBack() { }\n\n  /**\n   * Handles when another actor bumps this entity.\n   * Returns true on success (something happened).\n   * Returns false on failure (bump is rejected).\n   * @param bumper The actor that bumped this entity.\n   */\n  onBump(bumper: Actor) {\n    return false;\n  }\n}\n","import {Actor} from '../actor';\n\nexport abstract class AI {\n  readonly actor: Actor;\n  alwaysActive: boolean;\n\n  constructor(actor: Actor) {\n    this.actor = actor;\n    this.alwaysActive = false;\n  }\n\n  abstract doAi(): void;\n}","\nexport class Input {\n  down: boolean;\n  downCount: number;\n  upCount: number;\n\n  constructor() {\n    this.down = false;\n    this.downCount = 0;\n    this.upCount = 0;\n  }\n\n  update() {\n    if (this.down) {\n      this.downCount++;\n      this.upCount = 0;\n    } else {\n      this.downCount = 0;\n      this.upCount++;\n    }\n  }\n}\n","\nimport {App} from './app';\nimport {DialogRenderer} from './gui/dialogrenderer';\nimport {ItemShortcutButton} from './gui/itemshortcutbutton';\nimport {Panel} from './gui/panel';\nimport {TalentButton} from './gui/talentbutton';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {Vec2} from './vec2';\nimport { ItemButton } from './gui/itembutton';\nimport { Serializable } from './serializable';\n\n@Serializable('GUI')\nexport class GUI {\n  readonly app: App;\n  readonly renderer: DialogRenderer;\n  readonly rootPanel: Panel;\n  dragElement?: Panel;\n  dragOffset?: Vec2;\n\n  constructor(app: App) {\n    this.app = app;\n    this.renderer = new DialogRenderer(new Rect(0, 0, 1, 1));\n    this.rootPanel = new Panel(app.size);\n    this.rootPanel.gui = this;\n  }\n\n  add(panel: Panel) {\n    this.rootPanel.add(panel);\n  }\n\n  remove(panel: Panel) {\n    this.rootPanel.remove(panel);\n  }\n\n  getPanelAt(point: Vec2|Mouse) {\n    return this.rootPanel.getPanelAt(point);\n  }\n\n  handleInput(): boolean {\n    if (this.dragElement && this.dragOffset) {\n      this.updateDragging();\n      return true;\n    }\n\n    return this.rootPanel.handleInput();\n  }\n\n  draw() {\n    this.rootPanel.drawContents();\n\n    if (this.dragElement) {\n      // Draw drag element on top of everything else\n      this.dragElement.drawContents();\n    }\n  }\n\n  startDragging(panel: Panel) {\n    const mouse = this.app.mouse;\n    this.dragElement = panel;\n    this.dragOffset = new Vec2(mouse.start.x - panel.rect.x, mouse.start.y - panel.rect.y);\n  }\n\n  private updateDragging() {\n    const mouse = this.app.mouse;\n    const dragElement = this.dragElement as Panel;\n    const dragOffset = this.dragOffset as Vec2;\n    if (mouse.down) {\n      // Move the element to the mouse\n      dragElement.rect.x = mouse.x - dragOffset.x;\n      dragElement.rect.y = mouse.y - dragOffset.y;\n    } else {\n      // End the drag\n      const target = this.rootPanel.getPanelAt(mouse);\n      if (target && target.onDrop(dragElement)) {\n        // Found a valid drop target\n        dragElement.rect.x = target.rect.x;\n        dragElement.rect.y = target.rect.y;\n        dragElement.move(target);\n      } else if (dragElement instanceof ItemButton && target === this.rootPanel) {\n        // Drop item(s)\n        dragElement.removeAll();\n      } else if (dragElement instanceof ItemShortcutButton && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else if (dragElement instanceof TalentButton && dragElement.shortcut && target === this.rootPanel) {\n        // Destroy the shortcut\n        if (dragElement.parent) {\n          dragElement.parent.remove(dragElement);\n        }\n      } else {\n        // Otherwise move back to the original location\n        dragElement.rect.x = mouse.start.x - dragOffset.x;\n        dragElement.rect.y = mouse.start.y - dragOffset.y;\n      }\n      this.dragElement = undefined;\n      this.dragOffset = undefined;\n    }\n  }\n}\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\n\nexport class Message {\n  readonly text: string;\n  readonly color: Color;\n\n  constructor(text: string, color: Color) {\n    this.text = text;\n    this.color = color;\n  }\n\n  draw(app: App, pos: Vec2) {\n    app.drawString(this.text, pos.x, pos.y, this.color, pos);\n  }\n}\n","\nimport { initShaderProgram } from \"../glutils\";\nimport { TileMap } from \"./tilemap\";\n\nconst TEXTURE_SIZE = 1024;\n\n// Shader\nconst tilemapVS = 'precision highp float;' +\n\n  'attribute vec2 position;' +\n  'attribute vec2 texture;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 viewOffset;' +\n  'uniform vec2 viewportSize;' +\n  'uniform vec2 tileSize;' +\n  'uniform vec2 mapSize;' +\n\n  'void main(void) {' +\n  '   pixelCoord = (texture * viewportSize) + viewOffset;' +\n  '   texCoord = pixelCoord / mapSize / tileSize;' +\n  '   gl_Position = vec4(position, 0.0, 1.0);' +\n  '}';\n\nconst tilemapFS = 'precision highp float;' +\n\n  'varying vec2 pixelCoord;' +\n  'varying vec2 texCoord;' +\n\n  'uniform vec2 tileSize;' +\n  'uniform float animFrame;' +\n  'uniform sampler2D tiles;' +\n  'uniform sampler2D sprites;' +\n\n  'void main(void) {' +\n  '   vec4 tile = texture2D(tiles, texCoord);' +\n  '   if(tile.x == 0.0 && tile.y == 0.0) { discard; }' +\n  '   vec2 spriteOffset = floor(tile.xy * 256.0) * tileSize;' +\n  '   if(tile.z != 0.0) spriteOffset.x += animFrame * tileSize.x;' +\n  '   vec2 spriteCoord = mod(pixelCoord, tileSize);' +\n  '   gl_FragColor = texture2D(sprites, (spriteOffset + spriteCoord) / ' + TEXTURE_SIZE + '.0);' +\n  '   if (gl_FragColor.a == 0.0) discard;' +\n  '   gl_FragColor.a *= tile.a;' +\n  '}';\n\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n * @param {number} layerCount\n */\nexport class TileMapRenderer {\n  readonly gl: WebGLRenderingContext;\n  readonly tileMap: TileMap;\n  private readonly quadVertBuffer: WebGLBuffer;\n  private readonly tilemapShader: WebGLShader;\n  private readonly positionAttribute: number;\n  private readonly textureAttribute: number;\n  private readonly viewportSizeUniform: WebGLUniformLocation;\n  private readonly viewOffsetUniform: WebGLUniformLocation;\n  private readonly mapSizeUniform: WebGLUniformLocation;\n  private readonly tileSizeUniform: WebGLUniformLocation;\n  private readonly animFrameUniform: WebGLUniformLocation;\n  private readonly tileSamplerUniform: WebGLUniformLocation;\n  private readonly spriteSamplerUniform: WebGLUniformLocation;\n  private readonly layerTextures: WebGLTexture[];\n\n  constructor(gl: WebGLRenderingContext, tileMap: TileMap) {\n    this.gl = gl;\n    this.tileMap = tileMap;\n\n    const quadVerts = [\n      // x   y   u  v\n      -1, -1, 0, 1,\n      1, -1, 1, 1,\n      1, 1, 1, 0,\n      -1, -1, 0, 1,\n      1, 1, 1, 0,\n      -1, 1, 0, 0\n    ];\n\n    this.quadVertBuffer = gl.createBuffer() as WebGLBuffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(quadVerts), gl.STATIC_DRAW);\n\n    this.tilemapShader = initShaderProgram(gl, tilemapVS, tilemapFS);\n    this.positionAttribute = gl.getAttribLocation(this.tilemapShader, 'position');\n    this.textureAttribute = gl.getAttribLocation(this.tilemapShader, 'texture');\n    this.viewportSizeUniform = gl.getUniformLocation(this.tilemapShader, 'viewportSize') as WebGLUniformLocation;\n    this.viewOffsetUniform = gl.getUniformLocation(this.tilemapShader, 'viewOffset') as WebGLUniformLocation;\n    this.mapSizeUniform = gl.getUniformLocation(this.tilemapShader, 'mapSize') as WebGLUniformLocation;\n    this.tileSizeUniform = gl.getUniformLocation(this.tilemapShader, 'tileSize') as WebGLUniformLocation;\n    this.animFrameUniform = gl.getUniformLocation(this.tilemapShader, 'animFrame') as WebGLUniformLocation;\n    this.tileSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'tiles') as WebGLUniformLocation;\n    this.spriteSamplerUniform = gl.getUniformLocation(this.tilemapShader, 'sprites') as WebGLUniformLocation;\n\n    this.layerTextures = new Array(tileMap.depth);\n\n    for (let i = 0; i < tileMap.depth; i++) {\n      const texture = gl.createTexture() as WebGLTexture;\n      const imageData = tileMap.layers[i].imageData;\n\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, tileMap.width, tileMap.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      // MUST be filtered with NEAREST or tile lookup fails\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      this.layerTextures[i] = texture;\n    }\n  }\n\n  draw(x: number, y: number, width: number, height: number, animFrame?: number) {\n    const gl = this.gl;\n    const tileMap = this.tileMap;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.tilemapShader);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.quadVertBuffer);\n\n    gl.enableVertexAttribArray(this.positionAttribute);\n    gl.enableVertexAttribArray(this.textureAttribute);\n    gl.vertexAttribPointer(this.positionAttribute, 2, gl.FLOAT, false, 16, 0);\n    gl.vertexAttribPointer(this.textureAttribute, 2, gl.FLOAT, false, 16, 8);\n\n    gl.uniform2f(this.viewOffsetUniform, x, y);\n    gl.uniform2f(this.viewportSizeUniform, width, height);\n    gl.uniform2f(this.tileSizeUniform, tileMap.tileSize.width, tileMap.tileSize.height);\n    gl.uniform1f(this.animFrameUniform, animFrame || 0);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(this.spriteSamplerUniform, 0);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.uniform1i(this.tileSamplerUniform, 1);\n\n    const minX = Math.min(tileMap.visibleRect.x1, tileMap.prevVisibleRect.x1);\n    const minY = Math.min(tileMap.visibleRect.y1, tileMap.prevVisibleRect.y1);\n    const maxX = Math.max(tileMap.visibleRect.x2, tileMap.prevVisibleRect.x2);\n    const maxY = Math.max(tileMap.visibleRect.y2, tileMap.prevVisibleRect.y2);\n\n    // Draw each layer of the map\n    for (let i = 0; i < tileMap.depth; i++) {\n      const layer = tileMap.layers[i];\n      const texture = this.layerTextures[i];\n      gl.uniform2f(this.mapSizeUniform, tileMap.width, tileMap.height);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      if (tileMap.dirty) {\n        for (let y = minY; y < maxY; y++) {\n          for (let x = minX; x < maxX; x++) {\n            const alpha = tileMap.isVisible(x, y) ? 255 : tileMap.isSeen(x, y) ? 144 : 0;\n            layer.setAlpha(x, y, alpha);\n          }\n        }\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, layer.width, layer.height, gl.RGBA, gl.UNSIGNED_BYTE, layer.imageData);\n      }\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    tileMap.dirty = false;\n  }\n}\n","import { Ability, TargetType } from './ability';\nimport { AI } from './ai/ai';\nimport { BumpAnimation } from './animations/bumpanimation';\nimport { FloatingTextAnimation } from './animations/floatingtextanimation';\nimport { SlideAnimation } from './animations/slideanimation';\nimport { ArrayList } from './arraylist';\nimport { Color } from './color';\nimport { StandardColors } from './palettes/standardcolors';\nimport { Entity } from './entity';\nimport { Game } from './game';\nimport { Item } from './item';\nimport { Sprite } from './sprite';\nimport { Talent } from './talent';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\n@Serializable('Actor')\nexport class Actor extends Entity {\n  hp: number;\n  maxHp: number;\n  ap: number;\n  maxAp: number;\n  inventory: ArrayList<Item>;\n  talents: ArrayList<Talent>;\n  visibleDuration: number;\n  seen: boolean;\n  ai?: AI;\n\n  constructor(game: Game, x: number, y: number, name: string, sprite: Sprite, blocks: boolean) {\n    super(game, x, y, name, sprite, blocks);\n    this.hp = 100;\n    this.maxHp = 100;\n    this.ap = 1;\n    this.maxAp = 1;\n    this.inventory = new ArrayList<Item>();\n    this.talents = new ArrayList<Talent>();\n    this.visibleDuration = -1;\n    this.seen = false;\n  }\n\n  startTurn() {\n    this.ap = this.maxAp;\n    for (let j = 0; j < this.talents.length; j++) {\n      const talent = this.talents.get(j);\n      if (talent.cooldown > 0) {\n        talent.cooldown--;\n      }\n    }\n  }\n\n  move(dx: number, dy: number, slideCount?: number) {\n    const destX = this.x + dx;\n    const destY = this.y + dy;\n\n    // TODO: Enforce diagonal vs cardinal movement?\n\n    if (this.blocks) {\n      // If this actor blocks (default), then check for walls and entities\n      if (this.game.isBlocked(destX, destY)) {\n        return false;\n      }\n    } else {\n      // If this actor does *not* block, then only check tile map.\n      if (this.game.tileMap.isBlocked(destX, destY)) {\n        return false;\n      }\n    }\n\n    // The actor technically moves instantly.\n    // However, we set the offset such that it looks like the actor slides over time.\n    this.x = destX;\n    this.y = destY;\n    this.ap--;\n    this.offset.x = -dx * this.game.tileSize.width;\n    this.offset.y = -dy * this.game.tileSize.height;\n\n    // Now create the slide animation\n    const count = slideCount || 4;\n    const xSpeed = this.game.tileSize.width / count;\n    const ySpeed = this.game.tileSize.height / count;\n    this.game.animations.push(new SlideAnimation(this, dx * xSpeed, dy * ySpeed, count));\n    this.game.blocked = true;\n    return true;\n  }\n\n  moveTo(destX: number, destY: number, slideCount?: number) {\n    return this.move(destX - this.x, destY - this.y, slideCount);\n  }\n\n  moveToward(targetX: number, targetY: number, slideCount?: number) {\n    const dx = targetX - this.x;\n    const dy = targetY - this.y;\n\n    if (dx < 0 && dy < 0 && this.move(-1, -1, slideCount)) {\n      return true;\n    }\n    if (dx < 0 && dy > 0 && this.move(-1, 1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy < 0 && this.move(1, -1, slideCount)) {\n      return true;\n    }\n    if (dx > 0 && dy > 0 && this.move(1, 1, slideCount)) {\n      return true;\n    }\n\n    if (Math.abs(dx) > Math.abs(dy)) {\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n    } else {\n      if (dy < 0 && this.move(0, -1, slideCount)) {\n        return true;\n      }\n      if (dy > 0 && this.move(0, 1, slideCount)) {\n        return true;\n      }\n      if (dx < 0 && this.move(-1, 0, slideCount)) {\n        return true;\n      }\n      if (dx > 0 && this.move(1, 0, slideCount)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  attack(target: Actor, damage: number) {\n    if (target === this) {\n      return;\n    }\n\n    this.onAttack(target, damage);\n    target.takeDamage(this, damage);\n    this.ap--;\n    this.game.animations.push(new BumpAnimation(this, target));\n    this.game.blocked = true;\n  }\n\n  takeHeal(heal: number) {\n    this.hp = Math.min(this.hp + heal, this.maxHp);\n    this.addFloatingText(heal.toString(), StandardColors.GREEN);\n  }\n\n  takeDamage(attacker: Actor, damage: number) {\n    if (this.hp <= 0) {\n      // Already dead\n      return;\n    }\n\n    this.hp -= damage;\n    this.addFloatingText(damage.toString(), StandardColors.RED);\n\n    if (this.hp <= 0) {\n      this.hp = 0;\n      this.onDeath(attacker);\n      this.game.entities.remove(this);\n    }\n  }\n\n  pickup(item: Item) {\n    item.onPickup(this);\n    this.inventory.add(item);\n    this.game.entities.remove(item);\n  }\n\n  use(item: Item) {\n    return item.onUse(this);\n  }\n\n  cast(ability: Ability, target?: Entity | TileMapCell, callback?: Function) {\n    if (ability.targetType === TargetType.SELF || target) {\n      if (ability.cast(this, target)) {\n        if (callback) {\n          callback();\n        }\n      }\n    } else {\n      this.game.startTargeting(ability, callback);\n    }\n  }\n\n  addFloatingText(str: string, color: Color) {\n    this.game.animations.push(new FloatingTextAnimation(this, str, color));\n  }\n\n  onAttack(target: Actor, damage: number) { }\n  onDeath(attacker: Actor) { }\n}","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nconst DURATION = 12;\n\nexport class BumpAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, target: Entity) {\n    super(DURATION, true);\n    this.entity = entity;\n    this.dx = target.x - entity.x;\n    this.dy = target.y - entity.y;\n  }\n\n  update() {\n    const t = DURATION - this.countdown;\n\n    if (t >= 0 && t < 4) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n\n    if (t >= 4 && t < 8) {\n      this.entity.offset.x -= this.dx;\n      this.entity.offset.y -= this.dy;\n    }\n\n    super.update();\n  }\n}\n","import {Actor} from '../actor';\nimport {Color} from '../color';\nimport {StandardColors} from '../palettes/standardcolors';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nconst DURATION = 40;\n\nexport class FloatingTextAnimation extends Animation {\n  readonly actor: Actor;\n  readonly str: string;\n  readonly color: Color;\n\n  constructor(actor: Actor, str: string, color?: Color) {\n    super(DURATION, false);\n    this.actor = actor;\n    this.str = str;\n    this.color = color || StandardColors.WHITE;\n  }\n\n  draw(game: Game) {\n    const frame = DURATION - this.countdown;\n    const x = this.actor.pixelX + ((this.actor.sprite.width / 2) | 0) - game.viewport.x;\n    const y = this.actor.pixelY - 3 - game.viewport.y;\n    const y2 = y - Math.min(4, Math.floor(frame / 2));\n    game.app.drawCenteredString(this.str, x, y2, this.color);\n  }\n}\n","\nimport {Entity} from '../entity';\n\nimport {Animation} from './animation';\n\nexport class SlideAnimation extends Animation {\n  readonly entity: Entity;\n  readonly dx: number;\n  readonly dy: number;\n\n  constructor(entity: Entity, dx: number, dy: number, count: number) {\n    super(count, true);\n    this.entity = entity;\n    this.dx = dx;\n    this.dy = dy;\n  }\n\n  update() {\n    this.countdown--;\n    if (this.countdown >= 0) {\n      this.entity.offset.x += this.dx;\n      this.entity.offset.y += this.dy;\n    }\n    if (this.countdown === 0) {\n      this.entity.offset.x = 0;\n      this.entity.offset.y = 0;\n    }\n  }\n}\n","\nconst METADATA_KEY = '__wgltMetadata';\n\nexport function createSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = new SerializeMetadata(ctor);\n  ctor[METADATA_KEY] = metadata;\n  return metadata;\n}\n\nexport function getSerializeMetadata(ctor: any): SerializeMetadata {\n  const metadata = ctor[METADATA_KEY];\n  return metadata || createSerializeMetadata(ctor);\n}\n\nexport class SerializeMetadata {\n  ctor: { new(): any; };\n  className: string = 'Object';\n  valueType: boolean = false;\n  customSerializer?: Function;\n  customDeserializer?: Function;\n\n  constructor(ctor: { new(): any; }) {\n    this.ctor = ctor;\n  }\n}\n","import {AppOptions} from './appoptions';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {Font, FONT_04B03} from './font';\nimport {Keyboard} from './keyboard';\nimport {Mouse} from './mouse';\nimport {Rect} from './rect';\nimport {RenderSet} from './renderset';\nimport {Vec2} from './vec2';\nimport { Keys, Key } from './keys';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 224;\nconst DEFAULT_FILL_WINDOW = false;\nconst DEFAULT_SCALE_FACTOR = 2.0;\n\n// Arrow keys, numpad, vi\nconst NORTHWEST_KEYS = [Keys.VK_NUMPAD7, Keys.VK_Y];\nconst NORTHEAST_KEYS = [Keys.VK_NUMPAD9, Keys.VK_U];\nconst SOUTHWEST_KEYS = [Keys.VK_NUMPAD1, Keys.VK_B];\nconst SOUTHEAST_KEYS = [Keys.VK_NUMPAD3, Keys.VK_N];\nconst UP_KEYS = [Keys.VK_UP, Keys.VK_NUMPAD8, Keys.VK_K];\nconst LEFT_KEYS = [Keys.VK_LEFT, Keys.VK_NUMPAD4, Keys.VK_H];\nconst DOWN_KEYS = [Keys.VK_DOWN, Keys.VK_NUMPAD2, Keys.VK_J];\nconst RIGHT_KEYS = [Keys.VK_RIGHT, Keys.VK_NUMPAD6, Keys.VK_L];\nconst WAIT_KEYS = [Keys.VK_SPACE, Keys.VK_NUMPAD5];\n\nexport class App {\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly size: Rect;\n  readonly font: Font;\n  readonly mobile: boolean;\n  fillWindow: boolean;\n  scaleFactor: number;\n  readonly center: Vec2;\n  readonly renderSet: RenderSet;\n  readonly keyboard: Keyboard;\n  readonly mouse: Mouse;\n  state?: AppState;\n\n  constructor(options: AppOptions) {\n    const canvas = options.canvas;\n    if (!canvas) {\n      throw new Error('Null or missing canvas element');\n    }\n\n    const gl = canvas.getContext('webgl', {alpha: false, antialias: false});\n    if (!gl) {\n      throw new Error('Could not get WebGL context');\n    }\n\n    this.canvas = canvas;\n    this.gl = gl;\n    this.size = options.size || new Rect(0, 0, DEFAULT_WIDTH, DEFAULT_HEIGHT);\n    this.font = options.font || FONT_04B03;\n    this.fillWindow = options.fillWindow || DEFAULT_FILL_WINDOW;\n    this.scaleFactor = options.scaleFactor || DEFAULT_SCALE_FACTOR;\n    this.center = new Vec2((this.size.width / 2) | 0, (this.size.height / 2) | 0);\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    canvas.width = this.size.width;\n    canvas.height = this.size.height;\n    canvas.style.outline = 'none';\n    canvas.tabIndex = 0;\n    canvas.focus();\n\n    this.mobile = this.isMobile();\n\n    this.renderSet = new RenderSet(gl, options.imageUrl, this.font);\n    this.keyboard = new Keyboard(canvas);\n    this.mouse = new Mouse(this);\n\n    if (this.fillWindow) {\n      window.addEventListener('resize', this.handleResizeEvent.bind(this), false);\n      this.handleResizeEvent();\n    }\n\n    this.renderLoop();\n  }\n\n  /**\n   * Handles window resize events.\n   * Updates canvas size.\n   */\n  handleResizeEvent() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // The logic here is:\n    //  * Think of a rough \"minimum viewport\"\n    //  * The viewport is a rectangle that can be portrait or landscape\n    //  * The viewport can be a little bigger on desktop, a little smaller on mobile\n    //  * Find the integer scaling factor that best fits the minimum vector\n    const mobile = this.isMobile();\n    const minMajorAxis = mobile ? 320.0 : 400.0;\n    const minMinorAxis = mobile ? 224.0 : 300.0;\n\n    this.scaleFactor = 1.0;\n    if (width > height) {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMajorAxis), Math.round(height / minMinorAxis)));\n    } else {\n      this.scaleFactor = Math.max(1, Math.min(Math.round(width / minMinorAxis), Math.round(height / minMajorAxis)));\n    }\n\n    this.size.width = Math.round(width / this.scaleFactor);\n    this.size.height = Math.round(height / this.scaleFactor);\n    this.center.x = (this.size.width / 2) | 0;\n    this.center.y = (this.size.height / 2) | 0;\n\n    this.canvas.width = this.size.width;\n    this.canvas.height = this.size.height;\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n  }\n\n  /**\n   * Returns if the browser is on a mobile device.\n   * Run once at startup.\n   */\n  private isMobile() {\n    return !!navigator.userAgent.match(/Android|iPhone|iPod|IEMobile|WPDesktop|Opera Mini/i);\n  }\n\n  renderLoop() {\n    this.keyboard.update();\n    this.mouse.update();\n    this.resetGl();\n\n    if (this.state) {\n      this.state.update();\n    }\n\n    this.renderSet.flush(this.size.width, this.size.height);\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n  private resetGl() {\n    const gl = this.gl;\n    gl.viewport(0, 0, this.size.width, this.size.height);\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Reset sprite index buffers\n    this.renderSet.positionArrayIndex = 0;\n    this.renderSet.texcoordArrayIndex = 0;\n    this.renderSet.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {Color=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(x: number, y: number, u: number, v: number, w: number, h: number, color?: Color, dw?: number, dh?: number) {\n    this.renderSet.drawImage(x, y, u, v, w, h, color, dw, dh);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x: number, y: number, color?: Color, out?: Vec2) {\n    this.renderSet.drawString(str, x, y, color, out);\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawCenteredString(str, x, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    this.renderSet.drawRightString(str, x, y, color);\n  }\n\n  isKeyDown(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    return key && key.down;\n  }\n\n  isKeyPressed(keyCode: number) {\n    const key = this.keyboard.getKey(keyCode);\n    const count = key ? key.downCount : 0;\n    return count === 1 || (count > 30);\n  }\n\n  isDownLeftKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHWEST_KEYS);\n  }\n\n  isDownKeyPressed() {\n    return this.isKeyArrayPressed(DOWN_KEYS);\n  }\n\n  isDownRightKeyPressed() {\n    return this.isKeyArrayPressed(SOUTHEAST_KEYS);\n  }\n\n  isLeftKeyPressed() {\n    return this.isKeyArrayPressed(LEFT_KEYS);\n  }\n\n  isWaitKeyPressed() {\n    return this.isKeyArrayPressed(WAIT_KEYS);\n  }\n\n  isRightKeyPressed() {\n    return this.isKeyArrayPressed(RIGHT_KEYS);\n  }\n\n  isUpLeftKeyPressed() {\n    return this.isKeyArrayPressed(NORTHWEST_KEYS);\n  }\n\n  isUpKeyPressed() {\n    return this.isKeyArrayPressed(UP_KEYS);\n  }\n\n  isUpRightKeyPressed() {\n    return this.isKeyArrayPressed(NORTHEAST_KEYS);\n  }\n\n  private isKeyArrayPressed(keys: Key[]) {\n    for (let i = 0; i < keys.length; i++) {\n      if (this.isKeyPressed(keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","\nimport {Input} from './input';\n\n/**\n * Number of keys to track.\n */\nconst KEY_COUNT = 256;\n\nexport class Keyboard {\n  private readonly keys: Input[];\n\n  /**\n   * Creates a new keyboard module.\n   *\n   * @param el DOM el to attach listeners.\n   */\n  constructor(el: Element) {\n    this.keys = new Array(KEY_COUNT);\n    for (let i = 0; i < KEY_COUNT; i++) {\n      this.keys[i] = new Input();\n    }\n\n    el.addEventListener('keydown', e => this.setKey(e as KeyboardEvent, true));\n    el.addEventListener('keyup', e => this.setKey(e as KeyboardEvent, false));\n  }\n\n  private setKey(e: KeyboardEvent, state: boolean) {\n    e.stopPropagation();\n    e.preventDefault();\n    const keyCode = e.keyCode;\n    if (keyCode >= 0 && keyCode < KEY_COUNT) {\n      this.keys[keyCode].down = state;\n    }\n  }\n\n  update() {\n    for (let i = 0; i < KEY_COUNT; i++) {\n      if (this.keys[i].down) {\n        this.keys[i].downCount++;\n      } else {\n        this.keys[i].downCount = 0;\n      }\n    }\n  }\n\n  getKey(keyCode: number) {\n    return keyCode >= 0 && keyCode < KEY_COUNT ? this.keys[keyCode] : null;\n  }\n}\n","\nimport { App } from './app';\nimport { Input } from './input';\nimport { Rect } from './rect';\nimport { Vec2 } from './vec2';\n\nconst MIN_DRAG_DISTANCE = 4;\nconst LONG_PRESS_TICKS = 30;\n\nexport class Mouse extends Input {\n  private readonly app: App;\n  readonly prev: Vec2;\n  readonly start: Vec2;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  dragDistance: number;\n  longPress: boolean;\n  wheelDelta: number;\n  lastWheelDelta: number;\n\n  constructor(app: App) {\n    super();\n    this.app = app;\n    this.prev = new Vec2(0, 0);\n    this.start = new Vec2(0, 0);\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.dragDistance = 0;\n    this.longPress = false;\n    this.wheelDelta = 0;\n    this.lastWheelDelta = 0;\n\n    const el = app.canvas;\n\n    const mouseEventHandler = this.handleEvent.bind(this);\n    el.addEventListener('mousedown', mouseEventHandler);\n    el.addEventListener('mouseup', mouseEventHandler);\n    el.addEventListener('mousemove', mouseEventHandler);\n    el.addEventListener('contextmenu', mouseEventHandler);\n\n    const touchEventHandler = this.handleTouchEvent.bind(this);\n    el.addEventListener('touchstart', touchEventHandler);\n    el.addEventListener('touchend', touchEventHandler);\n    el.addEventListener('touchcancel', touchEventHandler);\n    el.addEventListener('touchmove', touchEventHandler);\n\n    const wheelEventHandler = this.handleMouseWheel.bind(this);\n    el.addEventListener('mousewheel', wheelEventHandler);\n  }\n\n  private handleTouchEvent(e: TouchEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      this.updatePosition(touch.clientX, touch.clientY);\n    }\n\n    if (e.type === 'touchstart') {\n      this.down = true;\n      this.prev.x = this.x;\n      this.prev.y = this.y;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dx = 0;\n      this.dy = 0;\n      this.dragDistance = 0;\n    }\n\n    if (e.type === 'touchend') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private handleEvent(e: MouseEvent) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.updatePosition(e.clientX, e.clientY);\n\n    if (e.type === 'mousedown') {\n      this.down = true;\n      this.start.x = this.x;\n      this.start.y = this.y;\n      this.dragDistance = 0;\n      this.app.canvas.focus();\n    }\n\n    if (e.type === 'mouseup') {\n      this.down = false;\n      this.longPress = this.downCount >= LONG_PRESS_TICKS;\n    }\n  }\n\n  private updatePosition(clientX: number, clientY: number) {\n    let rect: ClientRect | DOMRect | Rect = this.app.canvas.getBoundingClientRect();\n\n    // If the client rect is not the same aspect ratio as canvas,\n    // then we are fullscreen.\n    // Need to update client rect accordingly.\n\n    const terminalAspectRatio = this.app.size.width / this.app.size.height;\n    const rectAspectRatio = rect.width / rect.height;\n\n    if (rectAspectRatio - terminalAspectRatio > 0.01) {\n      const actualWidth = terminalAspectRatio * rect.height;\n      const excess = rect.width - actualWidth;\n      rect = new Rect(Math.floor(excess / 2), 0, actualWidth, rect.height);\n    }\n\n    if (rectAspectRatio - terminalAspectRatio < -0.01) {\n      const actualHeight = rect.width / terminalAspectRatio;\n      const excess = rect.height - actualHeight;\n      rect = new Rect(0, Math.floor(excess / 2), rect.width, actualHeight);\n    }\n\n    this.x = (this.app.size.width * (clientX - rect.left) / rect.width) | 0;\n    this.y = (this.app.size.height * (clientY - rect.top) / rect.height) | 0;\n  }\n\n  private handleMouseWheel(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const mwe = e as WheelEvent;\n    this.lastWheelDelta = Math.max(-1, Math.min(1, mwe.deltaY));\n    return false;\n  }\n\n  update() {\n    super.update();\n    this.dx = this.x - this.prev.x;\n    this.dy = this.y - this.prev.y;\n    this.prev.x = this.x;\n    this.prev.y = this.y;\n    this.wheelDelta = this.lastWheelDelta;\n    this.lastWheelDelta = 0;\n\n    if (this.down) {\n      this.dragDistance += Math.abs(this.dx) + Math.abs(this.dy);\n    }\n  }\n\n  isClicked() {\n    return this.upCount === 1 && this.dragDistance < MIN_DRAG_DISTANCE && !this.longPress;\n  }\n\n  isDragging() {\n    return this.down && this.dragDistance > MIN_DRAG_DISTANCE;\n  }\n\n  isLongPress() {\n    return this.downCount === LONG_PRESS_TICKS && !this.isDragging();\n  }\n}","\nimport {Color} from './color';\nimport {Font} from './font';\nimport {createTexture, ExtendedTexture, initShaderProgram} from './glutils';\nimport { Vec2 } from './vec2';\n\n/**\n * Maximum number of elements per buffer.\n *\n * Some browsers / video cards allow large buffers, but 16-bit is the safe max.\n * https://stackoverflow.com/a/5018021/2051724\n *\n * @const {number}\n */\nconst BUFFER_SIZE = 65536;\n\nconst spriteVertexShader = 'uniform vec2 u_viewportSize;' +\n    'attribute vec2 a_position;' +\n    'attribute vec2 a_texCoord;' +\n    'attribute vec4 a_color;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_color;' +\n    'void main() {' +\n\n    // convert the rectangle from pixels to 0.0 to 1.0\n    'vec2 zeroToOne = a_position / u_viewportSize;' +\n\n    // convert from 0->1 to 0->2\n    'vec2 zeroToTwo = zeroToOne * 2.0;' +\n\n    // convert from 0->2 to -1->+1 (clipspace)\n    'vec2 clipSpace = zeroToTwo - 1.0;' +\n\n    'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);' +\n\n    // pass the texCoord to the fragment shader\n    // The GPU will interpolate this value between points.\n    'v_texCoord = a_texCoord;' +\n    'v_color = a_color;' +\n    '}';\n\nconst spriteFragmentShader = 'precision highp float;' +\n\n    // our texture\n    'uniform sampler2D u_image;' +\n\n    // the texCoords passed in from the vertex shader.\n    'varying vec2 v_texCoord;' +\n\n    // the color overrides passed in from the vertex shader.\n    'varying vec4 v_color;' +\n\n    'void main() {' +\n    'gl_FragColor = texture2D(u_image, v_texCoord);' +\n    'if (gl_FragColor.a < 0.1) discard;' +\n    'if (v_color.a != 0.0) gl_FragColor = v_color;' +\n    '}';\n\nexport class RenderSet {\n  readonly font: Font;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly viewportSizeLocation: WebGLUniformLocation;\n  readonly positionLocation: number;\n  readonly texcoordLocation: number;\n  readonly colorLocation: number;\n  readonly positionBuffer: WebGLBuffer;\n  readonly texcoordBuffer: WebGLBuffer;\n  readonly colorBuffer: WebGLBuffer;\n  readonly spriteTexture: ExtendedTexture;\n  readonly positionArray: Float32Array;\n  positionArrayIndex: number;\n  readonly texcoordArray: Float32Array;\n  texcoordArrayIndex: number;\n  readonly colorUint8Array: Uint8Array;\n  readonly colorDataView: DataView;\n  colorArrayIndex: number;\n\n  constructor(gl: WebGLRenderingContext, url: string, font: Font) {\n    this.gl = gl;\n    this.font = font;\n\n    const program = initShaderProgram(gl, spriteVertexShader, spriteFragmentShader);\n\n    this.program = program;\n    this.viewportSizeLocation = gl.getUniformLocation(program, 'u_viewportSize') as WebGLUniformLocation;\n    this.positionLocation = gl.getAttribLocation(program, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    this.colorLocation = gl.getAttribLocation(program, 'a_color');\n    this.positionBuffer = gl.createBuffer() as WebGLBuffer;\n    this.texcoordBuffer = gl.createBuffer() as WebGLBuffer;\n    this.colorBuffer = gl.createBuffer() as WebGLBuffer;\n    this.spriteTexture = createTexture(gl, url);\n    this.positionArray = new Float32Array(BUFFER_SIZE);\n    this.positionArrayIndex = 0;\n    this.texcoordArray = new Float32Array(BUFFER_SIZE);\n    this.texcoordArrayIndex = 0;\n    this.colorUint8Array = new Uint8Array(BUFFER_SIZE);\n    this.colorDataView = new DataView(this.colorUint8Array.buffer);\n    this.colorArrayIndex = 0;\n  }\n\n  /**\n   * Draws a string horizontally centered.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the center.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawCenteredString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - (this.font.getStringWidth(str) / 2) | 0;\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a right-aligned string.\n   * @param {string} str The text string to draw.\n   * @param {number} x The x-coordinate of the top-right corner.\n   * @param {number} y The y-coordinate of the top-right corner.\n   * @param {number=} color Optional color.\n   */\n  drawRightString(str: string, x: number, y: number, color?: Color) {\n    const x2 = x - this.font.getStringWidth(str);\n    this.drawString(str, x2, y, color);\n  }\n\n  /**\n   * Draws a string.\n   * @param {string} str The text string to draw.\n   * @param {number} x0 The x-coordinate of the top-left corner.\n   * @param {number} y0 The y-coordinate of the top-left corner.\n   * @param {Color=} color Optional color.\n   * @param {Vec2=} out Optional output location of cursor.\n   */\n  drawString(str: string, x0: number, y0: number, color?: Color, out?: Vec2) {\n    const lines = str.split('\\n');\n    const height = this.font.getHeight();\n    let x = x0;\n    let y = y0;\n    for (let i = 0; i < lines.length; i++) {\n      if (i > 0) {\n        x = x0;\n        y += height;\n      }\n      for (let j = 0; j < lines[i].length; j++) {\n        const charCode = lines[i].charCodeAt(j);\n        if (this.font.isInRange(charCode)) {\n          const offset = this.font.getOffset(charCode);\n          const width = this.font.getWidth(charCode);\n          this.drawImage(x, y, offset, 0, width, height, color);\n          x += width;\n        }\n      }\n    }\n    if (out) {\n      out.x = x;\n      out.y = y;\n    }\n  }\n\n  /**\n   * Draws a character.\n   * @param {number} c The ASCII character code.\n   * @param {number} x The x-coordinate of the top-left corner.\n   * @param {number} y The y-coordinate of the top-left corner.\n   * @param {number=} color Optional color.\n   */\n  drawChar(c: number, x: number, y: number, color?: Color) {\n    if (this.font.isInRange(c)) {\n      const offset = this.font.getOffset(c);\n      const width = this.font.getWidth(c);\n      const height = this.font.getHeight();\n      this.drawImage(x, y, offset, 0, width, height, color);\n    }\n  }\n\n  /**\n   * Draws a sprite.\n   * @param {number} x The x-coordinate of the top-left corner on the screen.\n   * @param {number} y The y-coordinate of the top-left corner on the screen.\n   * @param {number} u The x-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} v The y-coordinate of the top-left corner on the sprite sheet.\n   * @param {number} w The width of the sprite.\n   * @param {number} h The height of the sprite.\n   * @param {number=} color Optional color.\n   * @param {number=} dw Optional destination width.\n   * @param {number=} dh Optional destination height.\n   */\n  drawImage(\n      x: number, y: number, u: number, v: number, w: number, h: number, optColor?: Color, optDw?: number,\n      optDh?: number) {\n    const spriteTexture = this.spriteTexture;\n    if (!spriteTexture.loaded) {\n      return;\n    }\n\n    const dw = optDw !== undefined ? optDw : w;\n    const dh = optDh !== undefined ? optDh : h;\n    const x2 = x + Math.abs(dw);\n    const y2 = y + dh;\n    const tx = u / spriteTexture.width;\n    const ty = v / spriteTexture.height;\n    const tx2 = (u + w) / spriteTexture.width;\n    const ty2 = (v + h) / spriteTexture.height;\n    const color = optColor || 0;\n\n    // First triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    // Second triangle\n    this.positionArray[this.positionArrayIndex++] = x;\n    this.positionArray[this.positionArrayIndex++] = y2;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y;\n    this.positionArray[this.positionArrayIndex++] = x2;\n    this.positionArray[this.positionArrayIndex++] = y2;\n\n    this.texcoordArray[this.texcoordArrayIndex++] = tx;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty;\n    this.texcoordArray[this.texcoordArrayIndex++] = tx2;\n    this.texcoordArray[this.texcoordArrayIndex++] = ty2;\n\n    for (let i = 0; i < 6; i++) {\n      this.colorDataView.setUint32(this.colorArrayIndex, color, false);\n      this.colorArrayIndex += 4;\n    }\n  }\n\n  /**\n   * Renders all sprites in the sprite buffers to the screen.\n   * @param {number} width Viewport width.\n   * @param {number} height Viewport height.\n   */\n  flush(width: number, height: number) {\n    if (!this.spriteTexture.loaded || this.positionArrayIndex === 0) {\n      return;\n    }\n\n    const gl = this.gl;\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(this.program);\n\n    // Update the viewport\n    gl.uniform2f(this.viewportSizeLocation, width, height);\n\n    // Use the leonardo spriteTexture\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.spriteTexture);\n\n    {\n      // Bind the position buffer.\n      gl.enableVertexAttribArray(this.positionLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.positionArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the texture coordinate buffer.\n      gl.enableVertexAttribArray(this.texcoordLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.texcoordArray, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 2;           // 2 components per iteration\n      const type = gl.FLOAT;    // the data is 32bit floats\n      const normalize = false;  // don't normalize the data\n      const stride = 0;         // 0 = move forward size * sizeof(type) each iteration\n                                // to get the next position\n      const offset = 0;         // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n    }\n\n    {\n      // Bind the color buffer.\n      gl.enableVertexAttribArray(this.colorLocation);\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.colorUint8Array, gl.DYNAMIC_DRAW);\n\n      // Tell the position attribute how to get data out of positionBuffer\n      // (ARRAY_BUFFER)\n      const size = 4;                 // 4 components per iteration\n      const type = gl.UNSIGNED_BYTE;  // the data is 8-bit unsigned bytes\n      const normalize = true;         // Normalize from 0-255 to 0.0-1.0\n      const stride = 0;               // 0 = move forward size * sizeof(type) each iteration\n                                      // to get the next position\n      const offset = 0;               // start at the beginning of the buffer\n      gl.vertexAttribPointer(this.colorLocation, size, type, normalize, stride, offset);\n    }\n\n    // Draw the rectangle.\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = this.positionArrayIndex / 2;\n    gl.drawArrays(primitiveType, offset, count);\n  }\n}\n","\n/**\n * The ExtendedTexture class \"extends\" WebGLTexture and\n * provides additional helper properties.\n *\n * It is not actually a class, as we are really just dynamically\n * adding properties to a WebGLTexture object.\n *\n * Previously this was actually a class, and actually extended WebGLTexture.\n * However, that caused type errors with Jest.\n * This works well enough.\n */\nexport interface ExtendedTexture {\n  loaded: boolean;\n  width: number;\n  height: number;\n}\n\n/**\n * Initialize a shader program, so WebGL knows how to draw our data\n */\nexport function initShaderProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string): WebGLProgram {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n  const shaderProgram = gl.createProgram() as WebGLProgram;\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n  return shaderProgram;\n}\n\n/**\n * Creates a shader of the given type, uploads the source and\n * compiles it.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\n/**\n * Initialize a texture and load an image.\n * When the image finished loading copy it into the texture.\n */\nexport function createTexture(gl: WebGLRenderingContext, url: string): ExtendedTexture {\n  const texture = gl.createTexture() as ExtendedTexture;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGBA;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = gl.RGBA;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n  const image = new Image();\n  image.onload = () => {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    texture.loaded = true;\n    texture.width = image.width;\n    texture.height = image.height;\n  };\n  image.src = url;\n\n  return texture;\n}\n","import {App} from './app';\nimport {GUI} from './gui';\n\nexport class AppState {\n  readonly app: App;\n  readonly gui: GUI;\n\n  constructor(app: App) {\n    this.app = app;\n    this.gui = new GUI(app);\n  }\n\n  update() {\n    this.gui.handleInput();\n    this.gui.draw();\n  }\n}","\nimport {App} from '../app';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\n\n@Serializable('DialogRenderer')\nexport class DialogRenderer {\n  baseRect: Rect;\n  closeButtonRect?: Rect;\n  buttonSlotRect?: Rect;\n\n  constructor(baseRect: Rect, closeButtonRect?: Rect) {\n    this.baseRect = baseRect;\n    this.closeButtonRect = closeButtonRect;\n  }\n\n  draw(app: App, dialog: Dialog) {\n    // Draws the dialog chrome using a 3x3 grid\n    // 0   1   2   3\n    //   x   x   x\n    // 1\n    //   x   x   x\n    // 2\n    //   x   x   x\n    // 3\n\n    // Source image is the baseRect\n    const sx0 = this.baseRect.x;\n    const sy0 = this.baseRect.y;\n    const sw = (this.baseRect.width / 3) | 0;\n    const sh = (this.baseRect.height / 3) | 0;\n    const sx1 = sx0 + sw;\n    const sy1 = sy0 + sh;\n    const sx2 = sx0 + 2 * sw;\n    const sy2 = sy0 + 2 * sw;\n\n    // Destination rect is the dialog\n    const dx0 = dialog.rect.x;\n    const dy0 = dialog.rect.y;\n    const dw = dialog.rect.width - 2 * sw;\n    const dh = dialog.rect.height - 2 * sh;\n    const dx1 = dx0 + sw;\n    const dy1 = dy0 + sh;\n    const dx2 = dx1 + dw;\n    const dy2 = dy1 + dh;\n\n    // Top-left corner\n    app.drawImage(dx0, dy0, sx0, sy0, sw, sh, undefined, sw, sh);\n\n    // Top edge\n    app.drawImage(dx1, dy0, sx1, sy0, sw, sh, undefined, dw, sh);\n\n    // Top-right corner\n    app.drawImage(dx2, dy0, sx2, sy0, sw, sh, undefined, sw, sh);\n\n    // Left edge\n    app.drawImage(dx0, dy1, sx0, sy1, sw, sh, undefined, sw, dh);\n\n    // Center\n    app.drawImage(dx1, dy1, sx1, sy1, sw, sh, undefined, dw, dh);\n\n    // Right edge\n    app.drawImage(dx2, dy1, sx2, sy1, sw, sh, undefined, sw, dh);\n\n    // Bottom-left corner\n    app.drawImage(dx0, dy2, sx0, sy2, sw, sh, undefined, sw, sh);\n\n    // Bottom edge\n    app.drawImage(dx1, dy2, sx1, sy2, sw, sh, undefined, dw, sh);\n\n    // Bottom-right corner\n    app.drawImage(dx2, dy2, sx2, sy2, sw, sh, undefined, sw, sh);\n\n    if (this.closeButtonRect && dialog.closeButton) {\n      const w = this.closeButtonRect.width;\n      const h = this.closeButtonRect.height;\n      const dx = dialog.rect.x2 - w;\n      const dy = dialog.rect.y;\n      const sx = this.closeButtonRect.x;\n      const sy = this.closeButtonRect.y;\n      app.drawImage(dx, dy, sx, sy, w, h);\n    }\n  }\n}\n","import {Ability, TargetType} from './ability';\nimport {Actor} from './actor';\nimport {Animation} from './animations/animation';\nimport {App} from './app';\nimport {AppState} from './appstate';\nimport {Color} from './color';\nimport {StandardColors} from './palettes/standardcolors';\nimport {Entity} from './entity';\nimport {GameOptions} from './gameoptions';\nimport {MessageLog} from './gui/messagelog';\nimport {Panel} from './gui/panel';\nimport {TooltipDialog} from './gui/tooltipdialog';\nimport {Keys} from './keys';\nimport {computePath} from './path';\nimport {Rect} from './rect';\nimport {RNG} from './rng';\nimport {Sprite} from './sprite';\nimport {Vec2} from './vec2';\nimport { ArrayList } from './arraylist';\nimport { Serializable } from './serializable';\nimport { TileMapCell } from './tilemap/tilemapcell';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapRenderer } from './tilemap/tilemaprenderer';\nimport { Message } from './message';\n\nconst DEFAULT_MAP_SIZE = new Rect(0, 0, 256, 256);\nconst DEFAULT_MAP_LAYERS = 1;\nconst DEFAULT_TILE_WIDTH = 16;\nconst DEFAULT_TILE_HEIGHT = 16;\nconst DEFAULT_VIEW_DISTANCE = 13;\n\n@Serializable('Game')\nexport class Game extends AppState {\n  readonly viewport: Rect;\n  readonly viewportFocus: Vec2;\n  readonly focusMargins: Vec2;\n  readonly animations: Animation[];\n  readonly entities: ArrayList<Entity>;\n  readonly cursor: Vec2;\n  readonly tooltip: TooltipDialog;\n  readonly rng: RNG;\n  turnIndex: number;\n  blocked: boolean;\n  messageLog?: MessageLog;\n  targetAbility?: Ability;\n  targetCallback?: Function;\n  targetSprite?: Sprite;\n  targetTile?: TileMapCell;\n  path?: TileMapCell[];\n  pathIndex: number;\n  onUpdate?: Function;\n  tileMap: TileMap;\n  tileMapRenderer: TileMapRenderer;\n  player?: Actor;\n  cooldownSprite?: Sprite;\n  tooltipElement?: Panel;\n  blackoutRect?: Rect;\n  horizontalViewDistance: number;\n  verticalViewDistance: number;\n  zoom: number;\n\n  constructor(app: App, options: GameOptions) {\n    super(app);\n    this.viewport = new Rect(0, 0, app.size.width, app.size.height);\n    this.viewportFocus = new Vec2(0, 0);\n    this.focusMargins = options.focusMargins || new Vec2(0, 0);\n    this.animations = [];\n    this.entities = new ArrayList<Entity>();\n    this.turnIndex = 0;\n    this.blocked = false;\n    this.cursor = new Vec2(-1, -1);\n    this.tooltip = new TooltipDialog();\n    this.rng = new RNG();\n    this.pathIndex = 0;\n    this.horizontalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.verticalViewDistance = options.viewDistance || DEFAULT_VIEW_DISTANCE;\n    this.zoom = 1.0;\n\n    if (options.horizontalViewDistance) {\n      this.horizontalViewDistance = options.horizontalViewDistance;\n    }\n    if (options.verticalViewDistance) {\n      this.verticalViewDistance = options.verticalViewDistance;\n    }\n\n    const mapSize = options.mapSize || DEFAULT_MAP_SIZE;\n    const mapLayers = options.mapLayers || DEFAULT_MAP_LAYERS;\n    const tileSize = options.tileSize || new Rect(0, 0, DEFAULT_TILE_WIDTH, DEFAULT_TILE_HEIGHT);\n    this.tileMap = new TileMap(mapSize.width, mapSize.height, mapLayers, tileSize);\n    this.tileMapRenderer = new TileMapRenderer(app.gl, this.tileMap);\n  }\n\n  get tileSize() {\n    return this.tileMap.tileSize;\n  }\n\n  log(message: string|Message, color?: Color) {\n    if (this.messageLog) {\n      this.messageLog.add(message, color);\n    }\n  }\n\n  addAnimation(animation: Animation) {\n    this.animations.push(animation);\n    return animation.promise;\n  }\n\n  update() {\n    Sprite.updateGlobalAnimations();\n    this.updateTooltip();\n    this.updateZoom();\n\n    if (!this.gui.handleInput()) {\n      this.updateAnimations();\n      this.updateEntities();\n\n      if (this.onUpdate) {\n        this.onUpdate();\n      }\n\n      this.updateViewport();\n    }\n\n    this.drawTileMap();\n\n    if (this.zoom === 1.0) {\n      this.drawTargeting();\n      this.drawEntities();\n      this.drawAnimations();\n    }\n\n    this.gui.draw();\n  }\n\n  private updateTooltip() {\n    if (this.gui.dragElement) {\n      // No tooltips while drag/drop\n      this.tooltip.visible = false;\n      return;\n    }\n\n    if (!this.tooltip.visible) {\n      this.tooltipElement = undefined;\n    }\n\n    const mouse = this.app.mouse;\n    const longPress = mouse.isLongPress();\n\n    if ((!mouse.down && (mouse.dx !== 0 || mouse.dy !== 0)) || longPress) {\n      const hoverPanel = this.gui.getPanelAt(mouse);\n      if (this.tooltipElement !== hoverPanel) {\n        // Hover element has changed\n        this.tooltipElement = hoverPanel;\n        if (hoverPanel) {\n          hoverPanel.updateTooltip(this.tooltip);\n          if (longPress) {\n            window.navigator.vibrate(100);\n          }\n        }\n      }\n\n      if (this.tooltip.visible) {\n        if (!this.tooltip.gui) {\n          // If this is the first time we're showing the tooltip,\n          // make sure it is in the GUI system.\n          this.gui.add(this.tooltip);\n        }\n\n        // Update the tooltip to be on the mouse\n        // This is similar to WoW style tooltips.\n        this.tooltip.showAt(mouse.x, mouse.y);\n\n        // On mobile devices, the tooltip is modal\n        this.tooltip.modal = this.app.mobile;\n      }\n    }\n  }\n\n  private updateZoom() {\n    if (this.app.mouse.wheelDelta !== 0) {\n      const center = this.viewport.getCenter();\n      this.viewportFocus.x = center.x;\n      this.viewportFocus.y = center.y;\n\n      if (this.app.mouse.wheelDelta > 0) {\n        this.zoom *= 0.5;\n      } else {\n        this.zoom *= 2.0;\n      }\n\n      this.viewport.width = (this.zoom * this.app.size.width) | 0;\n      this.viewport.height = (this.zoom * this.app.size.height) | 0;\n      this.viewport.x = center.x - ((this.app.size.width / this.zoom / 2) | 0);\n      this.viewport.y = center.y - ((this.app.size.height / this.zoom / 2) | 0);\n    }\n  }\n\n  private updateAnimations() {\n    // Reset blocked\n    this.blocked = false;\n\n    // Update animations\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      animation.update();\n      if (animation.blocking) {\n        this.blocked = true;\n      }\n    }\n\n    // Remove completed animations\n    for (let i = this.animations.length - 1; i >= 0; i--) {\n      if (this.animations[i].isDone()) {\n        this.animations[i].promise.resolve();\n        this.animations.splice(i, 1);\n      }\n    }\n  }\n\n  private updateEntities() {\n    if (this.player && this.player.hp <= 0) {\n      // Player is dead.  Do nothing.\n      return;\n    }\n\n    // If not blocked on any animations,\n    // then try to do enemy AI\n    // const startTurnIndex = this.turnIndex;\n    let turnCount = 0;\n    while (true) {\n      if (this.entities.length === 0) {\n        // No entities\n        break;\n      }\n\n      if (this.turnIndex >= this.entities.length) {\n        // Turn index out of range.  Entities list must have changed.\n        // Restart back to first entity.\n        this.turnIndex = 0;\n      }\n\n      if (turnCount > this.entities.length * 2) {\n        // Looped back to original entity\n        // In that case, quit to next frame to avoid infinite loops\n        break;\n      }\n\n      const currEntity = this.entities.get(this.turnIndex);\n      if (currEntity instanceof Actor) {\n        if (currEntity.ap > 0) {\n          if (currEntity === this.player) {\n            if (!this.blocked) {\n              this.handlePlayerInput();\n            }\n            break;\n          } else {\n            this.doAi(currEntity);\n          }\n        }\n        if (currEntity.ap <= 0) {\n          // Turn is over\n          currEntity.ap = 0;\n          this.nextTurn();\n        }\n      } else {\n        this.nextTurn();\n      }\n\n      turnCount++;\n    }\n  }\n\n  resetViewport() {\n    if (!this.player) {\n      return;\n    }\n    this.viewportFocus.x = this.player.centerPixelX;\n    this.viewportFocus.y = this.player.centerPixelY;\n    this.viewport.x = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n    this.viewport.y = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n  }\n\n  private updateViewport() {\n    this.viewport.width = this.app.size.width / this.zoom;\n    this.viewport.height = this.app.size.height / this.zoom;\n\n    const mouse = this.app.mouse;\n    if (mouse.isDragging()) {\n      this.viewport.x -= mouse.dx / this.zoom;\n      this.viewport.y -= mouse.dy / this.zoom;\n      this.viewportFocus.x = this.viewport.x + ((this.viewport.width / 2) | 0);\n      this.viewportFocus.y = this.viewport.y + ((this.viewport.height / 2) | 0);\n    } else {\n      // Drift viewport toward focus\n      const driftRate = 0.05;\n      const focusLeftX = this.viewportFocus.x - ((this.app.size.width / this.zoom / 2) | 0);\n      if (focusLeftX !== this.viewport.x) {\n        let dx = driftRate * focusLeftX - driftRate * this.viewport.x;\n        if (dx < 0) {\n          dx = Math.floor(dx);\n        } else {\n          dx = Math.ceil(dx);\n        }\n        this.viewport.x += dx;\n      }\n\n      const focusTopY = this.viewportFocus.y - ((this.app.size.height / this.zoom / 2) | 0);\n      if (focusTopY !== this.viewport.y) {\n        let dy = driftRate * focusTopY - driftRate * this.viewport.y;\n        if (dy < 0) {\n          dy = Math.floor(dy);\n        } else {\n          dy = Math.ceil(dy);\n        }\n        this.viewport.y += dy;\n      }\n    }\n  }\n\n  private drawTileMap() {\n    if (this.app.renderSet.spriteTexture.loaded) {\n      const x = ((this.viewport.x / this.zoom) | 0) * this.zoom;\n      const y = ((this.viewport.y / this.zoom) | 0) * this.zoom;\n      const animFrame = ((Sprite.globalAnimIndex / 30) | 0) % 2;\n      this.tileMapRenderer.draw(x, y, this.viewport.width, this.viewport.height, animFrame);\n    }\n  }\n\n  private drawTargeting() {\n    if (this.isTargeting() && this.targetSprite) {\n      const x = this.cursor.x * this.tileMap.tileSize.width - this.viewport.x;\n      const y = this.cursor.y * this.tileMap.tileSize.height - this.viewport.y;\n      this.targetSprite.draw(this.app, x, y);\n    }\n  }\n\n  private drawEntities() {\n    for (let z = 0; z < 3; z++) {\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity.zIndex === z && this.tileMap.isVisible(entity.x, entity.y)) {\n          entity.draw();\n        }\n      }\n    }\n  }\n\n  private drawAnimations() {\n    let blockingCount = 0;\n    for (let i = 0; i < this.animations.length; i++) {\n      const animation = this.animations[i];\n      if (blockingCount === 0 || !animation.blocking) {\n        animation.draw(this);\n      }\n      if (animation.blocking) {\n        blockingCount++;\n      }\n    }\n  }\n\n  isTargeting() {\n    return !!this.targetAbility;\n  }\n\n  startTargeting(ability: Ability, callback?: Function) {\n    this.targetAbility = ability;\n    this.targetCallback = callback;\n    if (this.player) {\n      this.cursor.x = this.player.x;\n      this.cursor.y = this.player.y;\n    }\n  }\n\n  private endTargeting() {\n    if (this.player && this.targetAbility) {\n      const targetType = this.targetAbility.targetType;\n      let target = null;\n      if (targetType === TargetType.ENTITY) {\n        target = this.getActorAt(this.cursor.x, this.cursor.y);\n      } else if (targetType === TargetType.TILE) {\n        target = this.tileMap.getCell(this.cursor.x, this.cursor.y);\n      }\n      if (target) {\n        if (this.targetAbility.cast(this.player, target)) {\n          if (this.targetCallback) {\n            this.targetCallback();\n          }\n        }\n      }\n    }\n    this.cancelTargeting();\n  }\n\n  cancelTargeting() {\n    this.targetAbility = undefined;\n    this.targetCallback = undefined;\n  }\n\n  private handlePlayerInput() {\n    if (!this.player || this.blocked) {\n      return;\n    }\n\n    if (this.player.ai) {\n      this.player.ai.doAi();\n      this.player.ap = 0;\n      return;\n    }\n\n    const mouse = this.app.mouse;\n    if (mouse.down || mouse.dx !== 0 || mouse.dy !== 0) {\n      this.cursor.x = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      this.cursor.y = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n    }\n\n    if (this.app.isKeyDown(Keys.VK_SHIFT)) {\n      let dx = 0;\n      let dy = 0;\n      if (this.app.isDownLeftKeyPressed()) {\n        dx = -1;\n        dy = 1\n      }\n      if (this.app.isDownKeyPressed()) {\n        dy = 1;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        dx = 1;\n        dy = 1;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        dx = -1;\n      }\n      if (this.app.isRightKeyPressed()) {\n        dx = 1;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        dx = -1;\n        dy = -1;\n      }\n      if (this.app.isUpKeyPressed()) {\n        dy = -1;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        dx = 1;\n        dy = -1;\n      }\n      this.viewportFocus.x -= dx * this.tileMap.tileSize.height;\n      this.viewportFocus.y -= dy * this.tileMap.tileSize.height;\n      return;\n    }\n\n    if (this.isTargeting()) {\n      if (this.app.isKeyPressed(Keys.VK_ENTER) || this.app.mouse.isClicked()) {\n        this.endTargeting();\n      }\n      if (this.app.isKeyPressed(Keys.VK_ESCAPE)) {\n        this.cancelTargeting();\n      }\n      if (this.app.isDownLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y++;\n      }\n      if (this.app.isDownKeyPressed()) {\n        this.cursor.y++;\n      }\n      if (this.app.isDownRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y++;\n      }\n      if (this.app.isLeftKeyPressed()) {\n        this.cursor.x--;\n      }\n      if (this.app.isRightKeyPressed()) {\n        this.cursor.x++;\n      }\n      if (this.app.isUpLeftKeyPressed()) {\n        this.cursor.x--;\n        this.cursor.y--;\n      }\n      if (this.app.isUpKeyPressed()) {\n        this.cursor.y--;\n      }\n      if (this.app.isUpRightKeyPressed()) {\n        this.cursor.x++;\n        this.cursor.y--;\n      }\n      return;\n    }\n\n    if (mouse.isClicked()) {\n      const tx = ((this.viewport.x + mouse.x) / this.tileMap.tileSize.width) | 0;\n      const ty = ((this.viewport.y + mouse.y) / this.tileMap.tileSize.height) | 0;\n      const target = this.tileMap.getCell(tx, ty);\n      if (target && target !== this.targetTile) {\n        this.targetTile = target;\n        this.path = computePath(this.tileMap, this.player, this.targetTile, 100);\n        this.pathIndex = 0;\n      }\n    }\n\n    let nextStep = null;\n    if (this.path) {\n      nextStep = this.path[this.pathIndex];\n      while (nextStep && nextStep.x === this.player.x && nextStep.y === this.player.y) {\n        this.pathIndex++;\n        nextStep = this.pathIndex < this.path.length ? this.path[this.pathIndex] : null;\n      }\n      if (!nextStep) {\n        this.stopAutoWalk();\n      }\n    }\n\n    if (nextStep) {\n      const dx = nextStep.x - this.player.x;\n      const dy = nextStep.y - this.player.y;\n      if (!this.tryMoveOrAttack(dx, dy)) {\n        this.stopAutoWalk();\n      }\n      return;\n    }\n\n    if (this.app.isDownLeftKeyPressed() && this.tryMoveOrAttack(-1, 1)) {\n      return;\n    }\n    if (this.app.isDownKeyPressed() && this.tryMoveOrAttack(0, 1)) {\n      return;\n    }\n    if (this.app.isDownRightKeyPressed() && this.tryMoveOrAttack(1, 1)) {\n      return;\n    }\n    if (this.app.isLeftKeyPressed() && this.tryMoveOrAttack(-1, 0)) {\n      return;\n    }\n    if (this.app.isRightKeyPressed() && this.tryMoveOrAttack(1, 0)) {\n      return;\n    }\n    if (this.app.isUpLeftKeyPressed() && this.tryMoveOrAttack(-1, -1)) {\n      return;\n    }\n    if (this.app.isUpKeyPressed() && this.tryMoveOrAttack(0, -1)) {\n      return;\n    }\n    if (this.app.isUpRightKeyPressed() && this.tryMoveOrAttack(1, -1)) {\n      return;\n    }\n    if (this.app.isWaitKeyPressed()) {\n      this.player.ap = 0;\n    }\n  }\n\n  /**\n   * Tries to move or attack in the specified direction.\n   * Returns true on success (the player moved or attacked).\n   * Returns false on failure (unable to move or attack).\n   * @param dx The x direction to move.\n   * @param dy The y direction to move.\n   */\n  tryMoveOrAttack(dx: number, dy: number) {\n    const player = this.player;\n    if (!player) {\n      return false;\n    }\n\n    const destX = player.x + dx;\n    const destY = player.y + dy;\n\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (player !== other && other.x === destX && other.y === destY) {\n        if (this.path) {\n          // Autowalking...\n          if (!(other instanceof Actor)) {\n            // If it's not an actor (i.e., item or stairs), pick it up and carry on\n            return other.onBump(player);\n          }\n          if (this.pathIndex === 1) {\n            this.stopAutoWalk();\n            return other.onBump(player);\n          }\n          // Otherwise stop and make player confirm\n          this.stopAutoWalk();\n          return true;\n        }\n\n        // Otherwise, this is keyboard input, so go ahead and bump\n        return other.onBump(player);\n      }\n    }\n\n    return player.move(dx, dy);\n  }\n\n  private recalculateViewportFocus() {\n    const player = this.player;\n    if (!player) {\n      return;\n    }\n\n    const map = this.tileMap;\n    const tileWidth = map.tileSize.width;\n    const tileHeight = map.tileSize.height;\n\n    let visibleMinX = player.x * tileWidth;\n    let visibleMinY = player.y * tileHeight;\n    let visibleMaxX = (player.x + 1) * tileWidth;\n    let visibleMaxY = (player.y + 1) * tileHeight;\n\n    // Find the bounds of the visible area.\n    for (let y = player.y - this.verticalViewDistance; y <= player.y + this.verticalViewDistance; y++) {\n      for (let x = player.x - this.horizontalViewDistance; x <= player.x + this.horizontalViewDistance; x++) {\n        if (map.isVisible(x, y)) {\n          visibleMinX = Math.min(visibleMinX, x * tileWidth);\n          visibleMinY = Math.min(visibleMinY, y * tileHeight);\n          visibleMaxX = Math.max(visibleMaxX, (x + 1) * tileWidth);\n          visibleMaxY = Math.max(visibleMaxY, (y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the bounds of desired area\n    // Ignore Actor.offset, because we're jumping to the destination.\n    let minX = player.x * tileWidth;\n    let minY = player.y * tileHeight;\n    let maxX = minX + tileWidth;\n    let maxY = minY + tileHeight;\n\n    if (this.path) {\n      // If there is an auto-walk path, use that\n      for (let i = this.pathIndex; i < this.path.length; i++) {\n        const pathTile = this.path[i];\n        minX = Math.min(minX, pathTile.x * tileWidth);\n        minY = Math.min(minY, pathTile.y * tileHeight);\n        maxX = Math.max(maxX, (pathTile.x + 1) * tileWidth);\n        maxY = Math.max(maxY, (pathTile.y + 1) * tileHeight);\n      }\n    } else {\n      // Otherwise, use all visible entities.\n      for (let i = 0; i < this.entities.length; i++) {\n        const entity = this.entities.get(i);\n        if (entity instanceof Actor && map.isVisible(entity.x, entity.y)) {\n          minX = Math.min(minX, entity.x * tileWidth);\n          minY = Math.min(minY, entity.y * tileHeight);\n          maxX = Math.max(maxX, (entity.x + 1) * tileWidth);\n          maxY = Math.max(maxY, (entity.y + 1) * tileHeight);\n        }\n      }\n    }\n\n    // Find the center of the bounds of all visible actors\n\n    if ((visibleMaxX - visibleMinX) <= (this.viewport.width - 2 * this.focusMargins.x)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.x = Math.round((visibleMinX + visibleMaxX) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.x = Math.round((minX + maxX) / 2.0);\n    }\n\n    if ((visibleMaxY - visibleMinY) <= (this.viewport.height - 2 * this.focusMargins.y)) {\n      // The entire visible range fits in the viewport, so center it\n      this.viewportFocus.y = Math.round((visibleMinY + visibleMaxY) / 2.0);\n    } else {\n      // The visible range goes beyond, so focus on entities or path\n      this.viewportFocus.y = Math.round((minY + maxY) / 2.0);\n    }\n  }\n\n  private doAi(entity: Actor) {\n    if (!entity.ai) {\n      // No AI - do nothing\n      entity.ap = 0;\n      return;\n    }\n\n    if (entity.visibleDuration > 0 || entity.ai.alwaysActive) {\n      entity.ai.doAi();\n    }\n\n    entity.ap = 0;\n  }\n\n  private nextTurn() {\n    if (this.turnIndex < this.entities.length) {\n      const currEntity = this.entities.get(this.turnIndex);\n      currEntity.endTurn();\n\n      if (this.player === currEntity) {\n        this.recomputeFov();\n      }\n    }\n\n    this.turnIndex++;\n    if (this.turnIndex >= this.entities.length) {\n      this.turnIndex = 0;\n    }\n\n    if (this.turnIndex >= 0 && this.turnIndex < this.entities.length) {\n      const nextEntity = this.entities.get(this.turnIndex);\n      nextEntity.startTurn();\n\n      if (this.player === nextEntity) {\n        this.recalculateViewportFocus();\n      }\n    }\n  }\n\n  stopAutoWalk() {\n    this.path = undefined;\n    this.targetTile = undefined;\n  }\n\n  isBlocked(x: number, y: number) {\n    if (this.tileMap.isBlocked(x, y)) {\n      return true;\n    }\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other.blocks && other.x === x && other.y === y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity.x === x && entity.y === y) {\n        return entity;\n      }\n    }\n    return undefined;\n  }\n\n  getActorAt(x: number, y: number) {\n    for (let i = 0; i < this.entities.length; i++) {\n      const other = this.entities.get(i);\n      if (other instanceof Actor && other.x === x && other.y === y) {\n        return other;\n      }\n    }\n    return undefined;\n  }\n\n  recomputeFov() {\n    if (!this.player) {\n      // FOV requires a player and a tile map\n      return;\n    }\n\n    this.tileMap.computeFov(this.player.x, this.player.y, this.horizontalViewDistance, this.verticalViewDistance);\n\n    // Determine which entities are visible\n    for (let i = 0; i < this.entities.length; i++) {\n      const entity = this.entities.get(i);\n      if (entity === this.player) {\n        continue;\n      }\n      if (!(entity instanceof Actor)) {\n        continue;\n      }\n      if (this.tileMap.isVisible(entity.x, entity.y)) {\n        if (!entity.seen) {\n          // Spotted a new entity, stop auto walking\n          entity.seen = true;\n          this.player.addFloatingText('!', StandardColors.WHITE);\n          this.stopAutoWalk();\n\n          this.viewportFocus.x = ((this.player.centerPixelX + entity.centerPixelX) / 2) | 0;\n          this.viewportFocus.y = ((this.player.centerPixelY + entity.centerPixelY) / 2) | 0;\n        }\n        entity.visibleDuration++;\n      } else {\n        entity.visibleDuration = -1;\n      }\n    }\n  }\n}\n","\nimport { Vec2 } from './vec2';\nimport { TileMap } from './tilemap/tilemap';\nimport { TileMapCell } from './tilemap/tilemapcell';\n\nconst dxs = [-1, 0, 1, -1, 1, -1, 0, 1];\nconst dys = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst costs = [1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5];\n\n// const dxs = [0, -1, 1, 0];\n// const dys = [-1, 0, 0, 1];\n// const costs = [1, 1, 1, 1];\n\n/**\n * Calculates Dijkstra's algorithm.\n *\n * @param {!Object} source Starting point, must have x and y properties.\n * @param {!Object=} dest Optional destination point, must have x and y properties.\n * @param {!number=} maxDist Optional maximum distance to examine.\n * @return {?Array} Array of steps if destination found; null otherwise.\n */\nexport function computePath(map: TileMap, source: Vec2, dest: Vec2, maxDist: number) {\n  clearDijkstra(map, dest);\n\n  const sourceCell = map.grid[source.y][source.x];\n  sourceCell.g = 0.0;\n\n  const q: TileMapCell[] = [sourceCell];\n\n  while (q.length > 0) {\n    const u = getMinCell(q);\n\n    if (u.x === dest.x && u.y === dest.y) {\n      return buildPath(u);\n    }\n\n    for (let i = 0; i < dxs.length; i++) {\n      const x = u.x + dxs[i];\n      const y = u.y + dys[i];\n      if (x >= 0 && x < map.width && y >= 0 && y < map.height) {\n        const v = map.grid[y][x];\n        const alt = u.g + costs[i];\n        if (alt < v.g && alt <= maxDist && ((x === dest.x && y === dest.y) || !map.grid[y][x].blocked)) {\n          v.g = alt;\n          v.prev = u;\n          q.push(v);\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction clearDijkstra(map: TileMap, dest: Vec2) {\n  for (let y = 0; y < map.height; y++) {\n    for (let x = 0; x < map.width; x++) {\n      const cell = map.grid[y][x];\n      cell.g = Infinity;\n      cell.h = Math.min(Math.abs(x - dest.x), Math.abs(y - dest.y));\n      cell.prev = null;\n    }\n  }\n}\n\nfunction getMinCell(q: TileMapCell[]): TileMapCell {\n  let bestCell = null;\n  let bestIndex = -1;\n  let minDist = Infinity;\n\n  for (let i = 0; i < q.length; i++) {\n    const cell = q[i];\n    if (cell.g !== Infinity && cell.g + cell.h < minDist) {\n      bestCell = cell;\n      bestIndex = i;\n      minDist = cell.g + cell.h;\n    }\n  }\n\n  q.splice(bestIndex, 1);\n  return bestCell as TileMapCell;\n}\n\nfunction buildPath(cell: TileMapCell) {\n  const result = [];\n  let curr: TileMapCell | null = cell;\n  while (curr) {\n    result.push(curr);\n    curr = curr.prev;\n  }\n  result.reverse();\n  return result;\n}\n","/*\n * Random number generator.\n *\n * Currently using a Mersenne Twister based on:\n * https://gist.github.com/banksean/300494\n *\n * Old version used LCG\n * https://stackoverflow.com/a/424445/2051724\n * but had precision issues which led to cycle issues.\n */\n\n/* Period parameters */\nconst N = 624;\nconst M = 397;\nconst MATRIX_A = 0x9908b0df;   /* constant vector a */\nconst UPPER_MASK = 0x80000000; /* most significant w-r bits */\nconst LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\nexport class RNG {\n  private readonly mt: number[];\n  private mti: number;\n\n  /**\n   * Creates a new random number generator.\n   *\n   * @param seed The integer seed.\n   */\n  constructor(seed?: number) {\n    this.mt = new Array(N); /* the array for the state vector */\n    this.mti = N + 1; /* mti==N+1 means mt[N] is not initialized */\n    this.setSeed(seed || 1);\n  }\n\n  setSeed(s: number) {\n    // this.state = seed;\n    this.mt[0] = s >>> 0;\n    for (this.mti = 1; this.mti < N; this.mti++) {\n      const s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n      this.mt[this.mti] =\n        (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\n          (s & 0x0000ffff) * 1812433253) + this.mti;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n      /* In the previous versions, MSBs of the seed affect   */\n      /* only MSBs of the array mt[].                        */\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      this.mt[this.mti] >>>= 0;\n      /* for >32 bit machines */\n    }\n  }\n\n  nextInt() {\n    let y = 0;\n    const mag01 = new Array(0x0, MATRIX_A);\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n    if (this.mti >= N) { /* generate N words at one time */\n      var kk;\n\n      // if (this.mti == N+1)   /* if init_genrand() has not been called, */\n      //   this.setSeed(5489); /* a default initial seed is used */\n\n      for (kk = 0; kk < N - M; kk++) {\n        y = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + M] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      for (; kk < N - 1; kk++) {\n        y = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + (M - N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      y = (this.mt[N - 1] & UPPER_MASK) | (this.mt[0] & LOWER_MASK);\n      this.mt[N - 1] = this.mt[M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n      this.mti = 0;\n    }\n\n    y = this.mt[this.mti++];\n\n    /* Tempering */\n    y ^= (y >>> 11);\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= (y >>> 18);\n\n    return y >>> 0;\n  }\n\n  /**\n   * Returns a floating point number between 0.0 and 1.0.\n   */\n  nextFloat() {\n    return this.nextInt() * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  }\n\n  /**\n   * Returns an integer in the range start (inclusive) to end (exclusive).\n   * @param start Lower bound, inclusive.\n   * @param end Upper bound, exclusive.\n   */\n  nextRange(start: number, end: number) {\n    return start + ((this.nextFloat() * (end - start)) | 0);\n  }\n\n  chooseIndex(chances: number[]) {\n    const total = chances.reduce((a, b) => a + b);\n    const roll = this.nextRange(1, total + 1);\n    let runningTotal = 0;\n\n    for (let i = 0; i < chances.length; i++) {\n      runningTotal += chances[i];\n      if (roll <= runningTotal) {\n        return i;\n      }\n    }\n\n    return chances.length - 1;\n  }\n\n  chooseKey(chancesMap: { [key: string]: number }) {\n    const values: string[] = [];\n    const chances: number[] = [];\n\n    for (const property in chancesMap) {\n      if (chancesMap.hasOwnProperty(property)) {\n        values.push(property);\n        chances.push(chancesMap[property]);\n      }\n    }\n\n    return values[this.chooseIndex(chances)];\n  }\n}\n","import { App } from './app';\nimport { Color } from './color';\nimport { Rect } from './rect';\nimport { Serializable } from './serializable';\n\nconst DEFAULT_TICKS_PER_FRAME = 30;\n\n@Serializable('Sprite')\nexport class Sprite extends Rect {\n  static globalAnimIndex = 0;\n  readonly frames: number;\n  readonly loop: boolean;\n  readonly ticksPerFrame: number;\n  readonly colorOverride?: Color;\n  private animIndex: number;\n  private animDelay: number;\n\n  constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      frames?: number,\n      loop?: boolean,\n      ticksPerFrame?: number,\n      colorOverride?: Color) {\n    super(x, y, width, height);\n    this.frames = frames || 1;\n    this.loop = !!loop;\n    this.ticksPerFrame = ticksPerFrame || DEFAULT_TICKS_PER_FRAME;\n    this.colorOverride = colorOverride;\n    this.animIndex = 0;\n    this.animDelay = 0;\n  }\n\n  draw(app: App, x: number, y: number, colorOverride?: Color) {\n    let frame = this.animIndex;\n    if (this.loop) {\n      frame = ((Sprite.globalAnimIndex / this.ticksPerFrame) | 0) % this.frames;\n    }\n\n    const u = this.x + frame * this.width;\n    const v = this.y;\n    const color = colorOverride || this.colorOverride;\n    app.drawImage(x, y, u, v, this.width, this.height, color);\n\n    this.animDelay++;\n    if (this.animDelay > this.ticksPerFrame) {\n      this.animDelay = 0;\n      this.animIndex++;\n      if (this.animIndex >= this.frames) {\n        if (this.loop) {\n          this.animIndex = 0;\n        } else {\n          this.animIndex = this.frames - 1;\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Sprite(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.frames,\n      this.loop,\n      this.ticksPerFrame,\n      this.colorOverride);\n  }\n\n  static updateGlobalAnimations() {\n    Sprite.globalAnimIndex++;\n  }\n}\n","import { Vec2 } from \"../vec2\";\n\nexport class TileMapCell extends Vec2 {\n  blocked: boolean;\n  blockedSight: boolean;\n  visible: boolean;\n  seen: boolean;\n  g: number;\n  h: number;\n  prev: TileMapCell | null;\n\n  constructor(x: number, y: number) {\n    super(x, y);\n    this.blocked = true;\n    this.blockedSight = true;\n    this.visible = false;\n    this.seen = false;\n    this.g = 0;\n    this.h = 0;\n    this.prev = null;\n  }\n}\n","import {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\n@Serializable('ShortcutButtonSlot')\nexport class ShortcutButtonSlot extends ButtonSlot {\n  onDrop(panel: Panel) {\n    if (this.children.length > 0) {\n      // Already has a button\n      // TODO: Add ability to replace an existing shortcut\n      return false;\n    }\n\n    if (panel instanceof ItemButton) {\n      const itemButton = panel as ItemButton;\n      const containerItems = itemButton.containerItems;\n      const shortcutItem = itemButton.stackItems.get(0);\n      this.add(new ItemShortcutButton(this.rect.clone(), containerItems, shortcutItem));\n      // Even though the operation was successful,\n      // return false because we don't want to move the original button\n      return false;\n    }\n\n    if (panel instanceof TalentButton) {\n      if (panel.shortcut) {\n        // Move the existing shortcut\n        return true;\n      } else {\n        // Create a shortcut to the talent\n        this.add(new TalentButton(this.rect.clone(), panel.talent, true));\n        return false;\n      }\n    }\n\n    if (panel instanceof ItemShortcutButton || (panel instanceof TalentButton && panel.shortcut)) {\n      // Move button\n      return true;\n    }\n\n    return false;\n  }\n}\n","export * from './ability';\nexport * from './actor';\nexport * from './ai/ai';\nexport * from './ai/basicmonster';\nexport * from './ai/confusedmonster';\nexport * from './animations/animation';\nexport * from './animations/bumpanimation';\nexport * from './animations/fadeinanimation';\nexport * from './animations/fadeoutanimation';\nexport * from './animations/floatingtextanimation';\nexport * from './animations/projectileanimation';\nexport * from './animations/slideanimation';\nexport * from './app';\nexport * from './appstate';\nexport * from './arraylist';\nexport * from './arraylistlistener';\nexport * from './color';\nexport * from './compoundmessage';\nexport * from './entity';\nexport * from './game';\nexport * from './gameoptions';\nexport * from './gui';\nexport * from './gui/button';\nexport * from './gui/buttonslot';\nexport * from './gui/complexselectdialog';\nexport * from './gui/dialog';\nexport * from './gui/dialogrenderer';\nexport * from './gui/imagepanel';\nexport * from './gui/itembutton';\nexport * from './gui/itemcontainerdialog';\nexport * from './gui/itemshortcutbutton';\nexport * from './gui/messagelog';\nexport * from './gui/messagepanel';\nexport * from './gui/panel';\nexport * from './gui/selectdialog';\nexport * from './gui/selectoption';\nexport * from './gui/selectoptionrenderer';\nexport * from './gui/shortcutbar';\nexport * from './gui/shortcutbuttonslot';\nexport * from './gui/talentbutton';\nexport * from './gui/talentsdialog';\nexport * from './input';\nexport * from './item';\nexport * from './keyboard';\nexport * from './keys';\nexport * from './message';\nexport * from './mouse';\nexport * from './palettes/cgacolors';\nexport * from './palettes/pico8colors';\nexport * from './palettes/standardcolors';\nexport * from './path';\nexport * from './rect';\nexport * from './rng';\nexport * from './serializable';\nexport * from './serializer';\nexport * from './sprite';\nexport * from './talent';\nexport * from './tilemap/tilemap';\nexport * from './tilemap/tilemapcell';\nexport * from './tilemap/tilemaprenderer';\nexport * from './vec2';\n","\nexport class AnimationPromise {\n  readonly handlers: Function[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  then(handler: Function) {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  resolve() {\n    for (let i = 0; i < this.handlers.length; i++) {\n      this.handlers[i]();\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_DAMAGE = 1;\n\n@Serializable('BasicMonster')\nexport class BasicMonster extends AI {\n  damageFunc?: (attacker: Actor, target: Actor) => number;\n\n  constructor(actor: Actor, damageFunc?: (attacker: Actor, target: Actor) => number) {\n    super(actor);\n    this.damageFunc = damageFunc;\n  }\n\n  doAi() {\n    const monster = this.actor;\n    const player = monster.game.player;\n    if (!player) {\n      return;\n    }\n\n    if (monster.distanceTo(player) > 1.5) {\n      // Move towards player if far away\n      monster.moveToward(player.x, player.y);\n\n    } else if (player.hp > 0) {\n      // Close enough, attack! (if the player is still alive.)\n      const damage = this.damageFunc ? this.damageFunc(monster, player) : DEFAULT_DAMAGE;\n      monster.attack(player, damage);\n    }\n  }\n}\n","import {Actor} from '../actor';\n\nimport {AI} from './ai';\nimport { Serializable } from '../serializable';\n\n@Serializable('ConfusedMonster')\nexport class ConfusedMonster extends AI {\n  numTurns: number;\n  oldAi?: AI;\n\n  constructor(actor: Actor) {\n    super(actor);\n    this.numTurns = 10;\n    this.oldAi = actor.ai;\n  }\n\n  doAi() {\n    if (this.numTurns > 0) {\n      // Still confused...\n      // Move in a random direction, and decrease the number of turns confused\n      const rng = this.actor.game.rng;\n      this.actor.move(rng.nextRange(-1, 2), rng.nextRange(-1, 2));\n      this.numTurns--;\n    } else {\n      this.actor.ai = this.oldAi;\n    }\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeInAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {fromRgb} from '../color';\nimport {Game} from '../game';\n\nimport {Animation} from './animation';\n\nexport class FadeOutAnimation extends Animation {\n  readonly duration: number;\n\n  constructor(duration: number) {\n    super(duration, true);\n    this.duration = duration;\n  }\n\n  draw(game: Game) {\n    const src = game.blackoutRect;\n    if (!src) {\n      return;\n    }\n    const x = 1.0 - this.countdown / this.duration;\n    const alpha = Math.max(1, Math.min(255, (255.0 * x) | 0));\n    const color = fromRgb(0, 0, 0, alpha);\n    game.app.drawImage(0, 0, src.x, src.y, src.width, src.height, color, game.app.size.width, game.app.size.height);\n  }\n}\n","import {Game} from '../game';\nimport {Sprite} from '../sprite';\nimport {Vec2} from '../vec2';\n\nimport {Animation} from './animation';\n\nexport class ProjectileAnimation extends Animation {\n  readonly sprite: Sprite;\n  readonly position: Vec2;\n  readonly velocity: Vec2;\n  readonly duration: number;\n\n  constructor(sprite: Sprite, position: Vec2, velocity: Vec2, duration: number) {\n    super(duration, true);\n    this.sprite = sprite;\n    this.position = position;\n    this.velocity = velocity;\n    this.duration = duration;\n  }\n\n  update() {\n    super.update();\n    this.position.add(this.velocity);\n  }\n\n  draw(game: Game) {\n    const x = this.position.x - game.viewport.x;\n    const y = this.position.y - game.viewport.y;\n    this.sprite.draw(game.app, x, y);\n  }\n}\n","import {Rect} from './rect';\n\nconst START_CHAR_CODE = 32;\nconst END_CHAR_CODE = 126;\n\nexport abstract class Font {\n  abstract getOffset(charCode: number): number;\n  abstract getWidth(charCode: number): number;\n  abstract getHeight(): number;\n\n  /**\n   * Returns whether the character is in the printable range.\n   * @param charCode The integer character ASCII code.\n   */\n  isInRange(charCode: number) {\n    return charCode >= START_CHAR_CODE && charCode <= END_CHAR_CODE;\n  }\n\n  /**\n   * Returns the width of a string with the currently configured font.\n   * @param str The text string.\n   */\n  getStringWidth(str: string) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += this.getWidth(str.charCodeAt(i));\n    }\n    return sum;\n  }\n}\n\nexport class MonospacedFont extends Font {\n  readonly glyphSize: Rect;\n\n  constructor(glyphSize: Rect) {\n    super();\n    this.glyphSize = glyphSize;\n  }\n\n  getOffset(charCode: number) {\n    return (charCode - START_CHAR_CODE) * this.glyphSize.width;\n  }\n\n  getWidth() {\n    return this.glyphSize.width;\n  }\n\n  getHeight() {\n    return this.glyphSize.height;\n  }\n}\n\nexport class ProportionalFont extends Font {\n  readonly height: number;\n  readonly widths: number[];\n  readonly offsets: number[];\n\n  constructor(height: number, widths: number[]) {\n    super();\n    this.height = height;\n    this.widths = widths;\n    this.offsets = [0];\n\n    let offset = 0;\n    for (let i = 0; i < this.widths.length; i++) {\n      offset += this.widths[i];\n      this.offsets.push(offset);\n    }\n  }\n\n  getOffset(charCode: number) {\n    return this.offsets[charCode - START_CHAR_CODE];\n  }\n\n  getWidth(charCode: number) {\n    return this.widths[charCode - START_CHAR_CODE];\n  }\n\n  getHeight() {\n    return this.height;\n  }\n}\n\nexport const FONT_04B03 = new ProportionalFont(8, [\n  4, 2, 4, 6, 5, 6, 6, 2, 3, 3, 4, 4, 3, 4, 2, 6, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 5,\n  6, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 5, 4, 6, 5, 5, 5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 4, 3, 6, 3, 4, 5,\n  3, 5, 5, 4, 5, 5, 4, 5, 5, 2, 3, 5, 2, 6, 5, 5, 5, 5, 4, 5, 4, 5, 5, 6, 4, 5, 5, 4, 2, 4, 5, 0\n]);\n","import {Color} from './color';\nimport { App } from './app';\nimport { Vec2 } from './vec2';\nimport { Message } from './message';\n\nexport class CompoundMessage extends Message {\n  readonly messages: Message[];\n\n  constructor(...messages: Message[]) {\n    super('', 0);\n    this.messages = messages;\n  }\n\n  draw(app: App, pos: Vec2) {\n    // app.drawString(this.text, pos.x, pos.y, this.color, pos);\n    for (let i = 0; i < this.messages.length; i++) {\n      this.messages[i].draw(app, pos);\n    }\n  }\n}\n","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Dialog} from './dialog';\nimport { Serializable } from '../serializable';\nimport { Vec2 } from '../vec2';\n\nconst WIDTH = 100;\nconst MARGIN = 5;\nconst LINE_PADDING = 2;\n\n@Serializable('TooltipDialog')\nexport class TooltipDialog extends Dialog {\n  messages: Message[];\n\n  constructor() {\n    super(new Rect(0, 0, WIDTH, 10));\n    this.messages = [];\n    this.visible = false;\n  }\n\n  showAt(x: number, y: number) {\n    if (!this.gui) {\n      return;\n    }\n\n    // Resize\n    const app = this.gui.app;\n    const font = app.font;\n    const lineHeight = font.getHeight() + LINE_PADDING;\n    this.rect.width = 2 * MARGIN;\n    this.rect.height = 2 * MARGIN + this.messages.length * lineHeight;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      const width = 2 * MARGIN + font.getStringWidth(msg.text);\n      this.rect.width = Math.max(this.rect.width, width);\n    }\n\n    if (x + this.rect.width >= app.size.width) {\n      this.rect.x = x - this.rect.width - 2;\n    } else {\n      this.rect.x = x + 2;\n    }\n\n    if (y - this.rect.height < 0) {\n      this.rect.y = y + 2;\n    } else {\n      this.rect.y = y - this.rect.height - 2;\n    }\n\n    if (this.rect.x < 0) {\n      this.rect.x = 0;\n    }\n\n    if (this.rect.y < 0) {\n      this.rect.y = 0;\n    }\n\n    this.visible = true;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    // Draw the dialog border\n    super.drawContents();\n\n    const lineHeight = this.gui.app.font.getHeight() + LINE_PADDING;\n    const pos = new Vec2(this.rect.x + MARGIN, this.rect.y + MARGIN);\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      msg.draw(this.gui.app, pos);\n      pos.x = this.rect.x + MARGIN;\n      pos.y += lineHeight;\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    if (this.gui.app.mouse.isClicked()) {\n      this.visible = false;\n    }\n\n    return false;\n  }\n}\n","import { getTileId } from \"./tilemap\";\n\n/**\n * @constructor\n * @param {number} width\n * @param {number} height\n */\nexport class TileMapLayer {\n  readonly width: number;\n  readonly height: number;\n  readonly imageData: Uint8Array;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.imageData = new Uint8Array(4 * width * height);\n    this.clear();\n  }\n\n  clear() {\n    let i = 0;\n    while (i < this.imageData.length) {\n      this.imageData[i++] = 0;\n    }\n  }\n\n  getIndex(x: number, y: number) {\n    return 4 * (y * this.width + x);\n  }\n\n  setTile(x: number, y: number, tile: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index] = (tile % 64) | 0;\n    this.imageData[index + 1] = (tile / 64) | 0;\n  }\n\n  getTile(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return getTileId(this.imageData[index], this.imageData[index + 1]);\n  }\n\n  isAnimated(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return !!this.imageData[index + 2];\n  }\n\n  setAnimated(x: number, y: number, animated: boolean) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 2] = animated ? 1 : 0;\n  }\n\n  getAlpha(x: number, y: number) {\n    const index = this.getIndex(x, y);\n    return this.imageData[index + 3];\n  }\n\n  setAlpha(x: number, y: number, alpha: number) {\n    const index = this.getIndex(x, y);\n    this.imageData[index + 3] = alpha;\n  }\n}\n","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Vec2} from '../vec2';\n\nimport {DefaultSelectOptionRenderer} from './defaultselectoptionrenderer';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\n\n@Serializable('ComplexSelectDialog')\nexport class ComplexSelectDialog extends Dialog {\n  options: SelectOption[];\n  selectedIndex: number;\n  renderer: SelectOptionRenderer;\n  onSelect?: Function;\n  onCancel?: Function;\n\n  constructor(rect: Rect, options: SelectOption[]) {\n    super(rect);\n    this.options = options;\n    this.selectedIndex = 0;\n    this.renderer = new DefaultSelectOptionRenderer();\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    const point = new Vec2(offset.x + MARGIN, offset.y + MARGIN);\n    for (let i = 0; i < this.options.length; i++) {\n      const option = this.options[i];\n      const selected = i === this.selectedIndex;\n      this.renderer.drawOption(this.gui, point, option, selected);\n      point.y += this.renderer.getHeight(option, selected);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    const app = this.gui.app;\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (app.isKeyPressed(Keys.VK_A + i)) {\n        this.selectedIndex = i;\n        if (this.onSelect) {\n          this.onSelect(this.options[i]);\n        }\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ENTER)) {\n      if (this.onSelect) {\n        this.onSelect(this.options[this.selectedIndex]);\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_ESCAPE)) {\n      if (this.onCancel) {\n        this.onCancel();\n      }\n    }\n\n    if (app.isKeyPressed(Keys.VK_UP)) {\n      this.selectedIndex--;\n    }\n\n    if (app.isKeyPressed(Keys.VK_DOWN)) {\n      this.selectedIndex++;\n    }\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex += this.options.length;\n    }\n\n    if (this.selectedIndex >= this.options.length) {\n      this.selectedIndex -= this.options.length;\n    }\n\n    const mouse = app.mouse;\n    const offset = this.rect;\n    let y = offset.y + MARGIN;\n    if (mouse.upCount === 1 && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options[i];\n        const selected = i === this.selectedIndex;\n        const lineHeight = this.renderer.getHeight(option, selected);\n        const startY = y;\n        const endY = y + lineHeight;\n        if (mouse.y >= startY && mouse.y < endY) {\n          if (selected) {\n            if (this.onSelect) {\n              this.onSelect(option);\n            }\n          } else {\n            this.selectedIndex = i;\n          }\n        }\n        y += lineHeight;\n      }\n    }\n\n    return true;\n  }\n}\n","import {StandardColors} from '../palettes/standardcolors';\nimport {GUI} from '../gui';\nimport {Vec2} from '../vec2';\n\nimport {SelectOption} from './selectoption';\nimport {SelectOptionRenderer} from './selectoptionrenderer';\nimport { Serializable } from '../serializable';\n\n@Serializable('DefaultSelectOptionRenderer')\nexport class DefaultSelectOptionRenderer implements SelectOptionRenderer {\n  getHeight(option: SelectOption, selected: boolean) {\n    return 10;\n  }\n\n  drawOption(gui: GUI, point: Vec2, option: SelectOption, selected: boolean) {\n    const color = selected ? StandardColors.YELLOW : StandardColors.WHITE;\n    gui.app.drawString(option.name, point.x, point.y, color);\n  }\n}","import {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ImagePanel')\nexport class ImagePanel extends Panel {\n  readonly srcRect: Rect;\n\n  constructor(srcRect: Rect, destRect: Rect) {\n    super(destRect);\n    this.srcRect = srcRect;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const src = this.srcRect;\n    const dst = this.rect;\n    this.gui.app.drawImage(dst.x, dst.y, src.x, src.y, dst.width, dst.height);\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {ItemButton} from './itembutton';\nimport {ItemContainerButtonSlot} from './itemcontainerbuttonslot';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('ItemContainerDialog')\nexport class ItemContainerDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly items: ArrayList<Item>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, items: ArrayList<Item>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.items = items;\n    this.modal = true;\n\n    items.addListener({onAdd: (_, item) => this.addItem(item), onRemove: (_, item) => this.removeItem(item)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ItemContainerButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(item: Item) {\n    const existingButton = this.getExistingButton(item);\n    if (existingButton) {\n      existingButton.stackItems.add(item);\n      return;\n    }\n\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new ItemButton(freeSlot.rect.clone(), this.items, item));\n    }\n  }\n\n  private removeItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        if (button.stackItems.contains(item)) {\n          button.stackItems.remove(item);\n          if (button.stackItems.length === 0) {\n            buttonSlot.remove(button);\n          }\n        }\n      }\n    }\n  }\n\n  private getExistingButton(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof ItemButton) {\n        const existing = button.stackItems.get(0);\n        if (item.isStackable(existing)) {\n          return button;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Key} from '../keys';\nimport {Rect} from '../rect';\n\nimport {ButtonSlot} from './buttonslot';\nimport {ItemButton} from './itembutton';\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('ItemContainerButtonSlot')\nexport class ItemContainerButtonSlot extends ButtonSlot {\n\n  constructor(rect: Rect, shortcutKey?: Key) {\n    super(rect, shortcutKey);\n  }\n\n  onDrop(panel: Panel) {\n    return panel instanceof ItemButton;\n  }\n}\n","import {Color} from '../color';\nimport {StandardColors} from '../palettes/standardcolors';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\nimport { Vec2 } from '../vec2';\n\n@Serializable('MessageLog')\nexport class MessageLog extends Panel {\n  private readonly messages: Message[];\n  readonly maxItems: number;\n\n  constructor(rect: Rect, maxItems?: number) {\n    super(rect);\n    this.messages = [];\n    this.maxItems = maxItems || 5;\n  }\n\n  add(message: string|Message|Panel, color?: Color) {\n    if (message instanceof Panel) {\n      // TODO:  This is a weird artifact of history\n      // The original API was designed before Panels were hierarchical.\n      return;\n    }\n\n    if (message instanceof Message) {\n      this.messages.push(message);\n    } else {\n      this.messages.push(new Message(message, color || StandardColors.WHITE));\n    }\n\n    if (this.messages.length > this.maxItems) {\n      this.messages.splice(0, this.messages.length - this.maxItems);\n    }\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const pos = new Vec2(this.rect.x, this.rect.y);\n\n    if (pos.y < 0) {\n      // Negative y value indicates attached to bottom of screen\n      const bottom = this.gui.app.size.height + pos.y + this.rect.height;\n      pos.y = bottom - this.messages.length * 10;\n    }\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      msg.draw(this.gui.app, pos);\n      pos.x = 0;\n      pos.y += 10;\n    }\n  }\n\n  handleInput() {\n    return false;\n  }\n}","import {Message} from '../message';\nimport {Rect} from '../rect';\n\nimport {Panel} from './panel';\nimport { Serializable } from '../serializable';\n\n@Serializable('MessagePanel')\nexport class MessagePanel extends Panel {\n  readonly message: Message;\n\n  constructor(rect: Rect, message: Message) {\n    super(rect);\n    this.message = message;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const msg = this.message;\n    const dst = this.rect;\n    this.gui.app.drawString(msg.text, dst.x, dst.y, msg.color);\n  }\n}","import {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Dialog} from './dialog';\nimport {SelectOption} from './selectoption';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst LINE_HEIGHT = 10;\n\n@Serializable('SelectDialog')\nexport class SelectDialog extends Dialog {\n  options: SelectOption[];\n  callback: Function;\n\n  constructor(rect: Rect, options: SelectOption[], callback: Function) {\n    super(rect);\n    this.options = options;\n    this.callback = callback;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    super.drawContents();\n    const offset = this.rect;\n    for (let i = 0; i < this.options.length; i++) {\n      const str = String.fromCharCode(65 + i) + ' - ' + this.options[i].name;\n      this.gui.app.drawString(str, offset.x + MARGIN, offset.y + MARGIN + i * LINE_HEIGHT);\n    }\n  }\n\n  handleInput() {\n    if (!this.gui) {\n      return false;\n    }\n\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.gui.app.isKeyPressed(Keys.VK_A + i)) {\n        this.callback(this.options[i]);\n        this.close();\n        return true;\n      }\n    }\n\n    if (this.gui.app.isKeyPressed(Keys.VK_ESCAPE)) {\n      this.close();\n      return true;\n    }\n\n    const mouse = this.gui.app.mouse;\n    const offset = this.rect;\n    if (mouse.isClicked() && mouse.x >= offset.x1 && mouse.x < offset.x2) {\n      if (this.closeButton && mouse.x >= offset.x2 - 16 && mouse.y < offset.y + 16) {\n        this.close();\n        return true;\n      }\n\n      for (let i = 0; i < this.options.length; i++) {\n        const startY = offset.y + MARGIN + i * LINE_HEIGHT;\n        const endY = startY + LINE_HEIGHT;\n        if (mouse.y >= startY && mouse.y < endY) {\n          this.callback(this.options[i]);\n          this.close();\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","import {ArrayList} from '../arraylist';\nimport {Item} from '../item';\nimport {Keys} from '../keys';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ItemShortcutButton} from './itemshortcutbutton';\nimport {Panel} from './panel';\nimport {ShortcutButtonSlot} from './shortcutbuttonslot';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst DEFAULT_SPACING = 2;\n\n@Serializable('ShortcutBar')\nexport class ShortcutBar extends Panel {\n  spacing: number;\n\n  constructor(rect: Rect, count: number, spacing?: number) {\n    super(rect);\n    this.spacing = spacing !== undefined ? spacing : DEFAULT_SPACING;\n\n    for (let i = 0; i < count; i++) {\n      const buttonSlot = new ShortcutButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_1 + i);\n      this.add(buttonSlot);\n    }\n  }\n\n  addTalent(talent: Talent, rightToLeft?: boolean) {\n    if (this.containsTalent(talent)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new TalentButton(slot.rect.clone(), talent, true));\n    }\n  }\n\n  containsTalent(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof TalentButton && slot.button.talent === talent) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addItem(items: ArrayList<Item>, item: Item, rightToLeft?: boolean) {\n    if (this.containsItem(item)) {\n      return;\n    }\n    const slot = this.getFreeSlot(!!rightToLeft);\n    if (slot) {\n      slot.add(new ItemShortcutButton(slot.rect.clone(), items, item));\n    }\n  }\n\n  containsItem(item: Item) {\n    for (let i = 0; i < this.children.length; i++) {\n      const slot = this.children.get(i) as ShortcutButtonSlot;\n      if (slot.button && slot.button instanceof ItemShortcutButton && item.isStackable(slot.button.shortcutItem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawContents() {\n    if (!this.gui) {\n      return;\n    }\n\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    if (!buttonRect) {\n      return;\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children.get(i);\n      child.rect.x = this.rect.x + i * (buttonRect.width + DEFAULT_SPACING);\n      child.rect.y = this.rect.y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n    }\n\n    this.drawChildren();\n  }\n\n  private getFreeSlot(rightToLeft: boolean) {\n    if (rightToLeft) {\n      // Right to left\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    } else {\n      // Left to right\n      for (let i = 0; i < this.children.length; i++) {\n        const slot = this.children.get(i) as ShortcutButtonSlot;\n        if (!slot.button) {\n          return slot;\n        }\n      }\n    }\n    return undefined;\n  }\n}","import {ArrayList} from '../arraylist';\nimport {Keys} from '../keys';\nimport {Message} from '../message';\nimport {Rect} from '../rect';\nimport {Talent} from '../talent';\n\nimport {ButtonSlot} from './buttonslot';\nimport {Dialog} from './dialog';\nimport {TalentButton} from './talentbutton';\nimport { Serializable } from '../serializable';\n\nconst MARGIN = 4;\nconst BUTTON_SPACING = 2;\n\n@Serializable('TalentsDialog')\nexport class TalentsDialog extends Dialog {\n  readonly messages: Message[];\n  readonly capacity: number;\n  readonly talents: ArrayList<Talent>;\n\n  constructor(rect: Rect, messages: Message[], capacity: number, talents: ArrayList<Talent>) {\n    super(rect);\n    this.messages = messages;\n    this.capacity = capacity;\n    this.talents = talents;\n    this.modal = true;\n\n    talents.addListener({onAdd: (_, talent) => this.addItem(talent), onRemove: (_, talent) => this.removeItem(talent)});\n\n    for (let i = 0; i < capacity; i++) {\n      // Slots are repositioned at render time\n      this.add(new ButtonSlot(new Rect(0, 0, 24, 24), Keys.VK_A + i));\n    }\n  }\n\n  private addItem(talent: Talent) {\n    const freeSlot = this.getNextFreeSlot();\n    if (freeSlot) {\n      freeSlot.add(new TalentButton(freeSlot.rect.clone(), talent));\n    }\n  }\n\n  private removeItem(talent: Talent) {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      const button = buttonSlot.button;\n      if (button && button instanceof TalentButton) {\n        if (button.talent === talent) {\n          buttonSlot.remove(button);\n        }\n      }\n    }\n  }\n\n  private getNextFreeSlot() {\n    for (let i = 0; i < this.children.length; i++) {\n      const buttonSlot = this.children.get(i) as ButtonSlot;\n      if (!buttonSlot.button) {\n        return buttonSlot;\n      }\n    }\n    return undefined;\n  }\n\n  drawContents() {\n    super.drawContents();\n\n    if (!this.gui || !this.gui.renderer.buttonSlotRect) {\n      return;\n    }\n\n    // Update positions of button slots\n    const containerRect = this.rect;\n    const buttonRect = this.gui.renderer.buttonSlotRect;\n    let x = containerRect.x + MARGIN;\n    let y = containerRect.y + MARGIN;\n\n    for (let i = 0; i < this.messages.length; i++) {\n      const msg = this.messages[i];\n      this.gui.app.drawString(msg.text, x, y, msg.color);\n      y += 10;\n    }\n\n    for (let i = 0; i < this.capacity; i++) {\n      const child = this.children.get(i);\n      child.rect.x = x;\n      child.rect.y = y;\n      child.rect.width = buttonRect.width;\n      child.rect.height = buttonRect.height;\n\n      x += buttonRect.width + BUTTON_SPACING;\n      if (x > containerRect.x2 - buttonRect.width - MARGIN) {\n        x = containerRect.x + MARGIN;\n        y += buttonRect.height + BUTTON_SPACING;\n      }\n    }\n\n    this.rect.height = (y + MARGIN) - containerRect.y;\n    this.drawChildren();\n  }\n}","import {Actor} from './actor';\nimport {Entity} from './entity';\nimport {Message} from './message';\nimport { Serializable } from './serializable';\n\n@Serializable('Item')\nexport class Item extends Entity {\n  tooltipMessages?: Message[];\n\n  /**\n   * Returns true if this item can be stacked with the other item\n   * in containers such as chests and bags.\n   *\n   * By default, items are stackable if they have the same name.\n   * Overriding classes can change this logic.\n   *\n   * @param other Other item to stack with.\n   */\n  isStackable(other: Item) {\n    return this.name === other.name;\n  }\n\n  onBump(player: Actor) {\n    player.pickup(this);\n    player.moveToward(this.x, this.y);\n    return true;\n  }\n\n  onPickup(user: Actor) {}\n\n  onUse(user: Actor): boolean {\n    return false;\n  }\n\n  onUpdateTooltip() { }\n}","\nimport {fromRgb} from '../color';\n\n/**\n * https://en.wikipedia.org/wiki/Color_Graphics_Adapter\n */\nexport enum CgaColors {\n  BLACK = fromRgb(0, 0, 0),\n  BLUE = fromRgb(0x00, 0x00, 0xFF),\n  GREEN = fromRgb(0x00, 0xAA, 0x00),\n  CYAN = fromRgb(0x00, 0xAA, 0xAA),\n  RED = fromRgb(0xAA, 0x00, 0x00),\n  MAGENTA = fromRgb(0xAA, 0x00, 0xAA),\n  BROWN = fromRgb(0xAA, 0x55, 0x00),\n  LIGHT_GRAY = fromRgb(0xAA, 0xAA, 0xAA),\n  DARK_GRAY = fromRgb(0x55, 0x55, 0x55),\n  LIGHT_BLUE = fromRgb(0x55, 0x55, 0xFF),\n  LIGHT_GREEN = fromRgb(0x55, 0xFF, 0x55),\n  LIGHT_CYAN = fromRgb(0xFF, 0xFF, 0xFF),\n  LIGHT_RED = fromRgb(0xFF, 0x55, 0x55),\n  LIGHT_MAGENTA = fromRgb(0xFF, 0x55, 0xFF),\n  YELLOW = fromRgb(0xFF, 0xFF, 0x55),\n  WHITE = fromRgb(0xFF, 0xFF, 0xFF),\n}\n","\nimport {fromRgb} from '../color';\n\n/**\n * https://www.romanzolotarev.com/pico-8-color-palette/\n * https://twitter.com/lexaloffle/status/732649035165667329\n */\nexport enum Pico8Colors {\n  BLACK = fromRgb(0, 0, 0),\n  DARK_BLUE = fromRgb(29, 43, 83),\n  DARK_PURPLE = fromRgb(126, 37, 83),\n  DARK_GREEN = fromRgb(0, 135, 81),\n  BROWN = fromRgb(171, 82, 54),\n  DARK_GRAY = fromRgb(95, 87, 79),\n  LIGHT_GRAY = fromRgb(194, 195, 199),\n  WHITE = fromRgb(255, 241, 232),\n  RED = fromRgb(255, 0, 77),\n  ORANGE = fromRgb(255, 163, 0),\n  YELLOW = fromRgb(255, 236, 39),\n  GREEN = fromRgb(0, 228, 54),\n  BLUE = fromRgb(41, 173, 255),\n  INDIGO = fromRgb(131, 118, 156),\n  PINK = fromRgb(255, 119, 168),\n  PEACH = fromRgb(255, 204, 170),\n}\n","import { Game } from \"./game\";\nimport { RenderSet } from \"./renderset\";\nimport { App } from \"./app\";\nimport { GUI } from \"./gui\";\nimport { Panel } from \"./gui/panel\";\nimport { getSerializeMetadata } from \"./serializemetadata\";\nimport { TileMap } from \"./tilemap/tilemap\";\nimport { TileMapRenderer } from \"./tilemap/tilemaprenderer\";\n\nexport class Serializer {\n  readonly typeLists: any = {};\n\n  serialize(obj: any): any {\n    const root = this.serializeObject(obj);\n    return {\n      'root': root,\n      'refs': this.typeLists\n    }\n  }\n\n  private serializeObject(obj: any): any {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    const objType = typeof obj;\n    if (objType === 'boolean' || objType === 'number' || objType === 'string') {\n      return obj;\n    }\n\n    if (!obj.constructor) {\n      throw new Error('Object does not have a constructor');\n    }\n\n    if (obj instanceof App ||\n      obj instanceof GUI ||\n      obj instanceof Panel ||\n      obj instanceof RenderSet ||\n      obj instanceof TileMap ||\n      obj instanceof TileMapRenderer ||\n      obj instanceof Function) {\n      return undefined;\n    }\n\n    if (obj instanceof Array) {\n      return this.serializeArray(obj);\n    }\n\n    const metadata = getSerializeMetadata(obj.constructor);\n    const className = metadata.className;\n    const refType = !metadata.valueType;\n    const result: any = {};\n\n    if (className && refType) {\n      if (obj['_i'] !== undefined) {\n        return {\n          '_c': className,\n          '_i': obj['_i']\n        }\n      }\n\n      let typeList = this.typeLists[className];\n      if (!typeList) {\n        typeList = [];\n        this.typeLists[className] = typeList;\n      }\n      obj['_i'] = typeList.length;\n      typeList.push(result);\n    }\n\n    const properties = Object.getOwnPropertyNames(obj);\n    let propertyCount = 0;\n\n    for (let i = 0; i < properties.length; i++) {\n      const key = properties[i];\n      const value = (obj as any)[key];\n\n      if (key === '_i') {\n        continue;\n      }\n\n      if (obj instanceof Game) {\n        if (key === 'tooltip' || key === 'tooltipElement' || key === 'messageLog') {\n          continue;\n        }\n      }\n\n      const serializedValue = this.serializeObject(value);\n      if (serializedValue === undefined) {\n        continue;\n      }\n\n      result[key] = serializedValue;\n      propertyCount++;\n    }\n\n    if (propertyCount === 0) {\n      // Ignore objects without any properties\n      return undefined;\n    }\n\n    if (className && refType) {\n      return {\n        '_c': className,\n        '_i': obj['_i']\n      };\n    } else {\n      return result;\n    }\n  }\n\n  private serializeArray(a: Array<any>) {\n    const result = [];\n    for (let i = 0; i < a.length; i++) {\n      result.push(this.serializeObject(a[i]));\n    }\n    return result;\n  }\n}\n","import {Ability} from './ability';\nimport {Actor} from './actor';\nimport {Entity} from './entity';\nimport {TileMapCell} from './tilemap/tilemapcell';\nimport { Serializable } from './serializable';\n\n@Serializable('Talent')\nexport class Talent {\n  readonly actor: Actor;\n  readonly ability: Ability;\n  rank: number;\n  cooldown: number;\n\n  constructor(actor: Actor, ability: Ability, rank?: number) {\n    this.actor = actor;\n    this.ability = ability;\n    this.rank = rank || 1;\n    this.cooldown = 0;\n  }\n\n  use(target?: Entity|TileMapCell) {\n    if (this.cooldown > 0) {\n      // Ability still on cooldown\n      return false;\n    }\n\n    this.actor.cast(this.ability, target, () => {\n      this.cooldown = this.ability.cooldown;\n    });\n\n    return true;\n  }\n}\n"],"sourceRoot":""}